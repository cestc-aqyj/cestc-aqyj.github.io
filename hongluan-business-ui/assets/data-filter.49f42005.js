var e=Object.defineProperty,t=Object.getOwnPropertySymbols,a=Object.prototype.hasOwnProperty,n=Object.prototype.propertyIsEnumerable,l=(t,a,n)=>a in t?e(t,a,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[a]=n,d=(e,d)=>{for(var r in d||(d={}))a.call(d,r)&&l(e,r,d[r]);if(t)for(var r of t(d))n.call(d,r)&&l(e,r,d[r]);return e};import{W as r,o,c as s,g as c,v as h,s as m,Y as p,aM as i,q as u,S as b}from"./vue.b4f20c31.js";import{_ as v}from"./index.05d6e7cf.js";import"./hongluan-business.8ae6e7e8.js";import"./highlight.5ad4a187.js";import"./hongluan-icons.9dddef68.js";const g={name:"component-doc",components:{"hb-demo0":function(){const{createTextVNode:e,resolveComponent:t,withCtx:a,createVNode:n,Fragment:l,openBlock:r,createElementBlock:o}=i,s=e("选项1"),c=e("选项2"),h=e("选项3"),m=e("重置值");const{defineComponent:p,ref:u}=i,b=p({setup(){const e=u(null),t=u([]);let a;return{boxVals:t,dataFilterRef:e,searchItems:[{type:"select",label:"测试1",placeholder:"下拉测试",value:"4",name:"prop1",prop:{label:"name",value:"code"},options:[{name:"已驳回3",code:"3"},{name:"已审定4",code:"4"}]},{type:"input",label:"测试2",placeholder:"sss测试",value:"ccc",name:"prop2"},{type:"select",label:"测试3",placeholder:"下拉测试",value:["4"],name:"prop3",multiple:!0,"collapse-tags":!0,options:[{label:"已驳回3",value:"3"},{label:"已审定4",value:"4"}]},{label:"测试4",type:"date",name:"prop4",value:"",placeholder:"请选择日期"},{label:"测试5",type:"timepicker",name:"prop5",value:[],"is-range":!0,"range-separator":"至","start-placeholder":"开始时间","end-placeholder":"结束时间",placeholder:"选择时间范围"},{label:"测试6",type:"daterange",name:"prop6",value:[],placeholder:"请选择日期",display:()=>"date1~date2"},{label:"测试7",type:"slot",slotName:"checkbox",value:""}],boxChanged:()=>{a={display:t.value.map((e=>`选项${e}`)).join("，"),value:t.value,name:"checkbox",type:"slot"},e.value.updateDisplayItem(a)},searchChanged:(e,t,a)=>{console.log(e,t,a)},removeSelectedItem:e=>{e.name===(null==a?void 0:a.name)&&(t.value=[])},resetVal:()=>{e.value.resetFields()}}}});return d({render:function(e,d){const p=t("hl-checkbox"),i=t("hl-checkbox-group"),u=t("hb-data-filter"),b=t("hl-button");return r(),o(l,null,[n(u,{ref:"dataFilterRef",items:e.searchItems,gap:"var(--sm)","max-height":"calc(var(--xxl) * 15)",onSearch:e.searchChanged,onRemoveSelectedItem:e.removeSelectedItem},{checkbox:a((()=>[n(i,{modelValue:e.boxVals,"onUpdate:modelValue":d[0]||(d[0]=t=>e.boxVals=t),onChange:e.boxChanged},{default:a((()=>[n(p,{label:"1"},{default:a((()=>[s])),_:1}),n(p,{label:"2"},{default:a((()=>[c])),_:1}),n(p,{label:"3"},{default:a((()=>[h])),_:1})])),_:1},8,["modelValue","onChange"])])),_:1},8,["items","onSearch","onRemoveSelectedItem"]),n(b,{class:"m-l-md",onClick:e.resetVal},{default:a((()=>[m])),_:1},8,["onClick"])],64)}},b)}(),"hb-demo1":function(){const{createTextVNode:e,resolveComponent:t,withCtx:a,createVNode:n,openBlock:l,createBlock:r}=i,o=e(" 高级搜索 "),s=e(" 高级搜索 ");const{defineComponent:c,ref:h}=i,m=c({setup(){const e=h(null),t=h([]);let a;return{boxVals:t,dataFilterRef:e,searchItems:[{type:"select",label:"测试1",placeholder:"下拉测试",value:"4",name:"prop1",prop:{label:"name",value:"code"},options:[{name:"已驳回3",code:"3"},{name:"已审定4",code:"4"}]},{type:"input",label:"测试2",placeholder:"sss测试",value:"ccc",name:"prop2"},{type:"select",label:"测试3",placeholder:"下拉测试",value:["4"],name:"prop3",multiple:!0,"collapse-tags":!0,options:[{label:"已驳回3",value:"3"},{label:"已审定4",value:"4"}]},{label:"测试4",type:"date",name:"prop4",value:"",placeholder:"请选择日期"},{label:"测试5",type:"timepicker",name:"prop5",value:[],"is-range":!0,"range-separator":"至","start-placeholder":"开始时间","end-placeholder":"结束时间",placeholder:"选择时间范围"},{label:"测试6",type:"daterange",name:"prop6",value:[],placeholder:"请选择日期",display:()=>"date1~date2"},{label:"测试7",type:"slot",slotName:"checkbox",value:""}],boxChanged:()=>{a={display:t.value.map((e=>`选项${e}`)).join("，"),value:t.value,name:"checkbox",type:"slot"},e.value.updateDisplayItem(a)},searchChanged:(e,t,a)=>{console.log(e,t,a)},removeSelectedItem:e=>{e.name===(null==a?void 0:a.name)&&(t.value=[])}}}});return d({render:function(e,d){const c=t("hb-data-filter"),h=t("two-airplay"),m=t("hl-icon"),p=t("hl-group");return l(),r(p,{gap:"var(--md)"},{default:a((()=>[n(c,{ref:"dataFilterRef",items:e.searchItems,gap:"var(--sm)",onSearch:e.searchChanged,onRemoveSelectedItem:e.removeSelectedItem},{default:a((()=>[o])),_:1},8,["items","onSearch","onRemoveSelectedItem"]),n(c,{ref:"dataFilterRef",items:e.searchItems,gap:"var(--sm)",onSearch:e.searchChanged,onRemoveSelectedItem:e.removeSelectedItem},{icon:a((()=>[n(m,null,{default:a((()=>[n(h)])),_:1})])),_:1},8,["items","onSearch","onRemoveSelectedItem"]),n(c,{ref:"dataFilterRef",items:e.searchItems,"icon-position":"left",gap:"var(--sm)",onSearch:e.searchChanged,onRemoveSelectedItem:e.removeSelectedItem},{icon:a((()=>[n(m,null,{default:a((()=>[n(h)])),_:1})])),default:a((()=>[s])),_:1},8,["items","onSearch","onRemoveSelectedItem"])])),_:1})}},m)}()}},f=c("h1",null,"DataFilter 数据过滤器",-1),y=c("p",null,"弹窗形式的数据过滤器，可以嵌入到TableToolbar中，比起TableSearchbar更省空间。",-1),x=c("h2",{id:"ji-chu-yong-fa"},[c("a",{class:"header-anchor",href:"#ji-chu-yong-fa"}),u(" 基础用法")],-1),I=c("div",null,[c("p",null,"本组件所有功能均不会自动处理自定义slot类型的搜索项")],-1),k=c("pre",null,[c("code",{class:"html"}," <template>\n  <hb-data-filter\n    ref=\"dataFilterRef\"\n    :items=\"searchItems\"\n    gap=\"var(--sm)\"\n    max-height=\"calc(var(--xxl) * 15)\"\n    @search=\"searchChanged\"\n    @removeSelectedItem=\"removeSelectedItem\"\n  >\n    <template #checkbox>\n      <hl-checkbox-group v-model=\"boxVals\" @change=\"boxChanged\">\n        <hl-checkbox label=\"1\">选项1</hl-checkbox>\n        <hl-checkbox label=\"2\">选项2</hl-checkbox>\n        <hl-checkbox label=\"3\">选项3</hl-checkbox>\n      </hl-checkbox-group>\n    </template>\n  </hb-data-filter>\n  <hl-button class=\"m-l-md\" @click=\"resetVal\">重置值</hl-button>\n</template>\n\n<script>\nimport { defineComponent, ref } from 'vue'\nexport default defineComponent({\n  setup() {\n    const dataFilterRef = ref(null)\n    const boxVals = ref([])\n    const searchItems = [\n      {\n        type: 'select',\n        label: '测试1',\n        placeholder: '下拉测试',\n        value: '4',\n        name: 'prop1',\n        prop: {\n          label: 'name',\n          value: 'code',\n        },\n        options: [\n          { name: '已驳回3', code: '3' },\n          { name: '已审定4', code: '4' },\n        ],\n      },\n      {\n        type: 'input',\n        label: '测试2',\n        placeholder: 'sss测试',\n        value: 'ccc',\n        name: 'prop2',\n      },\n      {\n        type: 'select',\n        label: '测试3',\n        placeholder: '下拉测试',\n        value: ['4'],\n        name: 'prop3',\n        multiple: true,\n        'collapse-tags': true,\n        options: [\n          { label: '已驳回3', value: '3' },\n          { label: '已审定4', value: '4' },\n        ],\n      },\n      {\n        label: '测试4',\n        type: 'date',\n        name: 'prop4',\n        value: '',\n        placeholder: '请选择日期',\n      },\n      {\n        label: '测试5',\n        type: 'timepicker',\n        name: 'prop5',\n        value: [],\n        'is-range': true,\n        'range-separator': '至',\n        'start-placeholder': '开始时间',\n        'end-placeholder': '结束时间',\n        'placeholder': '选择时间范围',\n      },\n      {\n        label: '测试6',\n        type: 'daterange',\n        name: 'prop6',\n        value: [],\n        placeholder: '请选择日期',\n        display: () => 'date1~date2',\n      },\n      {\n        label: '测试7',\n        type: 'slot',\n        slotName: 'checkbox',\n        value: '',\n      },\n    ]\n\n    let checkboxItem\n    const boxChanged = () => {\n      checkboxItem = {\n        display: boxVals.value.map(v => `选项${v}`).join('，'),\n        value: boxVals.value,\n        name: 'checkbox', // 需要唯一值\n        type: 'slot',\n      }\n      dataFilterRef.value.updateDisplayItem(checkboxItem)\n    }\n    const removeSelectedItem = item => {\n      if (item.name === checkboxItem?.name) {\n        boxVals.value = []\n      }\n    }\n\n    const searchChanged = (urlParams, mapParams, originalParams) => {\n      console.log(urlParams, mapParams, originalParams)\n    }\n\n    const resetVal = () => {\n      dataFilterRef.value.resetFields()\n    }\n\n    return {\n      boxVals,\n      dataFilterRef,\n      searchItems,\n      boxChanged,\n      searchChanged,\n      removeSelectedItem,\n      resetVal,\n    }\n  },\n})\n<\/script>\n")],-1),S=c("h2",{id:"zi-ding-yi-an-niu-nei-rong"},[c("a",{class:"header-anchor",href:"#zi-ding-yi-an-niu-nei-rong"}),u(" 自定义按钮内容")],-1),C=c("pre",null,[c("code",{class:"html"}," <template>\n  <hl-group gap=\"var(--md)\">\n    <hb-data-filter ref=\"dataFilterRef\" :items=\"searchItems\" gap=\"var(--sm)\" @search=\"searchChanged\" @removeSelectedItem=\"removeSelectedItem\">\n      <template #default> 高级搜索 </template>\n    </hb-data-filter>\n    <hb-data-filter ref=\"dataFilterRef\" :items=\"searchItems\" gap=\"var(--sm)\" @search=\"searchChanged\" @removeSelectedItem=\"removeSelectedItem\">\n      <template #icon>\n        <hl-icon><two-airplay /></hl-icon>\n      </template>\n    </hb-data-filter>\n    <hb-data-filter\n      ref=\"dataFilterRef\"\n      :items=\"searchItems\"\n      icon-position=\"left\"\n      gap=\"var(--sm)\"\n      @search=\"searchChanged\"\n      @removeSelectedItem=\"removeSelectedItem\"\n    >\n      <template #icon>\n        <hl-icon><two-airplay /></hl-icon>\n      </template>\n      <template #default> 高级搜索 </template>\n    </hb-data-filter>\n  </hl-group>\n</template>\n\n<script>\nimport { defineComponent, ref } from 'vue'\n\nexport default defineComponent({\n  setup() {\n    const dataFilterRef = ref(null)\n    const boxVals = ref([])\n    const searchItems = [\n      {\n        type: 'select',\n        label: '测试1',\n        placeholder: '下拉测试',\n        value: '4',\n        name: 'prop1',\n        prop: {\n          label: 'name',\n          value: 'code',\n        },\n        options: [\n          { name: '已驳回3', code: '3' },\n          { name: '已审定4', code: '4' },\n        ],\n      },\n      {\n        type: 'input',\n        label: '测试2',\n        placeholder: 'sss测试',\n        value: 'ccc',\n        name: 'prop2',\n      },\n      {\n        type: 'select',\n        label: '测试3',\n        placeholder: '下拉测试',\n        value: ['4'],\n        name: 'prop3',\n        multiple: true,\n        'collapse-tags': true,\n        options: [\n          { label: '已驳回3', value: '3' },\n          { label: '已审定4', value: '4' },\n        ],\n      },\n      {\n        label: '测试4',\n        type: 'date',\n        name: 'prop4',\n        value: '',\n        placeholder: '请选择日期',\n      },\n      {\n        label: '测试5',\n        type: 'timepicker',\n        name: 'prop5',\n        value: [],\n        'is-range': true,\n        'range-separator': '至',\n        'start-placeholder': '开始时间',\n        'end-placeholder': '结束时间',\n        placeholder: '选择时间范围',\n      },\n      {\n        label: '测试6',\n        type: 'daterange',\n        name: 'prop6',\n        value: [],\n        placeholder: '请选择日期',\n        display: () => 'date1~date2',\n      },\n      {\n        label: '测试7',\n        type: 'slot',\n        slotName: 'checkbox',\n        value: '',\n      },\n    ]\n\n    let checkboxItem\n    const boxChanged = () => {\n      checkboxItem = {\n        display: boxVals.value.map(v => `选项${v}`).join('，'),\n        value: boxVals.value,\n        name: 'checkbox', // 需要唯一值\n        type: 'slot',\n      }\n      dataFilterRef.value.updateDisplayItem(checkboxItem)\n    }\n    const removeSelectedItem = item => {\n      if (item.name === checkboxItem?.name) {\n        boxVals.value = []\n      }\n    }\n\n    const searchChanged = (urlParams, mapParams, originalParams) => {\n      console.log(urlParams, mapParams, originalParams)\n    }\n\n    return {\n      boxVals,\n      dataFilterRef,\n      searchItems,\n      boxChanged,\n      searchChanged,\n      removeSelectedItem,\n    }\n  },\n})\n<\/script>\n")],-1),V=b('<div class="md-tip"><p><code>search</code>事件参数分别为：<code>urlParams</code>，字符串参数，会自动在time/date range类型的name结尾添加Start/End；<code>mapParams</code>，object类型的参数，同样会处理time/date range类型；<code>originalParams</code>，object类型的参数，原始的数据。</p></div><h2 id="attributes"><a class="header-anchor" href="#attributes"></a> Attributes</h2><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>fill</td><td>填充样式</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>icon-position</td><td>Icon位置</td><td>string</td><td>left / right</td><td>right</td></tr><tr><td>title</td><td>标题</td><td>string</td><td>—</td><td>数据筛选</td></tr><tr><td>item-gap</td><td>label与表单元素间距</td><td>string</td><td>—</td><td>-</td></tr><tr><td>gap</td><td>表单元素与表单元素间距</td><td>string</td><td>—</td><td>-</td></tr><tr><td>width</td><td>弹窗宽度</td><td>number / string</td><td>—</td><td>380</td></tr><tr><td>max-height</td><td>选项区域最大高</td><td>string</td><td>—</td><td>300px</td></tr><tr><td>max</td><td>参见Badge组件max参数</td><td>number</td><td>—</td><td>99</td></tr><tr><td>search-label</td><td>搜索按钮文字</td><td>string</td><td>—</td><td>搜索</td></tr><tr><td>items</td><td>搜索项，具体属性参见下面文档</td><td>array</td><td>—</td><td>[]</td></tr></tbody></table><h2 id="items-attributes"><a class="header-anchor" href="#items-attributes"></a> items Attributes</h2><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>type</td><td>过滤框类型</td><td>string</td><td>input / select / slot / timepicker / DatePicker支持的所有类型</td><td>input</td></tr><tr><td>label</td><td>表单标题</td><td>string</td><td>--</td><td>--</td></tr><tr><td>value</td><td>默认值</td><td>--</td><td>--</td><td>--</td></tr><tr><td>name</td><td>表单的名称，值需要唯一</td><td>string</td><td>--</td><td>--</td></tr><tr><td>prop</td><td>配置select下拉项</td><td>object {label: string, value: string}</td><td>--</td><td>{ label: &#39;label&#39;, value: &#39;value&#39;}</td></tr><tr><td>options</td><td>select下拉项</td><td>array</td><td>--</td><td>[]</td></tr><tr><td>display</td><td>展示选中项回调函数，如果有此回调函数，则会展示返回的非空值</td><td>() =&gt; string</td><td>--</td><td>--</td></tr></tbody></table><h2 id="xuan-zhong-xiang-items-attributes"><a class="header-anchor" href="#xuan-zhong-xiang-items-attributes"></a> 选中项 items Attributes</h2><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>type</td><td>过滤框类型</td><td>string</td><td>--</td><td>--</td></tr><tr><td>label</td><td>表单标题</td><td>string</td><td>--</td><td>--</td></tr><tr><td>value</td><td>默认值</td><td>--</td><td>--</td><td>--</td></tr><tr><td>name</td><td>表单的名称，值需要唯一</td><td>string</td><td>--</td><td>--</td></tr></tbody></table><h2 id="events"><a class="header-anchor" href="#events"></a> Events</h2><table><thead><tr><th>事件名称</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>search</td><td>点击搜索时触发</td><td>urlParams:string, mapParams: object, originalParams: object</td></tr><tr><td>remove-selected-item</td><td>删除已选择项时触发</td><td>item</td></tr></tbody></table><h2 id="methods"><a class="header-anchor" href="#methods"></a> Methods</h2><table><thead><tr><th>方法名</th><th>说明</th><th>参数</th></tr></thead><tbody><tr><td>getDisplayItemsCount</td><td>返回已经选中项的数量</td><td>--</td></tr><tr><td>removeDisplayItem</td><td>手工删除某一个选中项</td><td>选中项item</td></tr><tr><td>updateDisplayItem</td><td>添加或者更新一个选中项，通过对比name进行查找</td><td>选中项item</td></tr><tr><td>resetFields</td><td>重置搜索字段为初始值</td><td>names: string[]，指定要重置的字段，不传重置所有字段。同时触发search事件</td></tr></tbody></table><h2 id="slots"><a class="header-anchor" href="#slots"></a> Slots</h2><table><thead><tr><th>Name</th><th>说明</th></tr></thead><tbody><tr><td>-</td><td>自定义按钮文字内容，优先级低于reference</td></tr><tr><td>icon</td><td>自定义按钮Icon，优先级低于reference</td></tr><tr><td>reference</td><td>自定义Popover的reference，当自定义时，需要自行处理Badge等功能</td></tr></tbody></table>',13);var R=v(g,[["render",function(e,t,a,n,l,d){const i=r("hb-demo0"),u=r("demo-block"),b=r("hb-demo1"),v=r("right-nav");return o(),s(p,null,[c("section",null,[f,y,x,h(u,{fs:""},{source:m((()=>[h(i)])),highlight:m((()=>[k])),default:m((()=>[I])),_:1}),S,h(u,{fs:""},{source:m((()=>[h(b)])),highlight:m((()=>[C])),_:1}),V]),h(v)],64)}]]);export{R as default};
