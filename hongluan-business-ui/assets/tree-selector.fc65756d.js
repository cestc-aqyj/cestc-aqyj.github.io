var e=Object.defineProperty,t=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,d=Object.prototype.propertyIsEnumerable,a=(t,l,d)=>l in t?e(t,l,{enumerable:!0,configurable:!0,writable:!0,value:d}):t[l]=d;import{W as n,o as r,c as s,g as o,v as i,s as c,Y as h,aL as b,_ as p,aK as m}from"./vue.ddaf237d.js";import{_ as u}from"./index.0f3a575d.js";import"./hongluan-business.f987da2d.js";import"./highlight.5ad4a187.js";import"./hongluan-icons.b6c88e45.js";const f={name:"component-doc",components:{"hb-demo0":function(){const{resolveComponent:e,createVNode:n,withCtx:r,createTextVNode:s,createElementVNode:o,Fragment:i,openBlock:c,createElementBlock:h}=b,p={class:"m-t-md"},m={class:"m-t-md"},u=s(" 可选任意节点："),f={class:"m-t-md"},v=s(" 多选："),y={class:"m-t-md"},g=s(" 禁用："),V={class:"m-t-md"},x=s(" 可清空："),w={class:"m-t-md"},N=s(" 可搜索："),k={class:"m-t-md"},T=s(" 折叠多选项：");const{defineComponent:P,ref:j,reactive:C,nextTick:S}=b;return((e,n)=>{for(var r in n||(n={}))l.call(n,r)&&a(e,r,n[r]);if(t)for(var r of t(n))d.call(n,r)&&a(e,r,n[r]);return e})({render:function(t,l){const d=e("two-point"),a=e("hl-icon"),s=e("hb-tree-selector"),b=e("hl-switch");return c(),h(i,null,[n(s,{modelValue:t.selectedNodes,"onUpdate:modelValue":l[0]||(l[0]=e=>t.selectedNodes=e),clearable:t.clearable,filterable:t.filterable,"collapse-tags":t.collapseTags,disabled:t.disabled,"tree-props":t.treeProps},{prefix:r((()=>[n(a,null,{default:r((()=>[n(d)])),_:1})])),_:1},8,["modelValue","clearable","filterable","collapse-tags","disabled","tree-props"]),o("div",p,[o("div",m,[u,n(b,{modelValue:t.treeProps.checkStrictly,"onUpdate:modelValue":l[1]||(l[1]=e=>t.treeProps.checkStrictly=e),type:"primary"},null,8,["modelValue"])]),o("div",f,[v,n(b,{modelValue:t.treeProps.showCheckbox,"onUpdate:modelValue":l[2]||(l[2]=e=>t.treeProps.showCheckbox=e),type:"primary",onChange:t.changeValues},null,8,["modelValue","onChange"])]),o("div",y,[g,n(b,{modelValue:t.disabled,"onUpdate:modelValue":l[3]||(l[3]=e=>t.disabled=e),type:"primary"},null,8,["modelValue"])]),o("div",V,[x,n(b,{modelValue:t.clearable,"onUpdate:modelValue":l[4]||(l[4]=e=>t.clearable=e),type:"primary"},null,8,["modelValue"])]),o("div",w,[N,n(b,{modelValue:t.filterable,"onUpdate:modelValue":l[5]||(l[5]=e=>t.filterable=e),type:"primary"},null,8,["modelValue"])]),o("div",k,[T,n(b,{modelValue:t.collapseTags,"onUpdate:modelValue":l[6]||(l[6]=e=>t.collapseTags=e),type:"primary"},null,8,["modelValue"])])])],64)}},P({setup(){const e=j("2"),t=j(!0),l=j(!1),d=j(!1),a=j(!1),n=C({nodeKey:"id",checkStrictly:!0,showCheckbox:!1,filterNodeMethod:(e,t)=>!e||-1!==t.label.indexOf(e),data:[{label:"新疆维吾尔自治区",id:"1",childrens:[{label:"乌鲁木齐市",id:"2",childrens:[{label:"达坂城区",id:"7",childrens:[]},{label:"头屯河区",id:"8",childrens:[]},{label:"乌鲁木齐县",id:"9",childrens:[{label:"测试乡镇测试乡镇测试乡镇测试乡镇测试乡镇测试乡镇测试乡镇",id:"8-1",childrens:[]},{label:"测试乡镇2",id:"8-2",childrens:[]},{label:"测试乡镇3",id:"8-3",childrens:[]}]}]},{label:"克拉玛依市",id:"3",disabled:!0,childrens:[{label:"克拉玛依区",id:"10",disabled:!0,childrens:[]},{label:"白碱滩区",id:"11",disabled:!0,childrens:[]},{label:"独山子区",id:"12",disabled:!0,childrens:[]}]},{label:"吐鲁番地区",id:"4",childrens:[]},{label:"哈密地区",id:"5",childrens:[]},{label:"昌吉回族自治州",id:"6",childrens:[]}]}],props:{children:"childrens",label:"label"}});return{changeValues:t=>{t?(e.value="",S((()=>{e.value=["2"]}))):(e.value=[],S((()=>{e.value="2"})))},selectedNodes:e,clearable:t,disabled:l,filterable:d,collapseTags:a,treeProps:n}}}))}()}},v=o("h1",null,"TreeSelector 树形选择器",-1),y=o("p",null,"下拉树形选择器，支持单选多选，由Selector以及Tree组合而成。",-1),g=o("h2",{id:"ji-chu-yong-fa"},[o("a",{class:"header-anchor",href:"#ji-chu-yong-fa"}),p(" 基础用法")],-1),V=o("div",null,[o("p",null,"设置的树所有属性都将直接透传给树组件，可以设置默认展开节点，是否全部展开等属性")],-1),x=o("pre",null,[o("code",{class:"html"}," <template>\n  <hb-tree-selector\n    v-model=\"selectedNodes\"\n    :clearable=\"clearable\"\n    :filterable=\"filterable\"\n    :collapse-tags=\"collapseTags\"\n    :disabled=\"disabled\"\n    :tree-props=\"treeProps\"\n  >\n    <template #prefix>\n      <hl-icon><two-point /></hl-icon>\n    </template>\n  </hb-tree-selector>\n  <div class=\"m-t-md\">\n    <div class=\"m-t-md\">\n      可选任意节点：<hl-switch v-model=\"treeProps.checkStrictly\" type=\"primary\" />\n    </div>\n    <div class=\"m-t-md\">\n      多选：<hl-switch v-model=\"treeProps.showCheckbox\" type=\"primary\" @change=\"changeValues\" />\n    </div>\n    <div class=\"m-t-md\">\n      禁用：<hl-switch v-model=\"disabled\" type=\"primary\" />\n    </div>\n    <div class=\"m-t-md\">\n      可清空：<hl-switch v-model=\"clearable\" type=\"primary\" />\n    </div>\n    <div class=\"m-t-md\">\n      可搜索：<hl-switch v-model=\"filterable\" type=\"primary\" />\n    </div>\n    <div class=\"m-t-md\">\n      折叠多选项：<hl-switch v-model=\"collapseTags\" type=\"primary\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { defineComponent, ref, reactive, nextTick } from 'vue'\nexport default defineComponent({\n  setup() {\n    const selectedNodes = ref('2')\n    const filterNode = (value, data) => {\n      if (!value) return true\n      return data.label.indexOf(value) !== -1\n    }\n    const clearable = ref(true)\n    const disabled = ref(false)\n    const filterable = ref(false)\n    const collapseTags = ref(false)\n    const treeProps = reactive({\n      nodeKey: 'id',\n      checkStrictly: true,\n      showCheckbox: false,\n      filterNodeMethod: filterNode,\n      data: [\n        {\n          label: '新疆维吾尔自治区',\n          id: '1',\n          childrens: [\n            {\n              label: '乌鲁木齐市',\n              id: '2',\n              childrens: [\n                { label: '达坂城区', id: '7', childrens: [] },\n                { label: '头屯河区', id: '8', childrens: [] },\n                {\n                  label: '乌鲁木齐县',\n                  id: '9',\n                  childrens: [\n                    { label: '测试乡镇测试乡镇测试乡镇测试乡镇测试乡镇测试乡镇测试乡镇', id: '8-1', childrens: [] },\n                    { label: '测试乡镇2', id: '8-2', childrens: [] },\n                    { label: '测试乡镇3', id: '8-3', childrens: [] },\n                  ],\n                },\n              ],\n            },\n            {\n              label: '克拉玛依市',\n              id: '3',\n              disabled: true,\n              childrens: [\n                {\n                  label: '克拉玛依区',\n                  id: '10',\n                  disabled: true,\n                  childrens: [],\n                },\n                { label: '白碱滩区', id: '11', disabled: true, childrens: [] },\n                { label: '独山子区', id: '12', disabled: true, childrens: [] },\n              ],\n            },\n            { label: '吐鲁番地区', id: '4', childrens: [] },\n            { label: '哈密地区', id: '5', childrens: [] },\n            { label: '昌吉回族自治州', id: '6', childrens: [] },\n          ],\n        },\n      ],\n      props: {\n        children: 'childrens',\n        label: 'label',\n      },\n    })\n\n    const changeValues = val => {\n      if (val) {\n        selectedNodes.value = ''\n        nextTick(() => {\n          selectedNodes.value = ['2']\n        })\n      } else {\n        selectedNodes.value = []\n        nextTick(() => {\n          selectedNodes.value = '2'\n        })\n      }\n    }\n    return {\n      changeValues,\n      selectedNodes,\n      clearable,\n      disabled,\n      filterable,\n      collapseTags,\n      treeProps,\n    }\n  },\n})\n<\/script>\n")],-1),w=m('<h2 id="attributes"><a class="header-anchor" href="#attributes"></a> Attributes</h2><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>v-model / model-value</td><td>绑定值</td><td>string / number / object / array</td><td>—</td><td>—</td></tr><tr><td>clearable</td><td>是否显示清空</td><td>boolean</td><td>-</td><td>false</td></tr><tr><td>placeholder</td><td>-</td><td>string</td><td>请选择</td><td>-</td></tr><tr><td>placement</td><td>poppover位置，参见Poppover组件定义</td><td>string</td><td>—</td><td>bottom</td></tr><tr><td>size</td><td>input大小，参见Input组件定义</td><td>string</td><td>—</td><td>true</td></tr><tr><td>disabled</td><td>是否启用</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>filterable</td><td>是否可搜索</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>collapse-tags</td><td>是否折叠多选项</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>tree-props</td><td>下拉树属性，参见Tree组件定义。nodeKey为必填项</td><td>object</td><td>—</td><td>-</td></tr></tbody></table><h2 id="slots"><a class="header-anchor" href="#slots"></a> Slots</h2><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>tag</td><td>自定义多选tag显示，参数为{ tag }</td></tr><tr><td>tree-node</td><td>自定义树节点的内容，参数为 { node, data }</td></tr><tr><td>prefix</td><td>自定义前缀</td></tr></tbody></table><h2 id="events"><a class="header-anchor" href="#events"></a> Events</h2><table><thead><tr><th>事件名称</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>change</td><td>当绑定值变化时触发的事件</td><td>更新后的值</td></tr></tbody></table>',6);var N=u(f,[["render",function(e,t,l,d,a,b){const p=n("hb-demo0"),m=n("demo-block"),u=n("right-nav");return r(),s(h,null,[o("section",null,[v,y,g,i(m,{fs:""},{source:c((()=>[i(p)])),highlight:c((()=>[x])),default:c((()=>[V])),_:1}),w]),i(u)],64)}]]);export{N as default};
