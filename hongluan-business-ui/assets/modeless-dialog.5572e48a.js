var t=Object.defineProperty,e=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable,d=(e,l,o)=>l in e?t(e,l,{enumerable:!0,configurable:!0,writable:!0,value:o}):e[l]=o,n=(t,n)=>{for(var a in n||(n={}))l.call(n,a)&&d(t,a,n[a]);if(e)for(var a of e(n))o.call(n,a)&&d(t,a,n[a]);return t};import{W as a,o as s,c as r,i,v as c,s as h,aL as u,aM as g,E as m,aK as p}from"./vue.b9c48aee.js";import{_ as b,H as f}from"./index.c59879b2.js";import"./hongluan-business.74ca0624.js";import"./highlight.5ad4a187.js";import"./hongluan-icons.24045f27.js";const v={name:"component-doc",components:{"hl-demo0":function(){const{toDisplayString:t,createTextVNode:e,resolveComponent:l,withCtx:o,createVNode:d,createElementVNode:a,Fragment:s,openBlock:r,createElementBlock:i}=u,c=a("p",null,"非模态对话框示例",-1);const{defineComponent:h,ref:g,reactive:m}=u,p=h({setup(){const t=g(!1);return{visible:t,show:()=>{t.value=!t.value}}}});return n({render:function(n,a){const h=l("hl-button"),u=l("hb-modeless-dialog");return r(),i(s,null,[d(h,{onClick:n.show},{default:o((()=>[e(t(n.visible?"Hide":"Show"),1)])),_:1},8,["onClick"]),d(u,{modelValue:n.visible,"onUpdate:modelValue":a[0]||(a[0]=t=>n.visible=t),width:"400px",title:"非模态对话框示例"},{default:o((()=>[c])),_:1},8,["modelValue"])],64)}},p)}(),"hl-demo1":function(){const{createTextVNode:t,resolveComponent:e,withCtx:l,createVNode:o,openBlock:d,createBlock:a}=u,s=t("创建"),r=t("手动关闭");const{defineComponent:i,h:c}=u,{ModelessDialogManager:h,HbEmpty:g}=f,m=i({setup:()=>({create:()=>{h.show({id:"my-modelesss-dialog",title:"测试Manager",body:c(g,{description:"空内容"})})},close:()=>{h.get("my-modelesss-dialog").close()}})});return n({render:function(t,n){const i=e("hl-button"),c=e("hl-group");return d(),a(c,{gap:"var(--md)"},{default:l((()=>[o(i,{onClick:t.create},{default:l((()=>[s])),_:1},8,["onClick"]),o(i,{onClick:t.close},{default:l((()=>[r])),_:1},8,["onClick"])])),_:1})}},m)}(),"hl-demo2":function(){const{createTextVNode:t,resolveComponent:e,withCtx:l,createVNode:o,toDisplayString:d,createElementVNode:a,Fragment:s,openBlock:r,createElementBlock:i}=u,c=t("创建"),h=t("最大化"),m=t("折叠"),p=t("显示/隐藏"),b=t("手工关闭"),v=a("br",null,null,-1),y=t("创建多个对话框"),M=a("br",null,null,-1),k=t("折叠所有"),C=t("关闭所有"),w=t("隐藏所有"),A=t("显示所有");const{defineComponent:D,ref:P,reactive:x,h:_}=u,{HlButton:S}=g,{ModelessDialogManager:V}=f,B=D({setup(){const t=P(""),e=P(!1);return{visible:e,create:()=>{V.show({id:"my-modelesss-dialog2",title:"测试Manager，固定ID",body:_("input",{value:t.value,onInput:e=>{t.value=e.target.value}}),footer:_("div",null,[_(S,{type:"primary",class:"m-r-md"},{default:()=>"确定"}),_(S,null,{default:()=>"取消"})])}),e.value=V.get("my-modelesss-dialog2").isShown()},show:()=>{V.get("my-modelesss-dialog2").toggleShow(),e.value=V.get("my-modelesss-dialog2").isShown()},create2:()=>{V.show({title:"测试Manager"})},max:()=>{V.get("my-modelesss-dialog2").toggleMaximize()},collapse:()=>{V.get("my-modelesss-dialog2").toggleCollapse()},close:()=>{V.get("my-modelesss-dialog2").close()},collaseAll:()=>{V.collapseAll()},closeAll:()=>{V.closeAll()},showAll:()=>{V.showAll()},hideAll:()=>{V.hideAll()}}}});return n({render:function(n,a){const u=e("hl-button"),g=e("hl-tag"),f=e("hl-group");return r(),i(s,null,[o(f,{gap:"var(--md)"},{default:l((()=>[o(u,{onClick:n.create},{default:l((()=>[c])),_:1},8,["onClick"]),o(g,null,{default:l((()=>[t("状态："+d(n.visible?"显示":"隐藏"),1)])),_:1}),o(u,{onClick:n.max},{default:l((()=>[h])),_:1},8,["onClick"]),o(u,{onClick:n.collapse},{default:l((()=>[m])),_:1},8,["onClick"]),o(u,{onClick:n.show},{default:l((()=>[p])),_:1},8,["onClick"]),o(u,{onClick:n.close},{default:l((()=>[b])),_:1},8,["onClick"])])),_:1}),v,o(f,{gap:"var(--md)",class:"m-t-md"},{default:l((()=>[o(u,{onClick:n.create2},{default:l((()=>[y])),_:1},8,["onClick"])])),_:1}),M,o(f,{gap:"var(--md)",class:"m-t-md"},{default:l((()=>[o(u,{onClick:n.collaseAll},{default:l((()=>[k])),_:1},8,["onClick"]),o(u,{onClick:n.closeAll},{default:l((()=>[C])),_:1},8,["onClick"]),o(u,{onClick:n.hideAll},{default:l((()=>[w])),_:1},8,["onClick"]),o(u,{onClick:n.showAll},{default:l((()=>[A])),_:1},8,["onClick"])])),_:1})],64)}},B)}(),"hl-demo3":function(){const{createTextVNode:t,resolveComponent:e,withCtx:l,createVNode:o,openBlock:d,createBlock:a}=u,s=t("创建"),r=t("修改对话框属性"),i=t("修改Slot"),c=t("修改Panel属性");const{defineComponent:h,ref:m,reactive:p,h:b}=u,{HlButton:v}=g,{ModelessDialogManager:y}=f,M=h({setup(){const t=m(""),e=p({id:"my-modelesss-dialog3",borderless:!0,bodyPadding:"var(--lg)",title:"测试Manager",body:b("input",{value:t.value,onInput:e=>{t.value=e.target.value}}),footer:b("div",null,[b(v,{type:"primary",class:"m-r-md"},{default:()=>"确定"}),b(v,null,{default:()=>"取消"})])});return{create:()=>{y.show(e)},modifyProp:()=>{e.title="修改对话框标题"},modifyPanel:()=>{e.borderless=!1,e.bodyPadding="var(--sm)"},modifySlot:()=>{e.footer=b("div",{innerHTML:"修改Footer Slot内容"})}}}});return n({render:function(t,n){const h=e("hl-button"),u=e("hl-group");return d(),a(u,{gap:"var(--md)"},{default:l((()=>[o(h,{onClick:t.create},{default:l((()=>[s])),_:1},8,["onClick"]),o(h,{onClick:t.modifyProp},{default:l((()=>[r])),_:1},8,["onClick"]),o(h,{onClick:t.modifySlot},{default:l((()=>[i])),_:1},8,["onClick"]),o(h,{onClick:t.modifyPanel},{default:l((()=>[c])),_:1},8,["onClick"])])),_:1})}},M)}()}},y={class:"doc-main-content"},M={class:"doc-content"},k=i("h1",null,"ModelessDialog 非模态对话框",-1),C=i("p",null,"基于Panel构建的非模态对话框，支持最大化，最小化等功能",-1),w=i("h2",{id:"ji-chu-yong-fa"},[i("a",{class:"header-anchor",href:"#ji-chu-yong-fa"}),m(" 基础用法")],-1),A=i("p",null,"可以通过声明组件的形式，实例化该组件。在点击关闭或者路由切换以后，该组件自动销毁",-1),D=i("pre",null,[i("code",{class:"html"},'<template>\n  <hl-button @click="show">{{ visible ? \'Hide\' : \'Show\' }}</hl-button>\n  <hb-modeless-dialog\n    v-model="visible"\n    width="400px"\n    title="非模态对话框示例"\n  >\n    <p>非模态对话框示例</p>\n  </hb-modeless-dialog>\n</template>\n<script>\nimport { defineComponent, ref, reactive } from \'vue\'\nexport default defineComponent({\n  setup() {\n    const visible = ref(false)\n\n    const show = () => {\n      visible.value = !visible.value\n    }\n    return {\n      visible,\n      show,\n    }\n  }\n})\n<\/script>\n')],-1),P=i("h2",{id:"shi-yong-modelessdialogmanager"},[i("a",{class:"header-anchor",href:"#shi-yong-modelessdialogmanager"}),m(" 使用ModelessDialogManager")],-1),x=i("p",null,[m("通过调用 "),i("code",null,"ModelessDialogManager"),m(" API的 "),i("code",null,"show"),m(" 方法创建对话框，此对话框可以在页面切换以后保持不被销毁。")],-1),_=i("div",null,[i("p",null,[i("code",null,"id"),m("属性需要唯一固定值")])],-1),S=i("pre",null,[i("code",{class:"html"},"<template>\n  <hl-group gap=\"var(--md)\">\n    <hl-button @click=\"create\">创建</hl-button>\n    <hl-button @click=\"close\">手动关闭</hl-button>\n  </hl-group>\n</template>\n<script>\nimport { defineComponent, h } from 'vue'\nimport { ModelessDialogManager, HbEmpty } from 'hongluan-business-ui'\n\nexport default defineComponent({\n  setup() {\n    const close = () => {\n      ModelessDialogManager.get('my-modelesss-dialog').close()\n    }\n  \n    const create = () => {\n      ModelessDialogManager.show({\n        id: 'my-modelesss-dialog',\n        title: '测试Manager',\n        body: h(HbEmpty, {description: '空内容'}),\n      })\n    }\n\n    return {\n      create,\n      close,\n    }\n  }\n})\n<\/script>\n")],-1),V=i("h2",{id:"modelessdialogmanager-apishi-li"},[i("a",{class:"header-anchor",href:"#modelessdialogmanager-apishi-li"}),m(" ModelessDialogManager API示例")],-1),B=i("div",null,[i("p",null,[i("code",null,"header"),m("，"),i("code",null,"body"),m("，"),i("code",null,"footer"),m(" 必须为VNode实例，否则不进行处理")])],-1),H=i("pre",null,[i("code",{class:"html"},"<template>\n  <hl-group gap=\"var(--md)\">\n    <hl-button @click=\"create\">创建</hl-button>\n    <hl-tag>状态：{{ visible ? '显示' : '隐藏' }}</hl-tag>\n    <hl-button @click=\"max\">最大化</hl-button>\n    <hl-button @click=\"collapse\">折叠</hl-button>\n    <hl-button @click=\"show\">显示/隐藏</hl-button>\n    <hl-button @click=\"close\">手工关闭</hl-button>\n  </hl-group>\n  <br />\n  <hl-group gap=\"var(--md)\" class=\"m-t-md\">\n    <hl-button @click=\"create2\">创建多个对话框</hl-button>\n  </hl-group>\n  <br />\n  <hl-group gap=\"var(--md)\" class=\"m-t-md\">\n    <hl-button @click=\"collaseAll\">折叠所有</hl-button>\n    <hl-button @click=\"closeAll\">关闭所有</hl-button>\n    <hl-button @click=\"hideAll\">隐藏所有</hl-button>\n    <hl-button @click=\"showAll\">显示所有</hl-button>\n  </hl-group>\n</template>\n<script>\nimport { defineComponent, ref, reactive, h } from 'vue'\nimport { HlButton } from 'hongluan-ui'\nimport { ModelessDialogManager } from 'hongluan-business-ui'\n\nexport default defineComponent({\n  setup() {\n    const inputVal = ref('')\n    const visible = ref(false)\n\n    const create = () => {\n      ModelessDialogManager.show({\n        id: 'my-modelesss-dialog2',\n        title: '测试Manager，固定ID',\n        body: h('input', {\n          value: inputVal.value,\n          onInput:(e)=> {\n            inputVal.value = e.target.value\n          }\n        }),\n        footer: h('div', null, [\n          h(HlButton, { type: 'primary', class: 'm-r-md' }, {default: () => '确定'}),\n          h(HlButton, null, {default: () => '取消'})\n        ]),\n      })\n      visible.value = ModelessDialogManager.get('my-modelesss-dialog2').isShown()\n    }\n\n    const show = () => {\n      ModelessDialogManager.get('my-modelesss-dialog2').toggleShow()\n      visible.value = ModelessDialogManager.get('my-modelesss-dialog2').isShown()\n    }\n    const max = () => {\n      ModelessDialogManager.get('my-modelesss-dialog2').toggleMaximize()\n    }\n    const collapse = () => {\n      ModelessDialogManager.get('my-modelesss-dialog2').toggleCollapse()\n    }\n    const close = () => {\n      ModelessDialogManager.get('my-modelesss-dialog2').close()\n    }\n\n    const create2 = () => {\n      ModelessDialogManager.show({\n        title: '测试Manager'\n      })\n    }\n\n    const collaseAll = () => {\n      ModelessDialogManager.collapseAll()\n    }\n    const closeAll = () => {\n      ModelessDialogManager.closeAll()\n    }\n    const showAll = () => {\n      ModelessDialogManager.showAll()\n    }\n    const hideAll = () => {\n      ModelessDialogManager.hideAll()\n    }\n\n    return {\n      visible,\n      create,\n      show,\n      create2,\n      max,\n      collapse,\n      close,\n      collaseAll,\n      closeAll,\n      showAll,\n      hideAll,\n    }\n  }\n})\n<\/script>\n")],-1),N=i("h2",{id:"modelessdialogmanager-apixiang-ying-shi-shi-li"},[i("a",{class:"header-anchor",href:"#modelessdialogmanager-apixiang-ying-shi-shi-li"}),m(" ModelessDialogManager API响应式示例")],-1),j=i("p",null,[m("如果需要动态修改对话框，可以使用 "),i("code",null,"reactive"),m(" 包装所有属性。")],-1),I=i("pre",null,[i("code",{class:"html"},"<template>\n  <hl-group gap=\"var(--md)\">\n    <hl-button @click=\"create\">创建</hl-button>\n    <hl-button @click=\"modifyProp\">修改对话框属性</hl-button>\n    <hl-button @click=\"modifySlot\">修改Slot</hl-button>\n    <hl-button @click=\"modifyPanel\">修改Panel属性</hl-button>\n  </hl-group>\n</template>\n<script>\nimport { defineComponent, ref, reactive, h } from 'vue'\nimport { HlButton } from 'hongluan-ui'\nimport { ModelessDialogManager } from 'hongluan-business-ui'\n\nexport default defineComponent({\n  setup() {\n    const inputVal = ref('')\n    const dialogProps = reactive({\n      id: 'my-modelesss-dialog3',\n      borderless: true,\n      bodyPadding: 'var(--lg)',\n      title: '测试Manager',\n      body: h('input', {\n        value: inputVal.value,\n        onInput:(e)=> {\n          inputVal.value = e.target.value\n        }\n      }),\n      footer: h('div', null, [\n        h(HlButton, { type: 'primary', class: 'm-r-md' }, {default: () => '确定'}),\n        h(HlButton, null, {default: () => '取消'})\n      ]),\n    })\n\n    const create = () => {\n      ModelessDialogManager.show(dialogProps)\n    }\n    const modifyProp = () => {\n      dialogProps.title = '修改对话框标题'\n    }\n    const modifySlot = () => {\n      dialogProps.footer = h('div', {innerHTML: '修改Footer Slot内容'})\n    }\n    const modifyPanel = () => {\n      dialogProps.borderless = false\n      dialogProps.bodyPadding = 'var(--sm)'\n    }\n\n    return {\n      create,\n      modifyProp,\n      modifyPanel,\n      modifySlot,\n    }\n  }\n})\n<\/script>\n")],-1),E=p('<h2 id="modelessdialog-attributes"><a class="header-anchor" href="#modelessdialog-attributes"></a> ModelessDialog Attributes</h2><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>model-value / v-model</td><td>是否显示对话框</td><td>boolean</td><td>—</td><td>—</td></tr><tr><td>width</td><td>对话框的宽度</td><td>string</td><td>—</td><td>-</td></tr><tr><td>height</td><td>对话框的高度</td><td>string</td><td>—</td><td>-</td></tr><tr><td>top</td><td>对话框 CSS 中的 top 值</td><td>string</td><td>—</td><td>-</td></tr><tr><td>custom-class</td><td>对话框的自定义类名</td><td>string</td><td>—</td><td>—</td></tr><tr><td>open-delay</td><td>对话框打开的延时时间，单位毫秒</td><td>number</td><td>—</td><td>0</td></tr><tr><td>close-delay</td><td>对话框关闭的延时时间，单位毫秒</td><td>number</td><td>—</td><td>0</td></tr><tr><td>show-close</td><td>是否显示关闭按钮</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>show-maximize</td><td>是否显示最大化按钮</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>show-collapse</td><td>是否显示折叠按钮</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>before-close</td><td>关闭前的回调，会暂停对话框的关闭</td><td>function(done)，done 用于关闭 Dialog</td><td>—</td><td>—</td></tr><tr><td>animation-name</td><td>对话框动画类型</td><td>string</td><td>-</td><td>-</td></tr><tr><td>title</td><td>对话框标题，优先级低于header slot</td><td>string</td><td>-</td><td>-</td></tr><tr><td>z-index</td><td>自定义层级</td><td>number</td><td>-</td><td>-</td></tr><tr><td>id</td><td>对话框根节点id</td><td>string</td><td>-</td><td>-</td></tr><tr><td>Panel组件属性</td><td>对话框基于Panel组件构建，自动支持使用Panel组件所有属性</td><td>-</td><td>-</td><td>-</td></tr></tbody></table><h2 id="modelessdialog-slots"><a class="header-anchor" href="#modelessdialog-slots"></a> ModelessDialog Slots</h2><table><thead><tr><th>Name</th><th>说明</th></tr></thead><tbody><tr><td>default</td><td>自定义内容</td></tr><tr><td>header</td><td>自定义头部</td></tr><tr><td>footer</td><td>自定义底部</td></tr></tbody></table><h2 id="modelessdialog-events"><a class="header-anchor" href="#modelessdialog-events"></a> ModelessDialog Events</h2><table><thead><tr><th>事件名称</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>open</td><td>对话框打开的回调</td><td>—</td></tr><tr><td>opened</td><td>对话框打开动画结束时的回调</td><td>—</td></tr><tr><td>close</td><td>对话框关闭的回调</td><td>—</td></tr><tr><td>closed</td><td>对话框关闭动画结束时的回调</td><td>—</td></tr></tbody></table><h2 id="modelessdialogmanager-methods"><a class="header-anchor" href="#modelessdialogmanager-methods"></a> ModelessDialogManager Methods</h2><table><thead><tr><th>方法名</th><th>说明</th><th>参数</th></tr></thead><tbody><tr><td>show</td><td>显示对话框，会自定检查指定id的对话框是否存在，如果存在将直接返回已存在对话框实例</td><td>对话框所支持属性 &amp; { header: VNode, body: VNode, footer: VNode }</td></tr><tr><td>get</td><td>获取对话框实例</td><td>对话框id</td></tr><tr><td>has</td><td>检查对话框是否已经存在</td><td>对话框id</td></tr><tr><td>closeAll</td><td>关闭所有对话框</td><td>-</td></tr><tr><td>showAll</td><td>显示所有对话框</td><td>-</td></tr><tr><td>hideAll</td><td>隐藏所有对话框</td><td>-</td></tr><tr><td>collapseAll</td><td>折叠多有对话框</td><td>-</td></tr><tr><td>expandAll</td><td>展开所有对话框</td><td>-</td></tr></tbody></table><h2 id="modelessdialog-instance-methods"><a class="header-anchor" href="#modelessdialog-instance-methods"></a> ModelessDialog Instance Methods</h2><table><thead><tr><th>方法名</th><th>说明</th><th>参数</th></tr></thead><tbody><tr><td>close</td><td>关闭对话框</td><td>-</td></tr><tr><td>toggleShow</td><td>显示/隐藏对话框</td><td>shown: boolean，手动设置显示或者隐藏</td></tr><tr><td>toggleCollapse</td><td>折叠/展开对话框</td><td>collapsable: boolean，手动设置折叠或者展开</td></tr><tr><td>toggleMaximize</td><td>最大化/还原对话框</td><td>maximizable: boolean，手动设置最大化</td></tr><tr><td>isShown</td><td>对话框已经显示</td><td>-</td></tr><tr><td>isClosed</td><td>对话框是否已经关闭</td><td>-</td></tr><tr><td>isCollapsed</td><td>对话框是否已经折叠</td><td>-</td></tr><tr><td>isMaximized</td><td>对话框是否已经最大化</td><td>-</td></tr></tbody></table>',10);var z=b(v,[["render",function(t,e,l,o,d,n){const u=a("hl-demo0"),g=a("demo-block"),m=a("hl-demo1"),p=a("hl-demo2"),b=a("hl-demo3"),f=a("right-nav");return s(),r("section",y,[i("div",M,[k,C,w,A,c(g,null,{source:h((()=>[c(u)])),highlight:h((()=>[D])),_:1}),P,x,c(g,null,{source:h((()=>[c(m)])),highlight:h((()=>[S])),default:h((()=>[_])),_:1}),V,c(g,null,{source:h((()=>[c(p)])),highlight:h((()=>[H])),default:h((()=>[B])),_:1}),N,j,c(g,null,{source:h((()=>[c(b)])),highlight:h((()=>[I])),_:1}),E]),c(f)])}]]);export{z as default};
