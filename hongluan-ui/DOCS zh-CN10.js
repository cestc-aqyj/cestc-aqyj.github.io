(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["DOCS zh-CN10"],{

/***/ "./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js?!./website/md-loader/index.js!./website/docs/zh-CN/checkbox.md?vue&type=script&lang=ts":
/*!*************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/vue-loader/dist??ref--2-0!./website/md-loader!./website/docs/zh-CN/checkbox.md?vue&type=script&lang=ts ***!
  \*************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ \"./node_modules/vue/dist/vue.esm-browser.js\");\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'component-doc',\n  components: {\n    \"hl-demo0\": function () {\n      const {\n        createCommentVNode: _createCommentVNode,\n        createTextVNode: _createTextVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        createVNode: _createVNode,\n        Fragment: _Fragment,\n        openBlock: _openBlock,\n        createElementBlock: _createElementBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_0__;\n\n      const _hoisted_1 = /*#__PURE__*/_createTextVNode(\"备选项\");\n\n      function render(_ctx, _cache) {\n        const _component_hl_checkbox = _resolveComponent(\"hl-checkbox\");\n\n        return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" `checked` 为 true 或 false \"), _createVNode(_component_hl_checkbox, {\n          modelValue: _ctx.checked,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.checked = $event)\n        }, {\n          default: _withCtx(() => [_hoisted_1]),\n          _: 1\n          /* STABLE */\n\n        }, 8\n        /* PROPS */\n        , [\"modelValue\"])], 2112\n        /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */\n        );\n      }\n\n      const {\n        defineComponent,\n        ref\n      } = vue__WEBPACK_IMPORTED_MODULE_0__;\n      const democomponentExport = defineComponent({\n        setup() {\n          const checked = ref(true);\n          return {\n            checked\n          };\n        }\n\n      });\n      return {\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"hl-demo1\": function () {\n      const {\n        createTextVNode: _createTextVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        createVNode: _createVNode,\n        Fragment: _Fragment,\n        openBlock: _openBlock,\n        createElementBlock: _createElementBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_0__;\n\n      const _hoisted_1 = /*#__PURE__*/_createTextVNode(\"Default\");\n\n      const _hoisted_2 = /*#__PURE__*/_createTextVNode(\"Primary\");\n\n      const _hoisted_3 = /*#__PURE__*/_createTextVNode(\"Success\");\n\n      const _hoisted_4 = /*#__PURE__*/_createTextVNode(\"Warning\");\n\n      const _hoisted_5 = /*#__PURE__*/_createTextVNode(\"Danger\");\n\n      const _hoisted_6 = /*#__PURE__*/_createTextVNode(\"Info\");\n\n      function render(_ctx, _cache) {\n        const _component_hl_checkbox = _resolveComponent(\"hl-checkbox\");\n\n        return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_hl_checkbox, {\n          modelValue: _ctx.checked1,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.checked1 = $event)\n        }, {\n          default: _withCtx(() => [_hoisted_1]),\n          _: 1\n          /* STABLE */\n\n        }, 8\n        /* PROPS */\n        , [\"modelValue\"]), _createVNode(_component_hl_checkbox, {\n          modelValue: _ctx.checked2,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.checked2 = $event),\n          type: \"primary\"\n        }, {\n          default: _withCtx(() => [_hoisted_2]),\n          _: 1\n          /* STABLE */\n\n        }, 8\n        /* PROPS */\n        , [\"modelValue\"]), _createVNode(_component_hl_checkbox, {\n          modelValue: _ctx.checked3,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.checked3 = $event),\n          type: \"success\"\n        }, {\n          default: _withCtx(() => [_hoisted_3]),\n          _: 1\n          /* STABLE */\n\n        }, 8\n        /* PROPS */\n        , [\"modelValue\"]), _createVNode(_component_hl_checkbox, {\n          modelValue: _ctx.checked4,\n          \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.checked4 = $event),\n          type: \"warning\"\n        }, {\n          default: _withCtx(() => [_hoisted_4]),\n          _: 1\n          /* STABLE */\n\n        }, 8\n        /* PROPS */\n        , [\"modelValue\"]), _createVNode(_component_hl_checkbox, {\n          modelValue: _ctx.checked5,\n          \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _ctx.checked5 = $event),\n          type: \"danger\"\n        }, {\n          default: _withCtx(() => [_hoisted_5]),\n          _: 1\n          /* STABLE */\n\n        }, 8\n        /* PROPS */\n        , [\"modelValue\"]), _createVNode(_component_hl_checkbox, {\n          modelValue: _ctx.checked6,\n          \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => _ctx.checked6 = $event),\n          type: \"info\"\n        }, {\n          default: _withCtx(() => [_hoisted_6]),\n          _: 1\n          /* STABLE */\n\n        }, 8\n        /* PROPS */\n        , [\"modelValue\"])], 64\n        /* STABLE_FRAGMENT */\n        );\n      }\n\n      const {\n        defineComponent,\n        ref\n      } = vue__WEBPACK_IMPORTED_MODULE_0__;\n      const democomponentExport = defineComponent({\n        setup() {\n          const checked1 = ref(false);\n          const checked2 = ref(false);\n          const checked3 = ref(false);\n          const checked4 = ref(false);\n          const checked5 = ref(false);\n          const checked6 = ref(false);\n          return {\n            checked1,\n            checked2,\n            checked3,\n            checked4,\n            checked5,\n            checked6\n          };\n        }\n\n      });\n      return {\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"hl-demo2\": function () {\n      const {\n        createTextVNode: _createTextVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        createVNode: _createVNode,\n        Fragment: _Fragment,\n        openBlock: _openBlock,\n        createElementBlock: _createElementBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_0__;\n\n      const _hoisted_1 = /*#__PURE__*/_createTextVNode(\"Default\");\n\n      const _hoisted_2 = /*#__PURE__*/_createTextVNode(\"Primary\");\n\n      const _hoisted_3 = /*#__PURE__*/_createTextVNode(\"Success\");\n\n      const _hoisted_4 = /*#__PURE__*/_createTextVNode(\"Warning\");\n\n      const _hoisted_5 = /*#__PURE__*/_createTextVNode(\"Danger\");\n\n      const _hoisted_6 = /*#__PURE__*/_createTextVNode(\"Info\");\n\n      function render(_ctx, _cache) {\n        const _component_hl_checkbox = _resolveComponent(\"hl-checkbox\");\n\n        return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_hl_checkbox, {\n          modelValue: _ctx.checked1,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.checked1 = $event),\n          fill: \"\"\n        }, {\n          default: _withCtx(() => [_hoisted_1]),\n          _: 1\n          /* STABLE */\n\n        }, 8\n        /* PROPS */\n        , [\"modelValue\"]), _createVNode(_component_hl_checkbox, {\n          modelValue: _ctx.checked2,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.checked2 = $event),\n          type: \"primary\",\n          fill: \"\"\n        }, {\n          default: _withCtx(() => [_hoisted_2]),\n          _: 1\n          /* STABLE */\n\n        }, 8\n        /* PROPS */\n        , [\"modelValue\"]), _createVNode(_component_hl_checkbox, {\n          modelValue: _ctx.checked3,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.checked3 = $event),\n          type: \"success\",\n          fill: \"\"\n        }, {\n          default: _withCtx(() => [_hoisted_3]),\n          _: 1\n          /* STABLE */\n\n        }, 8\n        /* PROPS */\n        , [\"modelValue\"]), _createVNode(_component_hl_checkbox, {\n          modelValue: _ctx.checked4,\n          \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.checked4 = $event),\n          type: \"warning\",\n          fill: \"\"\n        }, {\n          default: _withCtx(() => [_hoisted_4]),\n          _: 1\n          /* STABLE */\n\n        }, 8\n        /* PROPS */\n        , [\"modelValue\"]), _createVNode(_component_hl_checkbox, {\n          modelValue: _ctx.checked5,\n          \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _ctx.checked5 = $event),\n          type: \"danger\",\n          fill: \"\"\n        }, {\n          default: _withCtx(() => [_hoisted_5]),\n          _: 1\n          /* STABLE */\n\n        }, 8\n        /* PROPS */\n        , [\"modelValue\"]), _createVNode(_component_hl_checkbox, {\n          modelValue: _ctx.checked6,\n          \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => _ctx.checked6 = $event),\n          type: \"info\",\n          fill: \"\"\n        }, {\n          default: _withCtx(() => [_hoisted_6]),\n          _: 1\n          /* STABLE */\n\n        }, 8\n        /* PROPS */\n        , [\"modelValue\"])], 64\n        /* STABLE_FRAGMENT */\n        );\n      }\n\n      const {\n        defineComponent,\n        ref\n      } = vue__WEBPACK_IMPORTED_MODULE_0__;\n      const democomponentExport = defineComponent({\n        setup() {\n          const checked1 = ref(false);\n          const checked2 = ref(false);\n          const checked3 = ref(false);\n          const checked4 = ref(false);\n          const checked5 = ref(false);\n          const checked6 = ref(false);\n          return {\n            checked1,\n            checked2,\n            checked3,\n            checked4,\n            checked5,\n            checked6\n          };\n        }\n\n      });\n      return {\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"hl-demo3\": function () {\n      const {\n        createTextVNode: _createTextVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        createVNode: _createVNode,\n        Fragment: _Fragment,\n        openBlock: _openBlock,\n        createElementBlock: _createElementBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_0__;\n\n      const _hoisted_1 = /*#__PURE__*/_createTextVNode(\"Default\");\n\n      const _hoisted_2 = /*#__PURE__*/_createTextVNode(\"Primary\");\n\n      const _hoisted_3 = /*#__PURE__*/_createTextVNode(\"Success\");\n\n      function render(_ctx, _cache) {\n        const _component_hl_checkbox = _resolveComponent(\"hl-checkbox\");\n\n        return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_hl_checkbox, {\n          modelValue: _ctx.checked1,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.checked1 = $event),\n          size: \"sm\"\n        }, {\n          default: _withCtx(() => [_hoisted_1]),\n          _: 1\n          /* STABLE */\n\n        }, 8\n        /* PROPS */\n        , [\"modelValue\"]), _createVNode(_component_hl_checkbox, {\n          modelValue: _ctx.checked2,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.checked2 = $event),\n          type: \"primary\"\n        }, {\n          default: _withCtx(() => [_hoisted_2]),\n          _: 1\n          /* STABLE */\n\n        }, 8\n        /* PROPS */\n        , [\"modelValue\"]), _createVNode(_component_hl_checkbox, {\n          modelValue: _ctx.checked3,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.checked3 = $event),\n          type: \"success\",\n          size: \"lg\"\n        }, {\n          default: _withCtx(() => [_hoisted_3]),\n          _: 1\n          /* STABLE */\n\n        }, 8\n        /* PROPS */\n        , [\"modelValue\"])], 64\n        /* STABLE_FRAGMENT */\n        );\n      }\n\n      const {\n        defineComponent,\n        ref\n      } = vue__WEBPACK_IMPORTED_MODULE_0__;\n      const democomponentExport = defineComponent({\n        setup() {\n          const checked1 = ref(false);\n          const checked2 = ref(false);\n          const checked3 = ref(false);\n          return {\n            checked1,\n            checked2,\n            checked3\n          };\n        }\n\n      });\n      return {\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"hl-demo4\": function () {\n      const {\n        createTextVNode: _createTextVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        createVNode: _createVNode,\n        Fragment: _Fragment,\n        openBlock: _openBlock,\n        createElementBlock: _createElementBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_0__;\n\n      const _hoisted_1 = /*#__PURE__*/_createTextVNode(\"备选项1\");\n\n      const _hoisted_2 = /*#__PURE__*/_createTextVNode(\"备选项\");\n\n      function render(_ctx, _cache) {\n        const _component_hl_checkbox = _resolveComponent(\"hl-checkbox\");\n\n        return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_hl_checkbox, {\n          modelValue: _ctx.checked1,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.checked1 = $event),\n          round: \"\"\n        }, {\n          default: _withCtx(() => [_hoisted_1]),\n          _: 1\n          /* STABLE */\n\n        }, 8\n        /* PROPS */\n        , [\"modelValue\"]), _createVNode(_component_hl_checkbox, {\n          modelValue: _ctx.checked2,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.checked2 = $event),\n          round: \"\",\n          type: \"primary\"\n        }, {\n          default: _withCtx(() => [_hoisted_2]),\n          _: 1\n          /* STABLE */\n\n        }, 8\n        /* PROPS */\n        , [\"modelValue\"])], 64\n        /* STABLE_FRAGMENT */\n        );\n      }\n\n      const {\n        defineComponent,\n        ref\n      } = vue__WEBPACK_IMPORTED_MODULE_0__;\n      const democomponentExport = defineComponent({\n        setup() {\n          const checked1 = ref(false);\n          const checked2 = ref(false);\n          return {\n            checked1,\n            checked2\n          };\n        }\n\n      });\n      return {\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"hl-demo5\": function () {\n      const {\n        createTextVNode: _createTextVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        createVNode: _createVNode,\n        Fragment: _Fragment,\n        openBlock: _openBlock,\n        createElementBlock: _createElementBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_0__;\n\n      const _hoisted_1 = /*#__PURE__*/_createTextVNode(\"备选项1\");\n\n      const _hoisted_2 = /*#__PURE__*/_createTextVNode(\"备选项\");\n\n      function render(_ctx, _cache) {\n        const _component_hl_checkbox = _resolveComponent(\"hl-checkbox\");\n\n        return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_hl_checkbox, {\n          modelValue: _ctx.checked1,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.checked1 = $event),\n          disabled: \"\"\n        }, {\n          default: _withCtx(() => [_hoisted_1]),\n          _: 1\n          /* STABLE */\n\n        }, 8\n        /* PROPS */\n        , [\"modelValue\"]), _createVNode(_component_hl_checkbox, {\n          modelValue: _ctx.checked2,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.checked2 = $event),\n          disabled: \"\"\n        }, {\n          default: _withCtx(() => [_hoisted_2]),\n          _: 1\n          /* STABLE */\n\n        }, 8\n        /* PROPS */\n        , [\"modelValue\"])], 64\n        /* STABLE_FRAGMENT */\n        );\n      }\n\n      const {\n        defineComponent,\n        ref\n      } = vue__WEBPACK_IMPORTED_MODULE_0__;\n      const democomponentExport = defineComponent({\n        setup() {\n          const checked1 = ref(false);\n          const checked2 = ref(false);\n          return {\n            checked1,\n            checked2\n          };\n        }\n\n      });\n      return {\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"hl-demo6\": function () {\n      const {\n        createTextVNode: _createTextVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        createVNode: _createVNode,\n        Fragment: _Fragment,\n        openBlock: _openBlock,\n        createElementBlock: _createElementBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_0__;\n\n      const _hoisted_1 = /*#__PURE__*/_createTextVNode(\"备选项\");\n\n      const _hoisted_2 = /*#__PURE__*/_createTextVNode(\"备选项\");\n\n      const _hoisted_3 = /*#__PURE__*/_createTextVNode(\"未加粗\");\n\n      function render(_ctx, _cache) {\n        const _component_hl_checkbox = _resolveComponent(\"hl-checkbox\");\n\n        return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_hl_checkbox, {\n          modelValue: _ctx.checked1,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.checked1 = $event),\n          label: 1,\n          bold: \"\"\n        }, {\n          default: _withCtx(() => [_hoisted_1]),\n          _: 1\n          /* STABLE */\n\n        }, 8\n        /* PROPS */\n        , [\"modelValue\"]), _createVNode(_component_hl_checkbox, {\n          modelValue: _ctx.checked1,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.checked1 = $event),\n          label: 2,\n          bold: \"\"\n        }, {\n          default: _withCtx(() => [_hoisted_2]),\n          _: 1\n          /* STABLE */\n\n        }, 8\n        /* PROPS */\n        , [\"modelValue\"]), _createVNode(_component_hl_checkbox, {\n          modelValue: _ctx.checked1,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.checked1 = $event),\n          label: 0\n        }, {\n          default: _withCtx(() => [_hoisted_3]),\n          _: 1\n          /* STABLE */\n\n        }, 8\n        /* PROPS */\n        , [\"modelValue\"])], 64\n        /* STABLE_FRAGMENT */\n        );\n      }\n\n      const {\n        defineComponent,\n        ref\n      } = vue__WEBPACK_IMPORTED_MODULE_0__;\n      const democomponentExport = defineComponent({\n        setup() {\n          const checked1 = ref(false);\n          return {\n            checked1\n          };\n        }\n\n      });\n      return {\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"hl-demo7\": function () {\n      const {\n        resolveComponent: _resolveComponent,\n        createVNode: _createVNode,\n        withCtx: _withCtx,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_0__;\n\n      function render(_ctx, _cache) {\n        const _component_hl_checkbox = _resolveComponent(\"hl-checkbox\");\n\n        const _component_hl_checkbox_group = _resolveComponent(\"hl-checkbox-group\");\n\n        const _component_hl_col = _resolveComponent(\"hl-col\");\n\n        const _component_hl_row = _resolveComponent(\"hl-row\");\n\n        return _openBlock(), _createBlock(_component_hl_row, null, {\n          default: _withCtx(() => [_createVNode(_component_hl_col, {\n            span: \"col-18\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_hl_checkbox_group, {\n              modelValue: _ctx.checkList,\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.checkList = $event),\n              dir: \"horizontal\",\n              gap: \"var(--md)\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_hl_checkbox, {\n                label: \"复选框 A\"\n              }), _createVNode(_component_hl_checkbox, {\n                label: \"复选框 B\"\n              }), _createVNode(_component_hl_checkbox, {\n                label: \"复选框 C\"\n              }), _createVNode(_component_hl_checkbox, {\n                label: \"禁用\",\n                disabled: \"\"\n              }), _createVNode(_component_hl_checkbox, {\n                label: \"选中且禁用\",\n                disabled: \"\"\n              })]),\n              _: 1\n              /* STABLE */\n\n            }, 8\n            /* PROPS */\n            , [\"modelValue\"])]),\n            _: 1\n            /* STABLE */\n\n          }), _createVNode(_component_hl_col, {\n            span: \"col-6\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_hl_checkbox_group, {\n              modelValue: _ctx.checkList,\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.checkList = $event),\n              dir: \"vertical\",\n              gap: \"var(--md)\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_hl_checkbox, {\n                label: \"复选框 A\"\n              }), _createVNode(_component_hl_checkbox, {\n                label: \"复选框 B\"\n              }), _createVNode(_component_hl_checkbox, {\n                label: \"复选框 C\"\n              }), _createVNode(_component_hl_checkbox, {\n                label: \"禁用\",\n                disabled: \"\"\n              }), _createVNode(_component_hl_checkbox, {\n                label: \"选中且禁用\",\n                disabled: \"\"\n              })]),\n              _: 1\n              /* STABLE */\n\n            }, 8\n            /* PROPS */\n            , [\"modelValue\"])]),\n            _: 1\n            /* STABLE */\n\n          })]),\n          _: 1\n          /* STABLE */\n\n        });\n      }\n\n      const {\n        defineComponent,\n        ref\n      } = vue__WEBPACK_IMPORTED_MODULE_0__;\n      const democomponentExport = defineComponent({\n        setup() {\n          const checkList = ref(['选中且禁用', '复选框 A']);\n          return {\n            checkList\n          };\n        }\n\n      });\n      return {\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"hl-demo8\": function () {\n      const {\n        createTextVNode: _createTextVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        createVNode: _createVNode,\n        createElementVNode: _createElementVNode,\n        renderList: _renderList,\n        Fragment: _Fragment,\n        openBlock: _openBlock,\n        createElementBlock: _createElementBlock,\n        toDisplayString: _toDisplayString,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_0__;\n\n      const _hoisted_1 = /*#__PURE__*/_createTextVNode(\"全选\");\n\n      const _hoisted_2 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1\n      /* HOISTED */\n      );\n\n      function render(_ctx, _cache) {\n        const _component_hl_checkbox = _resolveComponent(\"hl-checkbox\");\n\n        const _component_hl_checkbox_group = _resolveComponent(\"hl-checkbox-group\");\n\n        return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_hl_checkbox, {\n          indeterminate: _ctx.isIndeterminate,\n          modelValue: _ctx.checkAll,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.checkAll = $event),\n          onChange: _ctx.handleCheckAllChange\n        }, {\n          default: _withCtx(() => [_hoisted_1]),\n          _: 1\n          /* STABLE */\n\n        }, 8\n        /* PROPS */\n        , [\"indeterminate\", \"modelValue\", \"onChange\"]), _hoisted_2, _createVNode(_component_hl_checkbox_group, {\n          modelValue: _ctx.checkedCities,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.checkedCities = $event),\n          dir: \"vertical\",\n          onChange: _ctx.handleCheckedCitiesChange\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.cities, city => {\n            return _openBlock(), _createBlock(_component_hl_checkbox, {\n              label: city,\n              key: city\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString(city), 1\n              /* TEXT */\n              )]),\n              _: 2\n              /* DYNAMIC */\n\n            }, 1032\n            /* PROPS, DYNAMIC_SLOTS */\n            , [\"label\"]);\n          }), 128\n          /* KEYED_FRAGMENT */\n          ))]),\n          _: 1\n          /* STABLE */\n\n        }, 8\n        /* PROPS */\n        , [\"modelValue\", \"onChange\"])], 64\n        /* STABLE_FRAGMENT */\n        );\n      }\n\n      const {\n        defineComponent,\n        ref\n      } = vue__WEBPACK_IMPORTED_MODULE_0__;\n      const democomponentExport = defineComponent({\n        setup() {\n          const cityOptions = ['上海', '北京', '广州', '深圳'];\n          const checkAll = ref(false);\n          const checkedCities = ref(['上海', '北京']);\n          const cities = ref(cityOptions);\n          const isIndeterminate = ref(true);\n\n          const handleCheckAllChange = val => {\n            checkedCities.value = val ? cityOptions : [];\n            isIndeterminate.value = false;\n          };\n\n          const handleCheckedCitiesChange = value => {\n            let checkedCount = value.length;\n            checkAll.value = checkedCount === cities.value.length;\n            isIndeterminate.value = checkedCount > 0 && checkedCount < cities.value.length;\n          };\n\n          return {\n            checkAll,\n            checkedCities,\n            cities,\n            isIndeterminate,\n            handleCheckAllChange,\n            handleCheckedCitiesChange\n          };\n        }\n\n      });\n      return {\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"hl-demo9\": function () {\n      const {\n        renderList: _renderList,\n        Fragment: _Fragment,\n        openBlock: _openBlock,\n        createElementBlock: _createElementBlock,\n        toDisplayString: _toDisplayString,\n        createTextVNode: _createTextVNode,\n        resolveComponent: _resolveComponent,\n        withCtx: _withCtx,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_0__;\n\n      function render(_ctx, _cache) {\n        const _component_hl_checkbox = _resolveComponent(\"hl-checkbox\");\n\n        const _component_hl_checkbox_group = _resolveComponent(\"hl-checkbox-group\");\n\n        return _openBlock(), _createBlock(_component_hl_checkbox_group, {\n          modelValue: _ctx.checkedCities,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.checkedCities = $event),\n          min: 1,\n          max: 2\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.cities, city => {\n            return _openBlock(), _createBlock(_component_hl_checkbox, {\n              label: city,\n              key: city\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString(city), 1\n              /* TEXT */\n              )]),\n              _: 2\n              /* DYNAMIC */\n\n            }, 1032\n            /* PROPS, DYNAMIC_SLOTS */\n            , [\"label\"]);\n          }), 128\n          /* KEYED_FRAGMENT */\n          ))]),\n          _: 1\n          /* STABLE */\n\n        }, 8\n        /* PROPS */\n        , [\"modelValue\"]);\n      }\n\n      const {\n        defineComponent,\n        ref\n      } = vue__WEBPACK_IMPORTED_MODULE_0__;\n      const democomponentExport = defineComponent({\n        setup() {\n          const cityOptions = ['上海', '北京', '广州', '深圳'];\n          const checkedCities = ref(['上海', '北京']);\n          const cities = ref(cityOptions);\n          return {\n            checkedCities,\n            cities\n          };\n        }\n\n      });\n      return {\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"hl-demo10\": function () {\n      const {\n        createElementVNode: _createElementVNode,\n        renderList: _renderList,\n        Fragment: _Fragment,\n        openBlock: _openBlock,\n        createElementBlock: _createElementBlock,\n        resolveComponent: _resolveComponent,\n        createVNode: _createVNode,\n        withCtx: _withCtx,\n        createBlock: _createBlock,\n        toDisplayString: _toDisplayString,\n        createTextVNode: _createTextVNode\n      } = vue__WEBPACK_IMPORTED_MODULE_0__;\n\n      const _hoisted_1 = /*#__PURE__*/_createElementVNode(\"p\", null, \"使用group组件实现自定义样式\", -1\n      /* HOISTED */\n      );\n\n      const _hoisted_2 = /*#__PURE__*/_createElementVNode(\"p\", null, \"使用checkbox-group组件实现自定义样式\", -1\n      /* HOISTED */\n      );\n\n      const _hoisted_3 = {\n        class: \"demo-check-text\"\n      };\n\n      const _hoisted_4 = /*#__PURE__*/_createElementVNode(\"p\", null, \"使用button组件来定义样式\", -1\n      /* HOISTED */\n      );\n\n      function render(_ctx, _cache) {\n        const _component_hl_thumb = _resolveComponent(\"hl-thumb\");\n\n        const _component_hl_checkbox = _resolveComponent(\"hl-checkbox\");\n\n        const _component_hl_group = _resolveComponent(\"hl-group\");\n\n        const _component_hl_col = _resolveComponent(\"hl-col\");\n\n        const _component_hl_checkbox_group = _resolveComponent(\"hl-checkbox-group\");\n\n        const _component_hl_button = _resolveComponent(\"hl-button\");\n\n        const _component_hl_row = _resolveComponent(\"hl-row\");\n\n        return _openBlock(), _createBlock(_component_hl_row, null, {\n          default: _withCtx(() => [_createVNode(_component_hl_col, {\n            span: \"col\"\n          }, {\n            default: _withCtx(() => [_hoisted_1, _createVNode(_component_hl_group, {\n              gap: \"var(--md)\"\n            }, {\n              default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.cities, city => {\n                return _openBlock(), _createBlock(_component_hl_checkbox, {\n                  modelValue: _ctx.checkboxGroup1,\n                  \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.checkboxGroup1 = $event),\n                  label: city,\n                  key: city,\n                  custom: \"\"\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_hl_thumb, {\n                    radius: \"\",\n                    fit: \"cover\",\n                    class: \"demo-check-img\",\n                    size: \"xxl\",\n                    src: \"../assets/images/show_thumb.png\"\n                  })]),\n                  _: 2\n                  /* DYNAMIC */\n\n                }, 1032\n                /* PROPS, DYNAMIC_SLOTS */\n                , [\"modelValue\", \"label\"]);\n              }), 128\n              /* KEYED_FRAGMENT */\n              ))]),\n              _: 1\n              /* STABLE */\n\n            })]),\n            _: 1\n            /* STABLE */\n\n          }), _createVNode(_component_hl_col, {\n            span: \"col\"\n          }, {\n            default: _withCtx(() => [_hoisted_2, _createVNode(_component_hl_checkbox_group, {\n              modelValue: _ctx.checkboxGroup2,\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.checkboxGroup2 = $event),\n              custom: \"\",\n              type: \"primary\",\n              gap: \"6px\"\n            }, {\n              default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.cities, city => {\n                return _openBlock(), _createBlock(_component_hl_checkbox, {\n                  label: city,\n                  key: city\n                }, {\n                  default: _withCtx(() => [_createElementVNode(\"span\", _hoisted_3, _toDisplayString(city), 1\n                  /* TEXT */\n                  )]),\n                  _: 2\n                  /* DYNAMIC */\n\n                }, 1032\n                /* PROPS, DYNAMIC_SLOTS */\n                , [\"label\"]);\n              }), 128\n              /* KEYED_FRAGMENT */\n              ))]),\n              _: 1\n              /* STABLE */\n\n            }, 8\n            /* PROPS */\n            , [\"modelValue\"])]),\n            _: 1\n            /* STABLE */\n\n          }), _createVNode(_component_hl_col, {\n            span: \"col\"\n          }, {\n            default: _withCtx(() => [_hoisted_4, _createVNode(_component_hl_checkbox_group, {\n              modelValue: _ctx.checkboxGroup2,\n              \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.checkboxGroup2 = $event),\n              custom: \"\",\n              type: \"primary\",\n              gap: \"6px\"\n            }, {\n              default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.cities, city => {\n                return _openBlock(), _createBlock(_component_hl_checkbox, {\n                  label: city,\n                  key: city\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_hl_button, null, {\n                    default: _withCtx(() => [_createTextVNode(_toDisplayString(city), 1\n                    /* TEXT */\n                    )]),\n                    _: 2\n                    /* DYNAMIC */\n\n                  }, 1024\n                  /* DYNAMIC_SLOTS */\n                  )]),\n                  _: 2\n                  /* DYNAMIC */\n\n                }, 1032\n                /* PROPS, DYNAMIC_SLOTS */\n                , [\"label\"]);\n              }), 128\n              /* KEYED_FRAGMENT */\n              ))]),\n              _: 1\n              /* STABLE */\n\n            }, 8\n            /* PROPS */\n            , [\"modelValue\"])]),\n            _: 1\n            /* STABLE */\n\n          })]),\n          _: 1\n          /* STABLE */\n\n        });\n      }\n\n      const {\n        defineComponent,\n        ref\n      } = vue__WEBPACK_IMPORTED_MODULE_0__;\n      const democomponentExport = defineComponent({\n        setup() {\n          const cityOptions = ['上海', '北京'];\n          const checkboxGroup1 = ref(['上海']);\n          const checkboxGroup2 = ref(['上海']);\n          const cities = ref(cityOptions);\n          return {\n            checkboxGroup1,\n            checkboxGroup2,\n            cities\n          };\n        }\n\n      });\n      return {\n        render,\n        ...democomponentExport\n      };\n    }()\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js?!./website/md-loader/index.js!./website/docs/zh-CN/checkbox.md?vue&type=script&lang=ts\n");

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/templateLoader.js?!./node_modules/vue-loader/dist/index.js?!./website/md-loader/index.js!./website/docs/zh-CN/checkbox.md?vue&type=template&id=7b814713":
/*!****************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/vue-loader/dist/templateLoader.js??ref--6!./node_modules/vue-loader/dist??ref--2-0!./website/md-loader!./website/docs/zh-CN/checkbox.md?vue&type=template&id=7b814713 ***!
  \****************************************************************************************************************************************************************************************************************************/
/*! exports provided: render */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return render; });\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ \"./node_modules/vue/dist/vue.esm-browser.js\");\n\nconst _hoisted_1 = {\n  class: \"doc-main-content\"\n};\nconst _hoisted_2 = {\n  class: \"doc-content\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"h1\", null, \"Checkbox 复选框\", -1\n/* HOISTED */\n);\n\nconst _hoisted_4 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"p\", null, \"使用完全重构的 checkbox 组件来创建一致的跨浏览器和跨设备的复选框。\", -1\n/* HOISTED */\n);\n\nconst _hoisted_5 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"div\", null, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"p\", null, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"在\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", null, \"hl-checkbox\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"元素中定义\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", null, \"v-model\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"绑定变量，单一的\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", null, \"checkbox\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"中，默认绑定变量的值会是\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", null, \"Boolean\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"，选中为\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", null, \"true\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"。\")])], -1\n/* HOISTED */\n);\n\nconst _hoisted_6 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"pre\", null, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", {\n  class: \"html\"\n}, \"<template>\\n  <!-- `checked` 为 true 或 false -->\\n  <hl-checkbox v-model=\\\"checked\\\">备选项</hl-checkbox>\\n</template>\\n<script>\\nimport { defineComponent, ref } from 'vue'\\nexport default defineComponent({\\n  setup() {\\n    const checked = ref(true)\\n    return {\\n      checked,\\n    }\\n  }\\n})\\n</script>\\n\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_7 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createStaticVNode\"])(\"<h2 id=\\\"zhuang-tai-yan-se\\\"><a class=\\\"header-anchor\\\" href=\\\"#zhuang-tai-yan-se\\\"></a> 状态颜色</h2><p>Radio 的颜色与状态颜色保持一致。可选值为<code>primary</code>、<code>success</code>、<code>warning</code>、<code>danger</code>、<code>info</code>。</p>\", 2);\n\nconst _hoisted_9 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"pre\", null, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", {\n  class: \"html\"\n}, \"<template>\\n  <hl-checkbox v-model=\\\"checked1\\\">Default</hl-checkbox>\\n  <hl-checkbox v-model=\\\"checked2\\\" type=\\\"primary\\\">Primary</hl-checkbox>\\n  <hl-checkbox v-model=\\\"checked3\\\" type=\\\"success\\\">Success</hl-checkbox>\\n  <hl-checkbox v-model=\\\"checked4\\\" type=\\\"warning\\\">Warning</hl-checkbox>\\n  <hl-checkbox v-model=\\\"checked5\\\" type=\\\"danger\\\">Danger</hl-checkbox>\\n  <hl-checkbox v-model=\\\"checked6\\\" type=\\\"info\\\">Info</hl-checkbox>\\n</template>\\n\\n<script>\\nimport { defineComponent, ref } from 'vue'\\nexport default defineComponent({\\n  setup() {\\n    const checked1 = ref(false)\\n    const checked2 = ref(false)\\n    const checked3 = ref(false)\\n    const checked4 = ref(false)\\n    const checked5 = ref(false)\\n    const checked6 = ref(false)\\n    return {\\n      checked1,\\n      checked2,\\n      checked3,\\n      checked4,\\n      checked5,\\n      checked6,\\n    }\\n  }\\n})\\n</script>\\n\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_10 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"h2\", {\n  id: \"fill-yan-se\"\n}, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"a\", {\n  class: \"header-anchor\",\n  href: \"#fill-yan-se\"\n}), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Fill 颜色\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_11 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"p\", null, \"使用 fill 属性，可以使 Checkbox 呈现为填充样式。\", -1\n/* HOISTED */\n);\n\nconst _hoisted_12 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"pre\", null, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", {\n  class: \"html\"\n}, \"<template>\\n  <hl-checkbox v-model=\\\"checked1\\\" fill>Default</hl-checkbox>\\n  <hl-checkbox v-model=\\\"checked2\\\" type=\\\"primary\\\" fill>Primary</hl-checkbox>\\n  <hl-checkbox v-model=\\\"checked3\\\" type=\\\"success\\\" fill>Success</hl-checkbox>\\n  <hl-checkbox v-model=\\\"checked4\\\" type=\\\"warning\\\" fill>Warning</hl-checkbox>\\n  <hl-checkbox v-model=\\\"checked5\\\" type=\\\"danger\\\" fill>Danger</hl-checkbox>\\n  <hl-checkbox v-model=\\\"checked6\\\" type=\\\"info\\\" fill>Info</hl-checkbox>\\n</template>\\n\\n<script>\\nimport { defineComponent, ref } from 'vue'\\nexport default defineComponent({\\n  setup() {\\n    const checked1 = ref(false)\\n    const checked2 = ref(false)\\n    const checked3 = ref(false)\\n    const checked4 = ref(false)\\n    const checked5 = ref(false)\\n    const checked6 = ref(false)\\n    return {\\n      checked1,\\n      checked2,\\n      checked3,\\n      checked4,\\n      checked5,\\n      checked6,\\n    }\\n  }\\n})\\n</script>\\n\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_13 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"h2\", {\n  id: \"chi-cun-xiu-shi\"\n}, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"a\", {\n  class: \"header-anchor\",\n  href: \"#chi-cun-xiu-shi\"\n}), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" 尺寸修饰\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_14 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"p\", null, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Checkbox 提供了 \"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", null, \"sm\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", null, \"md\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", null, \"lg\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" 三种尺寸样式，默认为 \"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", null, \"md\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" 尺寸\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_15 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"pre\", null, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", {\n  class: \"html\"\n}, \"<template>\\n  <hl-checkbox v-model=\\\"checked1\\\" size=\\\"sm\\\">Default</hl-checkbox>\\n  <hl-checkbox v-model=\\\"checked2\\\" type=\\\"primary\\\">Primary</hl-checkbox>\\n  <hl-checkbox v-model=\\\"checked3\\\" type=\\\"success\\\" size=\\\"lg\\\">Success</hl-checkbox>\\n</template>\\n\\n<script>\\nimport { defineComponent, ref } from 'vue'\\nexport default defineComponent({\\n  setup() {\\n    const checked1 = ref(false)\\n    const checked2 = ref(false)\\n    const checked3 = ref(false)\\n    return {\\n      checked1,\\n      checked2,\\n      checked3,\\n    }\\n  }\\n})\\n</script>\\n\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_16 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"h2\", {\n  id: \"yuan-xing-fu-xuan-kuang\"\n}, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"a\", {\n  class: \"header-anchor\",\n  href: \"#yuan-xing-fu-xuan-kuang\"\n}), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" 圆形复选框\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_17 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"p\", null, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"为复选框加上 \"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", null, \"round\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" 属性，即可将它们变成圆形，并且拥有 \"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", null, \"radio\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" 相似的外观。\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_18 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"pre\", null, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", {\n  class: \"html\"\n}, \"<template>\\n  <hl-checkbox v-model=\\\"checked1\\\" round>备选项1</hl-checkbox>\\n  <hl-checkbox v-model=\\\"checked2\\\" round type=\\\"primary\\\">备选项</hl-checkbox>\\n</template>\\n\\n<script>\\nimport { defineComponent, ref } from 'vue'\\nexport default defineComponent({\\n  setup() {\\n    const checked1 = ref(false)\\n    const checked2 = ref(false)\\n    return {\\n      checked1,\\n      checked2,\\n    }\\n  }\\n})\\n</script>\\n\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_19 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"h2\", {\n  id: \"jin-yong-zhuang-tai\"\n}, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"a\", {\n  class: \"header-anchor\",\n  href: \"#jin-yong-zhuang-tai\"\n}), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" 禁用状态\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_20 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"p\", null, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"为复选框设置\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", null, \"disabled\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"属性后呈灰色禁用，即便你为它设置了状态颜色也依然不起作用。\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_21 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"pre\", null, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", {\n  class: \"html\"\n}, \"<template>\\n  <hl-checkbox v-model=\\\"checked1\\\" disabled>备选项1</hl-checkbox>\\n  <hl-checkbox v-model=\\\"checked2\\\" disabled>备选项</hl-checkbox>\\n</template>\\n\\n<script>\\nimport { defineComponent, ref } from 'vue'\\nexport default defineComponent({\\n  setup() {\\n    const checked1 = ref(false)\\n    const checked2 = ref(false)\\n    return {\\n      checked1,\\n      checked2,\\n    }\\n  }\\n})\\n</script>\\n\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_22 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"h2\", {\n  id: \"jia-cu-miao-bian\"\n}, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"a\", {\n  class: \"header-anchor\",\n  href: \"#jia-cu-miao-bian\"\n}), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" 加粗描边\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_23 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"p\", null, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"给 \"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", null, \"checkbox\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" 增加 \"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", null, \"bold\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" 属性即可使它的边缘看起来更突出一些。\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_24 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"pre\", null, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", {\n  class: \"html\"\n}, \"<template>\\n  <hl-checkbox v-model=\\\"checked1\\\" :label=\\\"1\\\" bold>备选项</hl-checkbox>\\n  <hl-checkbox v-model=\\\"checked1\\\" :label=\\\"2\\\" bold>备选项</hl-checkbox>\\n  <hl-checkbox v-model=\\\"checked1\\\" :label=\\\"0\\\">未加粗</hl-checkbox>\\n</template>\\n\\n<script>\\nimport { defineComponent, ref } from 'vue'\\nexport default defineComponent({\\n  setup() {\\n    const checked1 = ref(false)\\n    return {\\n      checked1,\\n    }\\n  }\\n})\\n</script>\\n\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_25 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createStaticVNode\"])(\"<h2 id=\\\"fu-xuan-kuang-zu\\\"><a class=\\\"header-anchor\\\" href=\\\"#fu-xuan-kuang-zu\\\"></a> 复选框组</h2><p>单选框组提供了一个 <code>gap</code> 来自定义元素之间的边距，例如：<code>gap=&quot;0px&quot;</code>，默认为 12px</p><p><code>checkbox-group</code>容器能将多个复选框管理为一组，只需为它的<code>v-model</code>绑定<code>Array</code>类型的变量即可。</p>\", 3);\n\nconst _hoisted_28 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"div\", null, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"p\", null, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", null, \"<hl-checkbox>\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"的\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", null, \"label\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"属性是对应的值，当复选框无介绍内容时也可充当它的介绍。\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", null, \"label\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"与数组中的元素值相对应，如果存在指定的值则为选中状态，否则为不选中。复选框组还提供了一个 \"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", null, \"gap\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" 来自定义元素之间的边距，例如：\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", null, \"gap=\\\"0px\\\"\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"，默认为 12px\")])], -1\n/* HOISTED */\n);\n\nconst _hoisted_29 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"pre\", null, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", {\n  class: \"html\"\n}, \"<template>\\n  <hl-row>\\n    <hl-col span=\\\"col-18\\\">\\n      <hl-checkbox-group v-model=\\\"checkList\\\" dir=\\\"horizontal\\\" gap=\\\"var(--md)\\\">\\n        <hl-checkbox label=\\\"复选框 A\\\"></hl-checkbox>\\n        <hl-checkbox label=\\\"复选框 B\\\"></hl-checkbox>\\n        <hl-checkbox label=\\\"复选框 C\\\"></hl-checkbox>\\n        <hl-checkbox label=\\\"禁用\\\" disabled></hl-checkbox>\\n        <hl-checkbox label=\\\"选中且禁用\\\" disabled></hl-checkbox>\\n      </hl-checkbox-group>\\n    </hl-col> \\n\\n    <hl-col span=\\\"col-6\\\">\\n      <hl-checkbox-group v-model=\\\"checkList\\\" dir=\\\"vertical\\\" gap=\\\"var(--md)\\\">\\n        <hl-checkbox label=\\\"复选框 A\\\"></hl-checkbox>\\n        <hl-checkbox label=\\\"复选框 B\\\"></hl-checkbox>\\n        <hl-checkbox label=\\\"复选框 C\\\"></hl-checkbox>\\n        <hl-checkbox label=\\\"禁用\\\" disabled></hl-checkbox>\\n        <hl-checkbox label=\\\"选中且禁用\\\" disabled></hl-checkbox>\\n      </hl-checkbox-group>\\n    </hl-col>  \\n  </hl-row>\\n</template>\\n\\n<script>\\nimport { defineComponent, ref } from 'vue'\\nexport default defineComponent({\\n  setup() {\\n    const checkList = ref(['选中且禁用', '复选框 A'])\\n    return {\\n      checkList,\\n    }\\n  }\\n})\\n</script>\\n\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_30 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"h2\", {\n  id: \"bu-que-ding-zhuang-tai\"\n}, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"a\", {\n  class: \"header-anchor\",\n  href: \"#bu-que-ding-zhuang-tai\"\n}), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" 不确定状态\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_31 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"p\", null, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", null, \"indeterminate\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" 属性用以表示复选框的不确定状态，一般用于实现全选的效果。\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_32 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"pre\", null, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", {\n  class: \"html\"\n}, \"<template>\\n  <hl-checkbox :indeterminate=\\\"isIndeterminate\\\" v-model=\\\"checkAll\\\" @change=\\\"handleCheckAllChange\\\">全选</hl-checkbox>\\n  <hr />\\n  <hl-checkbox-group v-model=\\\"checkedCities\\\" dir=\\\"vertical\\\" @change=\\\"handleCheckedCitiesChange\\\">\\n    <hl-checkbox v-for=\\\"city in cities\\\" :label=\\\"city\\\" :key=\\\"city\\\">{{city}}</hl-checkbox>\\n  </hl-checkbox-group>\\n</template>\\n\\n<script>\\nimport { defineComponent, ref } from 'vue'\\nexport default defineComponent({\\n  setup() {\\n    const cityOptions = ['上海', '北京', '广州', '深圳']\\n\\n    const checkAll = ref(false)\\n    const checkedCities = ref(['上海', '北京'])\\n    const cities = ref(cityOptions)\\n    const isIndeterminate = ref(true)\\n\\n    const handleCheckAllChange = (val) => {\\n      checkedCities.value = val ? cityOptions : []\\n      isIndeterminate.value = false\\n    }\\n    const handleCheckedCitiesChange = (value) => {\\n      let checkedCount = value.length\\n      checkAll.value = checkedCount === cities.value.length\\n      isIndeterminate.value = checkedCount > 0 && checkedCount < cities.value.length\\n    }\\n    return {\\n      checkAll,\\n      checkedCities,\\n      cities,\\n      isIndeterminate,\\n      handleCheckAllChange,\\n      handleCheckedCitiesChange,\\n    }\\n  }\\n})\\n</script>\\n\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_33 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"h2\", {\n  id: \"ke-xuan-xiang-mu-shu-liang-de-xian-zhi\"\n}, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"a\", {\n  class: \"header-anchor\",\n  href: \"#ke-xuan-xiang-mu-shu-liang-de-xian-zhi\"\n}), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" 可选项目数量的限制\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_34 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"p\", null, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"使用 \"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", null, \"min\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" 和 \"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", null, \"max\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" 属性能够限制可以被勾选的项目的数量。\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_35 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"pre\", null, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", {\n  class: \"html\"\n}, \"<template>\\n  <hl-checkbox-group v-model=\\\"checkedCities\\\" :min=\\\"1\\\" :max=\\\"2\\\">\\n    <hl-checkbox v-for=\\\"city in cities\\\" :label=\\\"city\\\" :key=\\\"city\\\">{{city}}</hl-checkbox>\\n  </hl-checkbox-group>\\n</template>\\n\\n<script>\\nimport { defineComponent, ref } from 'vue'\\nexport default defineComponent({\\n  setup() {\\n    const cityOptions = ['上海', '北京', '广州', '深圳']\\n\\n    const checkedCities = ref(['上海', '北京'])\\n    const cities = ref(cityOptions)\\n\\n    return {\\n      checkedCities,\\n      cities,\\n    }\\n  }\\n})\\n</script>\\n\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_36 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"h2\", {\n  id: \"zi-ding-yi-yang-shi\"\n}, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"a\", {\n  class: \"header-anchor\",\n  href: \"#zi-ding-yi-yang-shi\"\n}), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" 自定义样式\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_37 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"p\", null, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"只要在\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", null, \"hl-checkbox\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"元素中设置\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", null, \"custom\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"属性即可，它接受一个\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", null, \"Boolean\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"，\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", null, \"true\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"为自定义样式。\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_38 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"div\", null, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"p\", null, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"你可以根据\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", null, \"<hl-checkbox>\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"组件提供的 \"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", null, \"is-checked\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", null, \"is-focus\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", null, \"is-disabled\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"的样式名称来自定义设计。\")])], -1\n/* HOISTED */\n);\n\nconst _hoisted_39 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"pre\", null, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", {\n  class: \"html\"\n}, \"<template>\\n  <hl-row>\\n    <hl-col span=\\\"col\\\">\\n      <p>使用group组件实现自定义样式</p>\\n      <hl-group gap=\\\"var(--md)\\\">\\n        <hl-checkbox v-model=\\\"checkboxGroup1\\\" v-for=\\\"city in cities\\\" :label=\\\"city\\\" :key=\\\"city\\\" custom>\\n          <hl-thumb radius fit=\\\"cover\\\" class=\\\"demo-check-img\\\" size=\\\"xxl\\\" src=\\\"../assets/images/show_thumb.png\\\"></hl-thumb>\\n        </hl-checkbox>\\n      </hl-group>\\n    </hl-col>\\n    <hl-col span=\\\"col\\\">\\n      <p>使用checkbox-group组件实现自定义样式</p>\\n      <hl-checkbox-group v-model=\\\"checkboxGroup2\\\" custom type=\\\"primary\\\" gap=\\\"6px\\\">\\n        <hl-checkbox v-for=\\\"city in cities\\\" :label=\\\"city\\\" :key=\\\"city\\\">\\n          <span class=\\\"demo-check-text\\\">{{city}}</span>\\n        </hl-checkbox>\\n      </hl-checkbox-group>\\n    </hl-col>\\n\\n    <hl-col span=\\\"col\\\">\\n      <p>使用button组件来定义样式</p>\\n      <hl-checkbox-group v-model=\\\"checkboxGroup2\\\" custom type=\\\"primary\\\" gap=\\\"6px\\\">\\n        <hl-checkbox v-for=\\\"city in cities\\\" :label=\\\"city\\\" :key=\\\"city\\\">\\n          <hl-button>{{city}}</hl-button>\\n        </hl-checkbox>\\n      </hl-checkbox-group>\\n    </hl-col>\\n\\n  </hl-row>\\n</template>\\n\\n<script>\\nimport { defineComponent, ref } from 'vue'\\nexport default defineComponent({\\n  setup() {\\n    const cityOptions = ['上海', '北京']\\n\\n    const checkboxGroup1 = ref(['上海'])\\n    const checkboxGroup2 = ref(['上海'])\\n    const cities = ref(cityOptions)\\n\\n    return {\\n      checkboxGroup1,\\n      checkboxGroup2,\\n      cities,\\n    }\\n  }\\n})\\n</script>\\n\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_40 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createStaticVNode\"])(\"<h3 id=\\\"checkbox-attributes\\\"><a class=\\\"header-anchor\\\" href=\\\"#checkbox-attributes\\\"></a> Checkbox Attributes</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>model-value / v-model</td><td>绑定值</td><td>string / number / boolean</td><td>—</td><td>—</td></tr><tr><td>label</td><td>选中状态的值（只有在<code>checkbox-group</code>或者绑定对象类型为<code>array</code>时有效）</td><td>string / number / boolean / object</td><td>—</td><td>—</td></tr><tr><td>true-label</td><td>选中时的值</td><td>string / number</td><td>—</td><td>—</td></tr><tr><td>false-label</td><td>没有选中时的值</td><td>string / number</td><td>—</td><td>—</td></tr><tr><td>disabled</td><td>是否禁用</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>name</td><td>原生 name 属性</td><td>string</td><td>—</td><td>—</td></tr><tr><td>checked</td><td>当前是否勾选</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>indeterminate</td><td>设置 indeterminate 状态，只负责样式控制</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>bold</td><td>加粗边框</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>size</td><td>尺寸修饰</td><td>string</td><td>sm, md, lg</td><td>md</td></tr><tr><td>round</td><td>圆形多选</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>type</td><td>颜色状态</td><td>string</td><td>info, primary, warning, danger, success</td><td>primary</td></tr></tbody></table><h3 id=\\\"checkbox-events\\\"><a class=\\\"header-anchor\\\" href=\\\"#checkbox-events\\\"></a> Checkbox Events</h3><table><thead><tr><th>事件名称</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>change</td><td>当绑定值变化时触发的事件</td><td>更新后的值</td></tr></tbody></table><h3 id=\\\"checkbox-group-attributes\\\"><a class=\\\"header-anchor\\\" href=\\\"#checkbox-group-attributes\\\"></a> Checkbox-group Attributes</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>value / v-model</td><td>绑定值</td><td>array</td><td>—</td><td>—</td></tr><tr><td>disabled</td><td>是否禁用</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>min</td><td>可被勾选的 checkbox 的最小数量</td><td>number</td><td>—</td><td>—</td></tr><tr><td>max</td><td>可被勾选的 checkbox 的最大数量</td><td>number</td><td>—</td><td>—</td></tr><tr><td>bold</td><td>加粗边框</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>custom</td><td>自定义样式</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>round</td><td>圆形多选</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>type</td><td>颜色状态</td><td>string</td><td>info, primary, warning, danger, success</td><td>primary</td></tr><tr><td>gap</td><td>间距</td><td>string</td><td>-</td><td>sm</td></tr></tbody></table><h3 id=\\\"checkbox-group-events\\\"><a class=\\\"header-anchor\\\" href=\\\"#checkbox-group-events\\\"></a> Checkbox-group Events</h3><table><thead><tr><th>事件名称</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>change</td><td>当绑定值变化时触发的事件</td><td>更新后的值</td></tr></tbody></table>\", 8);\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_hl_demo0 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"hl-demo0\");\n\n  const _component_demo_block = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"demo-block\");\n\n  const _component_hl_demo1 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"hl-demo1\");\n\n  const _component_hl_demo2 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"hl-demo2\");\n\n  const _component_hl_demo3 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"hl-demo3\");\n\n  const _component_hl_demo4 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"hl-demo4\");\n\n  const _component_hl_demo5 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"hl-demo5\");\n\n  const _component_hl_demo6 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"hl-demo6\");\n\n  const _component_hl_demo7 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"hl-demo7\");\n\n  const _component_hl_demo8 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"hl-demo8\");\n\n  const _component_hl_demo9 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"hl-demo9\");\n\n  const _component_hl_demo10 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"hl-demo10\");\n\n  const _component_right_nav = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"right-nav\");\n\n  return Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"openBlock\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementBlock\"])(\"section\", _hoisted_1, [Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"div\", _hoisted_2, [_hoisted_3, _hoisted_4, Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n    source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_hl_demo0)]),\n    highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [_hoisted_6]),\n    default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [_hoisted_5]),\n    _: 1\n    /* STABLE */\n\n  }), _hoisted_7, Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n    source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_hl_demo1)]),\n    highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [_hoisted_9]),\n    _: 1\n    /* STABLE */\n\n  }), _hoisted_10, _hoisted_11, Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n    source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_hl_demo2)]),\n    highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [_hoisted_12]),\n    _: 1\n    /* STABLE */\n\n  }), _hoisted_13, _hoisted_14, Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n    source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_hl_demo3)]),\n    highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [_hoisted_15]),\n    _: 1\n    /* STABLE */\n\n  }), _hoisted_16, _hoisted_17, Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n    source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_hl_demo4)]),\n    highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [_hoisted_18]),\n    _: 1\n    /* STABLE */\n\n  }), _hoisted_19, _hoisted_20, Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n    source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_hl_demo5)]),\n    highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [_hoisted_21]),\n    _: 1\n    /* STABLE */\n\n  }), _hoisted_22, _hoisted_23, Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n    source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_hl_demo6)]),\n    highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [_hoisted_24]),\n    _: 1\n    /* STABLE */\n\n  }), _hoisted_25, Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n    source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_hl_demo7)]),\n    highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [_hoisted_29]),\n    default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [_hoisted_28]),\n    _: 1\n    /* STABLE */\n\n  }), _hoisted_30, _hoisted_31, Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n    source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_hl_demo8)]),\n    highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [_hoisted_32]),\n    _: 1\n    /* STABLE */\n\n  }), _hoisted_33, _hoisted_34, Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n    source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_hl_demo9)]),\n    highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [_hoisted_35]),\n    _: 1\n    /* STABLE */\n\n  }), _hoisted_36, _hoisted_37, Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n    source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_hl_demo10)]),\n    highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [_hoisted_39]),\n    default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [_hoisted_38]),\n    _: 1\n    /* STABLE */\n\n  }), _hoisted_40]), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_right_nav)]);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/templateLoader.js?!./node_modules/vue-loader/dist/index.js?!./website/md-loader/index.js!./website/docs/zh-CN/checkbox.md?vue&type=template&id=7b814713\n");

/***/ }),

/***/ "./website/docs/zh-CN/checkbox.md":
/*!****************************************!*\
  !*** ./website/docs/zh-CN/checkbox.md ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _checkbox_md_vue_type_template_id_7b814713__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./checkbox.md?vue&type=template&id=7b814713 */ \"./website/docs/zh-CN/checkbox.md?vue&type=template&id=7b814713\");\n/* harmony import */ var _checkbox_md_vue_type_script_lang_ts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./checkbox.md?vue&type=script&lang=ts */ \"./website/docs/zh-CN/checkbox.md?vue&type=script&lang=ts\");\n/* empty/unused harmony star reexport */\n\n\n_checkbox_md_vue_type_script_lang_ts__WEBPACK_IMPORTED_MODULE_1__[\"default\"].render = _checkbox_md_vue_type_template_id_7b814713__WEBPACK_IMPORTED_MODULE_0__[\"render\"]\n/* hot reload */\nif (false) {}\n\n_checkbox_md_vue_type_script_lang_ts__WEBPACK_IMPORTED_MODULE_1__[\"default\"].__file = \"website/docs/zh-CN/checkbox.md\"\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (_checkbox_md_vue_type_script_lang_ts__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi93ZWJzaXRlL2RvY3MvemgtQ04vY2hlY2tib3gubWQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi93ZWJzaXRlL2RvY3MvemgtQ04vY2hlY2tib3gubWQ/Y2E1YyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZW5kZXIgfSBmcm9tIFwiLi9jaGVja2JveC5tZD92dWUmdHlwZT10ZW1wbGF0ZSZpZD03YjgxNDcxM1wiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL2NoZWNrYm94Lm1kP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPXRzXCJcbmV4cG9ydCAqIGZyb20gXCIuL2NoZWNrYm94Lm1kP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPXRzXCJcbnNjcmlwdC5yZW5kZXIgPSByZW5kZXJcbi8qIGhvdCByZWxvYWQgKi9cbmlmIChtb2R1bGUuaG90KSB7XG4gIHNjcmlwdC5fX2htcklkID0gXCI3YjgxNDcxM1wiXG4gIGNvbnN0IGFwaSA9IF9fVlVFX0hNUl9SVU5USU1FX19cbiAgbW9kdWxlLmhvdC5hY2NlcHQoKVxuICBpZiAoIWFwaS5jcmVhdGVSZWNvcmQoJzdiODE0NzEzJywgc2NyaXB0KSkge1xuICAgIGFwaS5yZWxvYWQoJzdiODE0NzEzJywgc2NyaXB0KVxuICB9XG4gIFxuICBtb2R1bGUuaG90LmFjY2VwdChcIi4vY2hlY2tib3gubWQ/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9N2I4MTQ3MTNcIiwgKCkgPT4ge1xuICAgIGFwaS5yZXJlbmRlcignN2I4MTQ3MTMnLCByZW5kZXIpXG4gIH0pXG5cbn1cblxuc2NyaXB0Ll9fZmlsZSA9IFwid2Vic2l0ZS9kb2NzL3poLUNOL2NoZWNrYm94Lm1kXCJcblxuZXhwb3J0IGRlZmF1bHQgc2NyaXB0Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFZQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./website/docs/zh-CN/checkbox.md\n");

/***/ }),

/***/ "./website/docs/zh-CN/checkbox.md?vue&type=script&lang=ts":
/*!****************************************************************!*\
  !*** ./website/docs/zh-CN/checkbox.md?vue&type=script&lang=ts ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_dist_index_js_ref_2_0_md_loader_index_js_checkbox_md_vue_type_script_lang_ts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/babel-loader/lib!../../../node_modules/vue-loader/dist??ref--2-0!../../md-loader!./checkbox.md?vue&type=script&lang=ts */ \"./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js?!./website/md-loader/index.js!./website/docs/zh-CN/checkbox.md?vue&type=script&lang=ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_dist_index_js_ref_2_0_md_loader_index_js_checkbox_md_vue_type_script_lang_ts__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; });\n\n/* empty/unused harmony star reexport */ //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi93ZWJzaXRlL2RvY3MvemgtQ04vY2hlY2tib3gubWQ/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9dHMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi93ZWJzaXRlL2RvY3MvemgtQ04vY2hlY2tib3gubWQ/NDg3ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBkZWZhdWx0IH0gZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvZGlzdC9pbmRleC5qcz8/cmVmLS0yLTAhLi4vLi4vbWQtbG9hZGVyL2luZGV4LmpzIS4vY2hlY2tib3gubWQ/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9dHNcIjsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvZGlzdC9pbmRleC5qcz8/cmVmLS0yLTAhLi4vLi4vbWQtbG9hZGVyL2luZGV4LmpzIS4vY2hlY2tib3gubWQ/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9dHNcIiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./website/docs/zh-CN/checkbox.md?vue&type=script&lang=ts\n");

/***/ }),

/***/ "./website/docs/zh-CN/checkbox.md?vue&type=template&id=7b814713":
/*!**********************************************************************!*\
  !*** ./website/docs/zh-CN/checkbox.md?vue&type=template&id=7b814713 ***!
  \**********************************************************************/
/*! exports provided: render */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_dist_templateLoader_js_ref_6_node_modules_vue_loader_dist_index_js_ref_2_0_md_loader_index_js_checkbox_md_vue_type_template_id_7b814713__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/babel-loader/lib!../../../node_modules/vue-loader/dist/templateLoader.js??ref--6!../../../node_modules/vue-loader/dist??ref--2-0!../../md-loader!./checkbox.md?vue&type=template&id=7b814713 */ \"./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/templateLoader.js?!./node_modules/vue-loader/dist/index.js?!./website/md-loader/index.js!./website/docs/zh-CN/checkbox.md?vue&type=template&id=7b814713\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_dist_templateLoader_js_ref_6_node_modules_vue_loader_dist_index_js_ref_2_0_md_loader_index_js_checkbox_md_vue_type_template_id_7b814713__WEBPACK_IMPORTED_MODULE_0__[\"render\"]; });\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi93ZWJzaXRlL2RvY3MvemgtQ04vY2hlY2tib3gubWQ/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9N2I4MTQ3MTMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi93ZWJzaXRlL2RvY3MvemgtQ04vY2hlY2tib3gubWQ/YWI2ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9kaXN0L3RlbXBsYXRlTG9hZGVyLmpzPz9yZWYtLTYhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvZGlzdC9pbmRleC5qcz8/cmVmLS0yLTAhLi4vLi4vbWQtbG9hZGVyL2luZGV4LmpzIS4vY2hlY2tib3gubWQ/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9N2I4MTQ3MTNcIiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./website/docs/zh-CN/checkbox.md?vue&type=template&id=7b814713\n");

/***/ })

}]);