var e=Object.defineProperty,l=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable,t=(l,n,a)=>n in l?e(l,n,{enumerable:!0,configurable:!0,writable:!0,value:a}):l[n]=a,o=(e,o)=>{for(var i in o||(o={}))n.call(o,i)&&t(e,i,o[i]);if(l)for(var i of l(o))a.call(o,i)&&t(e,i,o[i]);return e};import{H as i,o as r,C as s,D as u,v as d,P as c,at as p,as as v}from"./vue.69b6befa.js";import{_ as b}from"./index.f86c4400.js";import"./hongluan.17b69477.js";import"./highlight.5ad4a187.js";import"./hongluan-icons.f9afdbe4.js";const h={name:"component-doc",components:{"hl-demo0":function(){const{createElementVNode:e,resolveComponent:l,createVNode:n,withCtx:a,normalizeStyle:t,openBlock:i,createBlock:r}=p,s=e("p",null,"下拉树单选+过滤",-1);const{defineComponent:u,ref:d}=p,c=u({setup(){const e=d({}),l=d([{value:"zhinan",label:"指南",children:[{value:"shejiyuanze",label:"设计原则",children:[{value:"yizhi",label:"一致"},{value:"fankui",label:"反馈"},{value:"xiaolv",label:"效率"},{value:"kekong",label:"可控"}]},{value:"daohang",label:"导航",children:[{value:"cexiangdaohang",label:"侧向导航"},{value:"dingbudaohang",label:"顶部导航"}]}]},{value:"zujian",label:"组件",children:[{value:"basic",label:"Basic",children:[{value:"layout",label:"Layout 布局"},{value:"color",label:"Color 色彩"},{value:"typography",label:"Typography 字体"},{value:"icon",label:"Icon 图标"},{value:"button",label:"Button 按钮"}]},{value:"form",label:"Form",children:[{value:"radio",label:"Radio 单选框"},{value:"checkbox",label:"Checkbox 复选框"},{value:"input",label:"Input 输入框"},{value:"input-number",label:"InputNumber 计数器"},{value:"select",label:"Select 选择器"},{value:"cascader",label:"Cascader 级联选择器"},{value:"switch",label:"Switch 开关"},{value:"slider",label:"Slider 滑块"},{value:"time-picker",label:"TimePicker 时间选择器"},{value:"date-picker",label:"DatePicker 日期选择器"},{value:"datetime-picker",label:"DateTimePicker 日期时间选择器"},{value:"upload",label:"Upload 上传"},{value:"rate",label:"Rate 评分"},{value:"form",label:"Form 表单"}]},{value:"data",label:"Data",children:[{value:"table",label:"Table 表格"},{value:"tag",label:"Tag 标签"},{value:"progress",label:"Progress 进度条"},{value:"tree",label:"Tree 树形控件"},{value:"pagination",label:"Pagination 分页"},{value:"badge",label:"Badge 徽章"}]},{value:"notice",label:"Notice",children:[{value:"alert",label:"Alert 警告"},{value:"loading",label:"Loading 加载"},{value:"message",label:"Message 消息提示"},{value:"message-box",label:"MessageBox 弹框"},{value:"notification",label:"Notification 通知"}]},{value:"navigation",label:"Navigation",children:[{value:"menu",label:"Menu 导航菜单"},{value:"tabs",label:"Tabs 标签页"},{value:"breadcrumb",label:"Breadcrumb 面包屑"},{value:"dropdown",label:"Dropdown 下拉菜单"},{value:"steps",label:"Steps 步骤条"}]},{value:"others",label:"Others",children:[{value:"dialog",label:"Dialog 对话框"},{value:"tooltip",label:"Tooltip 文字提示"},{value:"popover",label:"Popover 弹出框"},{value:"card",label:"Card 卡片"},{value:"carousel",label:"Carousel 走马灯"},{value:"collapse",label:"Collapse 折叠面板"}]}]},{value:"ziyuan",label:"资源",children:[{value:"axure",label:"Axure Components"},{value:"sketch",label:"Sketch Templates"},{value:"jiaohu",label:"组件交互文档"}]}]),n=d(null),a=d(null);return{selector1:n,hlTreeSingle:a,treeStyle:e,options:l,resize:({offsetWidth:l})=>{e.value.width=l+"px"},clickTree:e=>{n.value.setValue(e.label),a.value.filter("")},filterNode:(e,l)=>!e||-1!==l.label.indexOf(e),handleTreeInput:e=>{a.value.filter(e)}}}});return o({render:function(e,o){const u=l("two-point"),d=l("hl-icon"),c=l("hl-tree"),p=l("hl-selector"),v=l("hl-col"),b=l("hl-row");return i(),r(b,{align:"center"},{default:a((()=>[n(v,{span:"col-md-12 col-lg-10"},{default:a((()=>[s,n(p,{ref:"selector1",filterable:"",clearable:"",block:"",onInput:e.handleTreeInput,onClear:o[0]||(o[0]=l=>e.handleTreeInput("")),onResize:e.resize},{prefix:a((()=>[n(d,null,{default:a((()=>[n(u)])),_:1})])),default:a((()=>[n(c,{ref:"hlTreeSingle",style:t(e.treeStyle),"node-key":"value",data:e.options,"filter-node-method":e.filterNode,onNodeClick:e.clickTree,class:"p-md"},null,8,["style","data","filter-node-method","onNodeClick"])])),_:1},8,["onInput","onResize"])])),_:1}),n(v,{span:"col-md-12 col-lg-10"})])),_:1})}},c)}(),"hl-demo1":function(){const{createElementVNode:e,resolveComponent:l,createVNode:n,withCtx:a,toDisplayString:t,openBlock:i,createBlock:r}=p,s=e("p",null,"下拉树多选",-1);const{defineComponent:u,ref:d}=p,c=u({setup(){const e=d([]),l=d([{value:"zhinan",label:"指南",children:[{value:"shejiyuanze",label:"设计原则",children:[{value:"yizhi",label:"一致"},{value:"fankui",label:"反馈"},{value:"xiaolv",label:"效率"},{value:"kekong",label:"可控"}]},{value:"daohang",label:"导航",children:[{value:"cexiangdaohang",label:"侧向导航"},{value:"dingbudaohang",label:"顶部导航"}]}]},{value:"zujian",label:"组件",children:[{value:"basic",label:"Basic",children:[{value:"layout",label:"Layout 布局"},{value:"color",label:"Color 色彩"},{value:"typography",label:"Typography 字体"},{value:"icon",label:"Icon 图标"},{value:"button",label:"Button 按钮"}]},{value:"form",label:"Form",children:[{value:"radio",label:"Radio 单选框"},{value:"checkbox",label:"Checkbox 复选框"},{value:"input",label:"Input 输入框"},{value:"input-number",label:"InputNumber 计数器"},{value:"select",label:"Select 选择器"},{value:"cascader",label:"Cascader 级联选择器"},{value:"switch",label:"Switch 开关"},{value:"slider",label:"Slider 滑块"},{value:"time-picker",label:"TimePicker 时间选择器"},{value:"date-picker",label:"DatePicker 日期选择器"},{value:"datetime-picker",label:"DateTimePicker 日期时间选择器"},{value:"upload",label:"Upload 上传"},{value:"rate",label:"Rate 评分"},{value:"form",label:"Form 表单"}]},{value:"data",label:"Data",children:[{value:"table",label:"Table 表格"},{value:"tag",label:"Tag 标签"},{value:"progress",label:"Progress 进度条"},{value:"tree",label:"Tree 树形控件"},{value:"pagination",label:"Pagination 分页"},{value:"badge",label:"Badge 徽章"}]},{value:"notice",label:"Notice",children:[{value:"alert",label:"Alert 警告"},{value:"loading",label:"Loading 加载"},{value:"message",label:"Message 消息提示"},{value:"message-box",label:"MessageBox 弹框"},{value:"notification",label:"Notification 通知"}]},{value:"navigation",label:"Navigation",children:[{value:"menu",label:"Menu 导航菜单"},{value:"tabs",label:"Tabs 标签页"},{value:"breadcrumb",label:"Breadcrumb 面包屑"},{value:"dropdown",label:"Dropdown 下拉菜单"},{value:"steps",label:"Steps 步骤条"}]},{value:"others",label:"Others",children:[{value:"dialog",label:"Dialog 对话框"},{value:"tooltip",label:"Tooltip 文字提示"},{value:"popover",label:"Popover 弹出框"},{value:"card",label:"Card 卡片"},{value:"carousel",label:"Carousel 走马灯"},{value:"collapse",label:"Collapse 折叠面板"}]}]},{value:"ziyuan",label:"资源",children:[{value:"axure",label:"Axure Components"},{value:"sketch",label:"Sketch Templates"},{value:"jiaohu",label:"组件交互文档"}]}]),n=d(null),a=d(null);return{treeNodes:e,options:l,hlTree:n,selector2:a,removeTag:l=>{e.value=e.value.filter((e=>e!==l.text)),n.value.setCheckedNodes(e.value)},clearTags:()=>{e.value=[],n.value.setCheckedNodes(e.value)},filterNode:(e,l)=>!e||-1!==l.label.indexOf(e),handleTreeInput:e=>{n.value.filter(e)},chooseTree:()=>{e.value=n.value.getCheckedNodes(),a.value.setValue(e.value)}}}});return o({render:function(o,u){const d=l("hl-tree"),c=l("hl-scrollbar"),p=l("hl-selector"),v=l("hl-col"),b=l("hl-row");return i(),r(b,{align:"center"},{default:a((()=>[n(v,{span:"col-md-12 col-lg-10"},{default:a((()=>[s,n(p,{ref:"selector2",clearable:"",filterable:"",block:"",multiple:"",onInput:o.handleTreeInput,onRemoveTag:o.removeTag,onClear:o.clearTags},{tag:a((({tag:l})=>[e("span",null,t(l.text.label),1)])),default:a((()=>[n(c,null,{default:a((()=>[n(d,{ref:"hlTree","node-key":"value","show-checkbox":"",style:{width:"300px","max-height":"400px"},data:o.options,"filter-node-method":o.filterNode,onCheckChange:o.chooseTree},null,8,["data","filter-node-method","onCheckChange"])])),_:1})])),_:1},8,["onInput","onRemoveTag","onClear"])])),_:1}),n(v,{span:"col-md-12 col-lg-10"})])),_:1})}},c)}(),"hl-demo2":function(){const{createElementVNode:e,resolveComponent:l,createVNode:n,withCtx:a,openBlock:t,createBlock:i}=p,r=e("p",null,"下拉表格多选",-1);const{defineComponent:s,ref:u}=p,d=s({setup(){const e=u([{name:"王小虎",tel:"16787812234"},{name:"王2虎",tel:"17787812234"},{name:"王3虎",tel:"18787812234"},{name:"王4虎",tel:"19787812234"},{name:"王5虎",tel:"10787812234"},{name:"王6虎",tel:"11787812234"},{name:"王7虎",tel:"12787812234"}]),l=u([]),n=u(null),a=u(null);return{tableData:e,multipleSelection:l,multipleTable:n,selectorTable:a,handleSelectionChange:e=>{l.value=e,a.value.setValue(l.value.map((e=>e.name)))},handleTableInput:l=>{""===l?n.value.clearSelection():n.value.toggleRowSelection(e.value.find((e=>e.name===l.text)))}}}});return o({render:function(e,o){const s=l("two-point"),u=l("hl-icon"),d=l("hl-table-column"),c=l("hl-table"),p=l("hl-selector"),v=l("hl-col"),b=l("hl-row");return t(),i(b,{align:"center"},{default:a((()=>[n(v,{span:"col-md-12 col-lg-10"},{default:a((()=>[r,n(p,{ref:"selectorTable",clearable:"",block:"",multiple:"",size:"sm",onRemoveTag:e.handleTableInput,onClear:o[0]||(o[0]=l=>e.handleTableInput(""))},{prefix:a((()=>[n(u,null,{default:a((()=>[n(s)])),_:1})])),default:a((()=>[n(c,{ref:"multipleTable",data:e.tableData,"tooltip-effect":"dark",onSelectionChange:e.handleSelectionChange},{default:a((()=>[n(d,{type:"selection",width:"55"}),n(d,{prop:"name",label:"姓名",width:"120"}),n(d,{prop:"tel",label:"电话",width:"120","show-overflow-tooltip":""})])),_:1},8,["data","onSelectionChange"])])),_:1},8,["onRemoveTag"])])),_:1}),n(v,{span:"col-md-12 col-lg-10"})])),_:1})}},d)}(),"hl-demo3":function(){const{createElementVNode:e,resolveComponent:l,withCtx:n,createVNode:a,renderList:t,Fragment:i,openBlock:r,createElementBlock:s,withModifiers:u,createBlock:d}=p,c=e("p",null,"自定义多选Icon",-1),v=[e("li",{title:"😀笑嘻嘻"},[e("span",null,"😀")],-1),e("li",{title:"😁笑嘻嘻的脸，含笑的眼睛"},[e("span",null,"😁")],-1),e("li",{title:"😂脸上带着喜悦的泪水"},[e("span",null,"😂")],-1),e("li",{title:"😃开口笑脸"},[e("span",null,"😃")],-1),e("li",{title:"😄开口笑脸和微笑的眼睛"},[e("span",null,"😄")],-1),e("li",{title:"😅笑脸淌冷汗"},[e("span",null,"😅")],-1),e("li",{title:"😆开口笑紧闭的眼睛"},[e("span",null,"😆")],-1),e("li",{title:"😉眨眼表情"},[e("span",null,"😉")],-1),e("li",{title:"😊面带微笑的眼睛"},[e("span",null,"😊")],-1),e("li",{title:"😋品尝美味食物表情"},[e("span",null,"😋")],-1),e("li",{title:"😎太阳镜笑脸"},[e("span",null,"😎")],-1),e("li",{title:"😍面带心形眼睛"},[e("span",null,"😍")],-1),e("li",{title:"😘飞吻表情"},[e("span",null,"😘")],-1),e("li",{title:"😗亲吻表情"},[e("span",null,"😗")],-1),e("li",{title:"😙含笑亲吻表情"},[e("span",null,"😙")],-1),e("li",{title:"😚闭眼亲吻表情"},[e("span",null,"😚")],-1),e("li",{title:"☺笑脸"},[e("span",null,"☺")],-1),e("li",{title:"😇光环笑脸"},[e("span",null,"😇")],-1),e("li",{title:"😐中性面"},[e("span",null,"😐")],-1),e("li",{title:"😑面无表情"},[e("span",null,"😑")],-1),e("li",{title:"😶没有嘴的脸"},[e("span",null,"😶")],-1),e("li",null,[e("span",null,"😏")],-1),e("li",null,[e("span",null,"😣")],-1),e("li",null,[e("span",null,"😥")],-1),e("li",null,[e("span",null,"😮")],-1),e("li",null,[e("span",null,"😯")],-1),e("li",{title:"😪困"},[e("span",null,"😪")],-1),e("li",null,[e("span",null,"😫")],-1),e("li",null,[e("span",null,"😴")],-1),e("li",{title:"😌安心"},[e("span",null,"😌")],-1),e("li",{title:"😛吐舌头"},[e("span",null,"😛")],-1),e("li",null,[e("span",null,"😜")],-1),e("li",null,[e("span",null,"😝")],-1),e("li",null,[e("span",null,"😒")],-1),e("li",null,[e("span",null,"😓")],-1),e("li",null,[e("span",null,"😔")],-1),e("li",null,[e("span",null,"😕")],-1),e("li",{title:"😲惊讶"},[e("span",null,"😲")],-1),e("li",{title:"😷戴口罩"},[e("span",null,"😷")],-1),e("li",{title:"😖被打败"},[e("span",null,"😖")],-1),e("li",null,[e("span",null,"😞")],-1),e("li",null,[e("span",null,"😟")],-1),e("li",{title:"😤面带胜利"},[e("span",null,"😤")],-1),e("li",{title:"😢哭泣的脸"},[e("span",null,"😢")],-1),e("li",{title:"😭大声哭泣的脸"},[e("span",null,"😭")],-1),e("li",{title:"😦张嘴哭"},[e("span",null,"😦")],-1),e("li",{title:"😧痛苦"},[e("span",null,"😧")],-1),e("li",{title:"😨恐惧"},[e("span",null,"😨")],-1),e("li",null,[e("span",null,"😬")],-1),e("li",{title:"😰淌冷汗"},[e("span",null,"😰")],-1),e("li",{title:"😱尖叫恐惧"},[e("span",null,"😱")],-1),e("li",{title:"😳红扑扑的脸蛋"},[e("span",null,"😳")],-1),e("li",{title:"😵晕"},[e("span",null,"😵")],-1),e("li",null,[e("span",null,"😡")],-1),e("li",null,[e("span",null,"😠")],-1),e("li",null,[e("span",null,"😈")],-1),e("li",null,[e("span",null,"👿")],-1),e("li",{title:"👹日本食人魔"},[e("span",null,"👹")],-1),e("li",null,[e("span",null,"👺")],-1),e("li",null,[e("span",null,"💀")],-1),e("li",null,[e("span",null,"☠")],-1),e("li",null,[e("span",null,"👻")],-1),e("li",null,[e("span",null,"👽")],-1)],b=["innerHTML"],h=e("p",null,"自定义多选视频",-1),m={ref:"selector4Dom",class:"selector-content video-list clearfix",style:{width:"300px"}},g=["src","onClick"],f=["src"];const{defineComponent:T,ref:k}=p,x=T({setup(){const e=k([]),l=k([]),n=k(["http://clips.vorwaerts-gmbh.de/big_buck_bunny.mp4","http://www.w3school.com.cn/example/html5/mov_bbb.mp4","https://v-cdn.zjol.com.cn/276998.mp4","https://v-cdn.zjol.com.cn/277003.mp4","https://v-cdn.zjol.com.cn/277000.mp4","https://v-cdn.zjol.com.cn/277001.mp4","https://v-cdn.zjol.com.cn/277002.mp4"]),a=k(null),t=k(null);return{icons:e,videos:l,videoUrls:n,selector3:a,selector4:t,selectIcon:l=>{console.log(l),"SPAN"===l.target.tagName.toUpperCase()&&(e.value.includes(l.target.innerHTML)||e.value.push(l.target.innerHTML),a.value.setValue(e.value))},chooseIcon:l=>{e.value.includes(l)||e.value.push(l),a.value.setValue(e.value)},clearIcons:()=>{e.value=[]},removeIcon:l=>{e.value=e.value.filter((e=>e!==l.text))},chooseVideo:e=>{l.value.includes(e)||l.value.push(e),t.value.setValue(l.value)},clearVideos:()=>{l.value=[]},removeVideo:e=>{l.value=l.value.filter((l=>l!==e.text))}}}});return o({render:function(o,p){const T=l("hl-selector"),k=l("hl-col"),x=l("hl-row");return r(),d(x,{align:"center",gap:"var(--lg)"},{default:n((()=>[a(k,{span:"col-md-12 col-lg-10"},{default:n((()=>[c,a(T,{ref:"selector3",clearable:"",block:"",multiple:"",onRemoveTag:o.removeIcon,onClear:o.clearIcons},{tag:n((({tag:l})=>[e("span",{innerHTML:l.text,style:{width:"22px"}},null,8,b)])),default:n((()=>[e("ul",{class:"icon-list clearfix selector-content",ref:"selector3Dom",style:{width:"300px"},onClick:p[0]||(p[0]=(...e)=>o.selectIcon&&o.selectIcon(...e))},v,512)])),_:1},8,["onRemoveTag","onClear"])])),_:1}),a(k,{span:"col-md-12 col-lg-10"},{default:n((()=>[h,a(T,{ref:"selector4",clearable:"",block:"",multiple:"",onRemoveTag:o.removeVideo,onClear:o.clearVideos},{tag:n((({tag:l})=>[e("video",{width:"100",height:"100",style:{"object-fit":"cover"},src:l.text,controls:"controls"},null,8,f)])),default:n((()=>[e("div",m,[(r(!0),s(i,null,t(o.videoUrls,(e=>(r(),s("video",{width:"120",height:"100",key:e,src:e,onClick:u((l=>o.chooseVideo(e)),["stop"])},null,8,g)))),128))],512)])),_:1},8,["onRemoveTag","onClear"])])),_:1})])),_:1})}},x)}()}},m={class:"doc-main-content"},g={class:"doc-content"},f=u("h1",null,"Selector 高级选择器",-1),T=u("p",null,"Selector 是一款可高度自定义的下拉选择器。",-1),k=u("div",null,[u("p",null,"下拉选择器配合树组件实现下拉单选树节点以及输入过滤功能。")],-1),x=u("pre",null,[u("code",{class:"html"},"<template>\n  <hl-row align=\"center\">\n    <hl-col span=\"col-md-12 col-lg-10\">\n      <p>下拉树单选+过滤</p>\n      <hl-selector ref=\"selector1\" filterable clearable block @input=\"handleTreeInput\" @clear=\"handleTreeInput('')\" @resize=\"resize\">\n        <template #prefix>\n          <hl-icon><two-point /></hl-icon>\n        </template>\n        <hl-tree ref=\"hlTreeSingle\" :style=\"treeStyle\" node-key=\"value\" :data=\"options\" :filter-node-method=\"filterNode\" @node-click=\"clickTree\" class=\"p-md\" />\n      </hl-selector>\n    </hl-col>\n    <hl-col span=\"col-md-12 col-lg-10\"> </hl-col>\n  </hl-row>\n</template>\n\n<script>\n  import { defineComponent, ref } from 'vue'\n  export default defineComponent({\n    setup() {\n      const treeStyle = ref({})\n      const options = ref([\n        {\n          value: 'zhinan',\n          label: '指南',\n          children: [\n            {\n              value: 'shejiyuanze',\n              label: '设计原则',\n              children: [\n                {\n                  value: 'yizhi',\n                  label: '一致',\n                },\n                {\n                  value: 'fankui',\n                  label: '反馈',\n                },\n                {\n                  value: 'xiaolv',\n                  label: '效率',\n                },\n                {\n                  value: 'kekong',\n                  label: '可控',\n                },\n              ],\n            },\n            {\n              value: 'daohang',\n              label: '导航',\n              children: [\n                {\n                  value: 'cexiangdaohang',\n                  label: '侧向导航',\n                },\n                {\n                  value: 'dingbudaohang',\n                  label: '顶部导航',\n                },\n              ],\n            },\n          ],\n        },\n        {\n          value: 'zujian',\n          label: '组件',\n          children: [\n            {\n              value: 'basic',\n              label: 'Basic',\n              children: [\n                {\n                  value: 'layout',\n                  label: 'Layout 布局',\n                },\n                {\n                  value: 'color',\n                  label: 'Color 色彩',\n                },\n                {\n                  value: 'typography',\n                  label: 'Typography 字体',\n                },\n                {\n                  value: 'icon',\n                  label: 'Icon 图标',\n                },\n                {\n                  value: 'button',\n                  label: 'Button 按钮',\n                },\n              ],\n            },\n            {\n              value: 'form',\n              label: 'Form',\n              children: [\n                {\n                  value: 'radio',\n                  label: 'Radio 单选框',\n                },\n                {\n                  value: 'checkbox',\n                  label: 'Checkbox 复选框',\n                },\n                {\n                  value: 'input',\n                  label: 'Input 输入框',\n                },\n                {\n                  value: 'input-number',\n                  label: 'InputNumber 计数器',\n                },\n                {\n                  value: 'select',\n                  label: 'Select 选择器',\n                },\n                {\n                  value: 'cascader',\n                  label: 'Cascader 级联选择器',\n                },\n                {\n                  value: 'switch',\n                  label: 'Switch 开关',\n                },\n                {\n                  value: 'slider',\n                  label: 'Slider 滑块',\n                },\n                {\n                  value: 'time-picker',\n                  label: 'TimePicker 时间选择器',\n                },\n                {\n                  value: 'date-picker',\n                  label: 'DatePicker 日期选择器',\n                },\n                {\n                  value: 'datetime-picker',\n                  label: 'DateTimePicker 日期时间选择器',\n                },\n                {\n                  value: 'upload',\n                  label: 'Upload 上传',\n                },\n                {\n                  value: 'rate',\n                  label: 'Rate 评分',\n                },\n                {\n                  value: 'form',\n                  label: 'Form 表单',\n                },\n              ],\n            },\n            {\n              value: 'data',\n              label: 'Data',\n              children: [\n                {\n                  value: 'table',\n                  label: 'Table 表格',\n                },\n                {\n                  value: 'tag',\n                  label: 'Tag 标签',\n                },\n                {\n                  value: 'progress',\n                  label: 'Progress 进度条',\n                },\n                {\n                  value: 'tree',\n                  label: 'Tree 树形控件',\n                },\n                {\n                  value: 'pagination',\n                  label: 'Pagination 分页',\n                },\n                {\n                  value: 'badge',\n                  label: 'Badge 徽章',\n                },\n              ],\n            },\n            {\n              value: 'notice',\n              label: 'Notice',\n              children: [\n                {\n                  value: 'alert',\n                  label: 'Alert 警告',\n                },\n                {\n                  value: 'loading',\n                  label: 'Loading 加载',\n                },\n                {\n                  value: 'message',\n                  label: 'Message 消息提示',\n                },\n                {\n                  value: 'message-box',\n                  label: 'MessageBox 弹框',\n                },\n                {\n                  value: 'notification',\n                  label: 'Notification 通知',\n                },\n              ],\n            },\n            {\n              value: 'navigation',\n              label: 'Navigation',\n              children: [\n                {\n                  value: 'menu',\n                  label: 'Menu 导航菜单',\n                },\n                {\n                  value: 'tabs',\n                  label: 'Tabs 标签页',\n                },\n                {\n                  value: 'breadcrumb',\n                  label: 'Breadcrumb 面包屑',\n                },\n                {\n                  value: 'dropdown',\n                  label: 'Dropdown 下拉菜单',\n                },\n                {\n                  value: 'steps',\n                  label: 'Steps 步骤条',\n                },\n              ],\n            },\n            {\n              value: 'others',\n              label: 'Others',\n              children: [\n                {\n                  value: 'dialog',\n                  label: 'Dialog 对话框',\n                },\n                {\n                  value: 'tooltip',\n                  label: 'Tooltip 文字提示',\n                },\n                {\n                  value: 'popover',\n                  label: 'Popover 弹出框',\n                },\n                {\n                  value: 'card',\n                  label: 'Card 卡片',\n                },\n                {\n                  value: 'carousel',\n                  label: 'Carousel 走马灯',\n                },\n                {\n                  value: 'collapse',\n                  label: 'Collapse 折叠面板',\n                },\n              ],\n            },\n          ],\n        },\n        {\n          value: 'ziyuan',\n          label: '资源',\n          children: [\n            {\n              value: 'axure',\n              label: 'Axure Components',\n            },\n            {\n              value: 'sketch',\n              label: 'Sketch Templates',\n            },\n            {\n              value: 'jiaohu',\n              label: '组件交互文档',\n            },\n          ],\n        },\n      ])\n      const selector1 = ref(null)\n      const hlTreeSingle = ref(null)\n\n      const resize = ({ offsetWidth }) => {\n        treeStyle.value.width = offsetWidth + 'px'\n      }\n      const clickTree = data => {\n        selector1.value.setValue(data.label)\n        hlTreeSingle.value.filter('')\n      }\n      const filterNode = (value, data) => {\n        if (!value) return true\n        return data.label.indexOf(value) !== -1\n      }\n      const handleTreeInput = val => {\n        hlTreeSingle.value.filter(val)\n      }\n\n      return {\n        selector1,\n        hlTreeSingle,\n        treeStyle,\n        options,\n        resize,\n        clickTree,\n        filterNode,\n        handleTreeInput,\n      }\n    },\n  })\n<\/script>\n")],-1),y=u("div",null,[u("p",null,"下拉选择器配合树组件实现下拉多选树节点以及输入过滤功能。")],-1),w=u("pre",null,[u("code",{class:"html"},"<template>\n  <hl-row align=\"center\">\n    <hl-col span=\"col-md-12 col-lg-10\">\n      <p>下拉树多选</p>\n      <hl-selector ref=\"selector2\" clearable filterable block multiple @input=\"handleTreeInput\" @remove-tag=\"removeTag\" @clear=\"clearTags\">\n        <hl-scrollbar>\n          <hl-tree ref=\"hlTree\" node-key=\"value\" show-checkbox style=\"width: 300px; max-height:400px\" :data=\"options\" :filter-node-method=\"filterNode\" @check-change=\"chooseTree\" />\n        </hl-scrollbar>\n        <template #tag=\"{ tag }\">\n          <span>{{ tag.text.label }}</span>\n        </template>\n      </hl-selector>\n    </hl-col>\n    <hl-col span=\"col-md-12 col-lg-10\"> </hl-col>\n  </hl-row>\n</template>\n\n<script>\n  import { defineComponent, ref } from 'vue'\n  export default defineComponent({\n    setup() {\n      const treeNodes = ref([])\n      const options = ref([\n        {\n          value: 'zhinan',\n          label: '指南',\n          children: [\n            {\n              value: 'shejiyuanze',\n              label: '设计原则',\n              children: [\n                {\n                  value: 'yizhi',\n                  label: '一致',\n                },\n                {\n                  value: 'fankui',\n                  label: '反馈',\n                },\n                {\n                  value: 'xiaolv',\n                  label: '效率',\n                },\n                {\n                  value: 'kekong',\n                  label: '可控',\n                },\n              ],\n            },\n            {\n              value: 'daohang',\n              label: '导航',\n              children: [\n                {\n                  value: 'cexiangdaohang',\n                  label: '侧向导航',\n                },\n                {\n                  value: 'dingbudaohang',\n                  label: '顶部导航',\n                },\n              ],\n            },\n          ],\n        },\n        {\n          value: 'zujian',\n          label: '组件',\n          children: [\n            {\n              value: 'basic',\n              label: 'Basic',\n              children: [\n                {\n                  value: 'layout',\n                  label: 'Layout 布局',\n                },\n                {\n                  value: 'color',\n                  label: 'Color 色彩',\n                },\n                {\n                  value: 'typography',\n                  label: 'Typography 字体',\n                },\n                {\n                  value: 'icon',\n                  label: 'Icon 图标',\n                },\n                {\n                  value: 'button',\n                  label: 'Button 按钮',\n                },\n              ],\n            },\n            {\n              value: 'form',\n              label: 'Form',\n              children: [\n                {\n                  value: 'radio',\n                  label: 'Radio 单选框',\n                },\n                {\n                  value: 'checkbox',\n                  label: 'Checkbox 复选框',\n                },\n                {\n                  value: 'input',\n                  label: 'Input 输入框',\n                },\n                {\n                  value: 'input-number',\n                  label: 'InputNumber 计数器',\n                },\n                {\n                  value: 'select',\n                  label: 'Select 选择器',\n                },\n                {\n                  value: 'cascader',\n                  label: 'Cascader 级联选择器',\n                },\n                {\n                  value: 'switch',\n                  label: 'Switch 开关',\n                },\n                {\n                  value: 'slider',\n                  label: 'Slider 滑块',\n                },\n                {\n                  value: 'time-picker',\n                  label: 'TimePicker 时间选择器',\n                },\n                {\n                  value: 'date-picker',\n                  label: 'DatePicker 日期选择器',\n                },\n                {\n                  value: 'datetime-picker',\n                  label: 'DateTimePicker 日期时间选择器',\n                },\n                {\n                  value: 'upload',\n                  label: 'Upload 上传',\n                },\n                {\n                  value: 'rate',\n                  label: 'Rate 评分',\n                },\n                {\n                  value: 'form',\n                  label: 'Form 表单',\n                },\n              ],\n            },\n            {\n              value: 'data',\n              label: 'Data',\n              children: [\n                {\n                  value: 'table',\n                  label: 'Table 表格',\n                },\n                {\n                  value: 'tag',\n                  label: 'Tag 标签',\n                },\n                {\n                  value: 'progress',\n                  label: 'Progress 进度条',\n                },\n                {\n                  value: 'tree',\n                  label: 'Tree 树形控件',\n                },\n                {\n                  value: 'pagination',\n                  label: 'Pagination 分页',\n                },\n                {\n                  value: 'badge',\n                  label: 'Badge 徽章',\n                },\n              ],\n            },\n            {\n              value: 'notice',\n              label: 'Notice',\n              children: [\n                {\n                  value: 'alert',\n                  label: 'Alert 警告',\n                },\n                {\n                  value: 'loading',\n                  label: 'Loading 加载',\n                },\n                {\n                  value: 'message',\n                  label: 'Message 消息提示',\n                },\n                {\n                  value: 'message-box',\n                  label: 'MessageBox 弹框',\n                },\n                {\n                  value: 'notification',\n                  label: 'Notification 通知',\n                },\n              ],\n            },\n            {\n              value: 'navigation',\n              label: 'Navigation',\n              children: [\n                {\n                  value: 'menu',\n                  label: 'Menu 导航菜单',\n                },\n                {\n                  value: 'tabs',\n                  label: 'Tabs 标签页',\n                },\n                {\n                  value: 'breadcrumb',\n                  label: 'Breadcrumb 面包屑',\n                },\n                {\n                  value: 'dropdown',\n                  label: 'Dropdown 下拉菜单',\n                },\n                {\n                  value: 'steps',\n                  label: 'Steps 步骤条',\n                },\n              ],\n            },\n            {\n              value: 'others',\n              label: 'Others',\n              children: [\n                {\n                  value: 'dialog',\n                  label: 'Dialog 对话框',\n                },\n                {\n                  value: 'tooltip',\n                  label: 'Tooltip 文字提示',\n                },\n                {\n                  value: 'popover',\n                  label: 'Popover 弹出框',\n                },\n                {\n                  value: 'card',\n                  label: 'Card 卡片',\n                },\n                {\n                  value: 'carousel',\n                  label: 'Carousel 走马灯',\n                },\n                {\n                  value: 'collapse',\n                  label: 'Collapse 折叠面板',\n                },\n              ],\n            },\n          ],\n        },\n        {\n          value: 'ziyuan',\n          label: '资源',\n          children: [\n            {\n              value: 'axure',\n              label: 'Axure Components',\n            },\n            {\n              value: 'sketch',\n              label: 'Sketch Templates',\n            },\n            {\n              value: 'jiaohu',\n              label: '组件交互文档',\n            },\n          ],\n        },\n      ])\n      const hlTree = ref(null)\n      const selector2 = ref(null)\n\n      const removeTag = tag => {\n        treeNodes.value = treeNodes.value.filter(n => n !== tag.text)\n        hlTree.value.setCheckedNodes(treeNodes.value)\n      }\n      const clearTags = () => {\n        treeNodes.value = []\n        hlTree.value.setCheckedNodes(treeNodes.value)\n      }\n      const filterNode = (value, data) => {\n        if (!value) return true\n        return data.label.indexOf(value) !== -1\n      }\n      const handleTreeInput = val => {\n        hlTree.value.filter(val)\n      }\n      const chooseTree = () => {\n        treeNodes.value = hlTree.value.getCheckedNodes()\n        selector2.value.setValue(treeNodes.value)\n      }\n\n      return {\n        treeNodes,\n        options,\n        hlTree,\n        selector2,\n        removeTag,\n        clearTags,\n        filterNode,\n        handleTreeInput,\n        chooseTree,\n      }\n    },\n  })\n<\/script>\n")],-1),C=u("div",null,[u("p",null,"下拉选择器配合表格实现表格选择。")],-1),S=u("pre",null,[u("code",{class:"html"},'<template>\n  <hl-row align="center">\n    <hl-col span="col-md-12 col-lg-10">\n      <p>下拉表格多选</p>\n      <hl-selector ref="selectorTable" clearable block multiple size="sm" @remove-tag="handleTableInput" @clear="handleTableInput(\'\')">\n        <template #prefix>\n          <hl-icon><two-point /></hl-icon>\n        </template>\n        <hl-table ref="multipleTable" :data="tableData" tooltip-effect="dark" @selection-change="handleSelectionChange">\n          <hl-table-column type="selection" width="55"> </hl-table-column>\n          <hl-table-column prop="name" label="姓名" width="120"> </hl-table-column>\n          <hl-table-column prop="tel" label="电话" width="120" show-overflow-tooltip> </hl-table-column>\n        </hl-table>\n      </hl-selector>\n    </hl-col>\n    <hl-col span="col-md-12 col-lg-10"> </hl-col>\n  </hl-row>\n</template>\n\n<script>\n  import { defineComponent, ref } from \'vue\'\n  export default defineComponent({\n    setup() {\n      const tableData = ref([\n        {\n          name: \'王小虎\',\n          tel: \'16787812234\',\n        },\n        {\n          name: \'王2虎\',\n          tel: \'17787812234\',\n        },\n        {\n          name: \'王3虎\',\n          tel: \'18787812234\',\n        },\n        {\n          name: \'王4虎\',\n          tel: \'19787812234\',\n        },\n        {\n          name: \'王5虎\',\n          tel: \'10787812234\',\n        },\n        {\n          name: \'王6虎\',\n          tel: \'11787812234\',\n        },\n        {\n          name: \'王7虎\',\n          tel: \'12787812234\',\n        },\n      ])\n      const multipleSelection = ref([])\n      const multipleTable = ref(null)\n      const selectorTable = ref(null)\n\n      const handleSelectionChange = val => {\n        multipleSelection.value = val\n        selectorTable.value.setValue(multipleSelection.value.map(s => s.name))\n      }\n      const handleTableInput = tag => {\n        if (tag === \'\') {\n          multipleTable.value.clearSelection()\n        } else {\n          multipleTable.value.toggleRowSelection(tableData.value.find(d => d.name === tag.text))\n        }\n      }\n\n      return {\n        tableData,\n        multipleSelection,\n        multipleTable,\n        selectorTable,\n        handleSelectionChange,\n        handleTableInput,\n      }\n    },\n  })\n<\/script>\n')],-1),I=u("div",null,[u("p",null,"实现自定义选择内容，下面一图片以及视频为例。")],-1),N=u("pre",null,[u("code",{class:"html"},'<template>\n  <hl-row align="center" gap="var(--lg)">\n    <hl-col span="col-md-12 col-lg-10">\n      <p>自定义多选Icon</p>\n      <hl-selector ref="selector3" clearable block multiple @remove-tag="removeIcon" @clear="clearIcons">\n        <ul class="icon-list clearfix selector-content" ref="selector3Dom" style="width:300px" @click="selectIcon">\n          <li title="😀笑嘻嘻"><span>😀</span></li>\n          <li title="😁笑嘻嘻的脸，含笑的眼睛"><span>😁</span></li>\n          <li title="😂脸上带着喜悦的泪水"><span>😂</span></li>\n          <li title="😃开口笑脸"><span>😃</span></li>\n          <li title="😄开口笑脸和微笑的眼睛"><span>😄</span></li>\n          <li title="😅笑脸淌冷汗"><span>😅</span></li>\n          <li title="😆开口笑紧闭的眼睛"><span>😆</span></li>\n          <li title="😉眨眼表情"><span>😉</span></li>\n          <li title="😊面带微笑的眼睛"><span>😊</span></li>\n          <li title="😋品尝美味食物表情"><span>😋</span></li>\n          <li title="😎太阳镜笑脸"><span>😎</span></li>\n          <li title="😍面带心形眼睛"><span>😍</span></li>\n          <li title="😘飞吻表情"><span>😘</span></li>\n          <li title="😗亲吻表情"><span>😗</span></li>\n          <li title="😙含笑亲吻表情"><span>😙</span></li>\n          <li title="😚闭眼亲吻表情"><span>😚</span></li>\n          <li title="☺笑脸"><span>☺</span></li>\n          <li title="😇光环笑脸"><span>😇</span></li>\n          <li title="😐中性面"><span>😐</span></li>\n          <li title="😑面无表情"><span>😑</span></li>\n          <li title="😶没有嘴的脸"><span>😶</span></li>\n          <li><span>😏</span></li>\n          <li><span>😣</span></li>\n          <li><span>😥</span></li>\n          <li><span>😮</span></li>\n          <li><span>😯</span></li>\n          <li title="😪困"><span>😪</span></li>\n          <li><span>😫</span></li>\n          <li><span>😴</span></li>\n          <li title="😌安心"><span>😌</span></li>\n          <li title="😛吐舌头"><span>😛</span></li>\n          <li><span>😜</span></li>\n          <li><span>😝</span></li>\n          <li><span>😒</span></li>\n          <li><span>😓</span></li>\n          <li><span>😔</span></li>\n          <li><span>😕</span></li>\n          <li title="😲惊讶"><span>😲</span></li>\n          <li title="😷戴口罩"><span>😷</span></li>\n          <li title="😖被打败"><span>😖</span></li>\n          <li><span>😞</span></li>\n          <li><span>😟</span></li>\n          <li title="😤面带胜利"><span>😤</span></li>\n          <li title="😢哭泣的脸"><span>😢</span></li>\n          <li title="😭大声哭泣的脸"><span>😭</span></li>\n          <li title="😦张嘴哭"><span>😦</span></li>\n          <li title="😧痛苦"><span>😧</span></li>\n          <li title="😨恐惧"><span>😨</span></li>\n          <li><span>😬</span></li>\n          <li title="😰淌冷汗"><span>😰</span></li>\n          <li title="😱尖叫恐惧"><span>😱</span></li>\n          <li title="😳红扑扑的脸蛋"><span>😳</span></li>\n          <li title="😵晕"><span>😵</span></li>\n          <li><span>😡</span></li>\n          <li><span>😠</span></li>\n          <li><span>😈</span></li>\n          <li><span>👿</span></li>\n          <li title="👹日本食人魔"><span>👹</span></li>\n          <li><span>👺</span></li>\n          <li><span>💀</span></li>\n          <li><span>☠</span></li>\n          <li><span>👻</span></li>\n          <li><span>👽</span></li>\n        </ul>\n        <template #tag="{ tag }">\n          <span v-html="tag.text" style="width: 22px"></span>\n        </template>\n      </hl-selector>\n    </hl-col>\n    <hl-col span="col-md-12 col-lg-10">\n      <p>自定义多选视频</p>\n      <hl-selector ref="selector4" clearable block multiple @remove-tag="removeVideo" @clear="clearVideos">\n        <div ref="selector4Dom" class="selector-content video-list clearfix" style="width:300px">\n          <video v-for="url in videoUrls" width="120" height="100" :key="url" :src="url" @click.stop="chooseVideo(url)"></video>\n        </div>\n        <template #tag="{ tag }">\n          <video width="100" height="100" style="object-fit:cover" :src="tag.text" controls="controls"></video>\n        </template>\n      </hl-selector>\n    </hl-col>\n  </hl-row>\n</template>\n\n<script>\n  import { defineComponent, ref } from \'vue\'\n  export default defineComponent({\n    setup() {\n      const icons = ref([])\n      const videos = ref([])\n      const videoUrls = ref([\n        \'http://clips.vorwaerts-gmbh.de/big_buck_bunny.mp4\',\n        \'http://www.w3school.com.cn/example/html5/mov_bbb.mp4\',\n        \'https://v-cdn.zjol.com.cn/276998.mp4\',\n        \'https://v-cdn.zjol.com.cn/277003.mp4\',\n        \'https://v-cdn.zjol.com.cn/277000.mp4\',\n        \'https://v-cdn.zjol.com.cn/277001.mp4\',\n        \'https://v-cdn.zjol.com.cn/277002.mp4\',\n      ])\n      const selector3 = ref(null)\n      const selector4 = ref(null)\n\n      const selectIcon = evt => {\n        console.log(evt)\n        if (evt.target.tagName.toUpperCase() === \'SPAN\') {\n          if (!icons.value.includes(evt.target.innerHTML)) {\n            icons.value.push(evt.target.innerHTML)\n          }\n          selector3.value.setValue(icons.value)\n        }\n      }\n      const chooseIcon = name => {\n        if (!icons.value.includes(name)) {\n          icons.value.push(name)\n        }\n        selector3.value.setValue(icons.value)\n      }\n      const clearIcons = () => {\n        icons.value = []\n      }\n      const removeIcon = tag => {\n        icons.value = icons.value.filter(i => i !== tag.text)\n      }\n      const chooseVideo = name => {\n        if (!videos.value.includes(name)) {\n          videos.value.push(name)\n        }\n        selector4.value.setValue(videos.value)\n      }\n      const clearVideos = () => {\n        videos.value = []\n      }\n      const removeVideo = tag => {\n        videos.value = videos.value.filter(i => i !== tag.text)\n      }\n\n      return {\n        icons,\n        videos,\n        videoUrls,\n        selector3,\n        selector4,\n        selectIcon,\n        chooseIcon,\n        clearIcons,\n        removeIcon,\n        chooseVideo,\n        clearVideos,\n        removeVideo,\n      }\n    },\n  })\n<\/script>\n')],-1),z=v('<div class="md-tip"><p>下拉框的宽度需要自定设置，默认会有一个最小宽度。但可以用 resize 事件参数中的 input 宽度为参考值进行设置，也可以设置固定宽度。</p></div><div class="md-tip"><p>自定义 tag slot 参数为{ tag }，tag 数据类型为: <code>{key: string, text: unknown}</code>。当 tag 折叠时，key 值为&#39;-1&#39;；其余 tag key 值为随机数字。text 值为 setValue 方法传入的任意参数。</p></div><div class="md-tip"><p>选择器并不负责处理 Form 表单的验证事件，需用户自定义处理</p></div><h3 id="selector-attributes"><a class="header-anchor" href="#selector-attributes"></a> Selector Attributes</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>size</td><td>尺寸</td><td>string</td><td>md / lg / xs</td><td>md</td></tr><tr><td>placeholder</td><td>输入框占位文本</td><td>string</td><td>—</td><td>请选择</td></tr><tr><td>disabled</td><td>是否禁用</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>clearable</td><td>是否支持清空选项</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>show-all-levels</td><td>输入框中是否显示选中值的完整路径</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>collapse-tags</td><td>多选模式下是否折叠 Tag</td><td>boolean</td><td>-</td><td>false</td></tr><tr><td>separator</td><td>选项分隔符</td><td>string</td><td>—</td><td>斜杠&#39; / &#39;</td></tr><tr><td>filterable</td><td>是否可搜索选项</td><td>boolean</td><td>—</td><td>—</td></tr><tr><td>popper-class</td><td>自定义浮层类名</td><td>string</td><td>—</td><td>—</td></tr><tr><td>block</td><td>是否拉伸至父容器宽度</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>input-style</td><td>input 元素的 style</td><td>object</td><td>-</td><td>{}</td></tr><tr><td>placement</td><td>下拉框弹出位置</td><td>string</td><td>参考 popover</td><td>bottom-start</td></tr><tr><td>multiple</td><td>是否多选</td><td>boolean</td><td>-</td><td>false</td></tr><tr><td>popper-append-to-body</td><td>是否将弹出框插入至 body 元素。在弹出框的定位出现问题时，可将该属性设置为 false</td><td>boolean</td><td>-</td><td>true</td></tr><tr><td>fill</td><td>填充样式</td><td>boolean</td><td>-</td><td>false</td></tr></tbody></table><h3 id="selector-events"><a class="header-anchor" href="#selector-events"></a> Selector Events</h3><table><thead><tr><th>事件名称</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>blur</td><td>当失去焦点时触发</td><td>(event: Event)</td></tr><tr><td>focus</td><td>当获得焦点时触发</td><td>(event: Event)</td></tr><tr><td>input</td><td>可搜索时用户输入内容</td><td>输入的内容</td></tr><tr><td>visible-change</td><td>下拉框出现/隐藏时触发</td><td>出现则为 true，隐藏则为 false</td></tr><tr><td>popper-visible</td><td>下拉框出现时触发，后于 visible-change 触发</td><td></td></tr><tr><td>remove-tag</td><td>在多选模式下，移除 Tag 时触发</td><td>移除的 Tag 对应的节点的值</td></tr><tr><td>clear</td><td>点击清除 icon 时触发</td><td></td></tr><tr><td>resize</td><td>更新弹框样式时触发</td><td>内部 input 框节点</td></tr><tr><td>after-leave</td><td>弹框关闭时触发</td><td></td></tr><tr><td>keyboard-down</td><td>点击键盘向下箭头时触发，可以在这个事件中对下拉框中的某个进行 focus</td><td></td></tr></tbody></table><h3 id="selector-methods"><a class="header-anchor" href="#selector-methods"></a> Selector Methods</h3><table><thead><tr><th>方法名</th><th>说明</th><th>参数</th></tr></thead><tbody><tr><td>setValue</td><td>设置选择器内容</td><td>val 可以为任意类型或者任意数组类型。为数组时，自动切换成多选模式</td></tr><tr><td>togglePopperVisible</td><td>切换下拉框显示或者隐藏</td><td>visible（true/false），可选</td></tr></tbody></table><h3 id="selector-slots"><a class="header-anchor" href="#selector-slots"></a> Selector Slots</h3><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>-</td><td>自定义下拉框内容</td></tr><tr><td>tag</td><td>自定义多选 tag 显示，参数为{ tag }，setValue 传入的内容</td></tr><tr><td>prefix</td><td>自定义前缀</td></tr></tbody></table>',11);var V=b(h,[["render",function(e,l,n,a,t,o){const p=i("hl-demo0"),v=i("demo-block"),b=i("hl-demo1"),h=i("hl-demo2"),V=i("hl-demo3"),j=i("right-nav");return r(),s("section",m,[u("div",g,[f,T,d(v,null,{source:c((()=>[d(p)])),highlight:c((()=>[x])),default:c((()=>[k])),_:1}),d(v,null,{source:c((()=>[d(b)])),highlight:c((()=>[w])),default:c((()=>[y])),_:1}),d(v,null,{source:c((()=>[d(h)])),highlight:c((()=>[S])),default:c((()=>[C])),_:1}),d(v,null,{source:c((()=>[d(V)])),highlight:c((()=>[N])),default:c((()=>[I])),_:1}),z]),d(j)])}]]);export{V as default};
