var t=Object.defineProperty,e=Object.defineProperties,a=Object.getOwnPropertyDescriptors,n=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,d=Object.prototype.propertyIsEnumerable,o=(e,a,n)=>a in e?t(e,a,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[a]=n,i=(t,e)=>{for(var a in e||(e={}))l.call(e,a)&&o(t,a,e[a]);if(n)for(var a of n(e))d.call(e,a)&&o(t,a,e[a]);return t},b=(t,n)=>e(t,a(n));import{H as r,o as s,C as c,D as h,v as m,P as u,_ as p,as as f,at as T}from"./vue.69b6befa.js";import{_ as v}from"./index.6da685a4.js";import"./hongluan.17b69477.js";import"./highlight.5ad4a187.js";import"./hongluan-icons.f9afdbe4.js";const g={name:"component-doc",components:{"hl-demo0":function(){const{createTextVNode:t,resolveComponent:e,withCtx:a,createVNode:n,openBlock:l,createBlock:d}=T,o=t("谷歌浏览器"),b=t("火狐浏览器"),r=t("欧朋浏览器");const{ref:s}=T;return i({render:function(t,i){const s=e("hl-tab-pane"),c=e("hl-tabs");return l(),d(c,{modelValue:t.activeName,"onUpdate:modelValue":i[0]||(i[0]=e=>t.activeName=e),onTabClick:t.handleClick},{default:a((()=>[n(s,{label:"谷歌浏览器",name:"first"},{default:a((()=>[o])),_:1}),n(s,{label:"火狐浏览器",name:"second"},{default:a((()=>[b])),_:1}),n(s,{label:"欧朋浏览器",name:"third"},{default:a((()=>[r])),_:1})])),_:1},8,["modelValue","onTabClick"])}},{setup:()=>({activeName:s("second"),handleClick:(t,e)=>{console.log(t,e)}})})}(),"hl-demo1":function(){const{createTextVNode:t,resolveComponent:e,withCtx:a,createVNode:n,openBlock:l,createBlock:d}=T,o=t("谷歌浏览器"),b=t("火狐浏览器"),r=t("欧朋浏览器");const{ref:s}=T;return i({render:function(t,i){const s=e("hl-tab-pane"),c=e("hl-tabs");return l(),d(c,{modelValue:t.activeName,"onUpdate:modelValue":i[0]||(i[0]=e=>t.activeName=e),type:"line",onTabClick:t.handleClick},{default:a((()=>[n(s,{label:"谷歌浏览器",name:"first"},{default:a((()=>[o])),_:1}),n(s,{label:"火狐浏览器",name:"second"},{default:a((()=>[b])),_:1}),n(s,{label:"欧朋浏览器",name:"third"},{default:a((()=>[r])),_:1})])),_:1},8,["modelValue","onTabClick"])}},{setup:()=>({activeName:s("first"),handleClick:(t,e)=>{console.log(t,e)}})})}(),"hl-demo2":function(){const{createTextVNode:t,resolveComponent:e,withCtx:a,createVNode:n,Fragment:l,openBlock:d,createElementBlock:o}=T,b=t("top"),r=t("right"),s=t("bottom"),c=t("left"),h=t("谷歌浏览器"),m=t("火狐浏览器"),u=t("欧朋浏览器");const{ref:p}=T;return i({render:function(t,i){const p=e("hl-radio"),f=e("hl-radio-group"),T=e("hl-tab-pane"),v=e("hl-tabs");return d(),o(l,null,[n(f,{modelValue:t.tabPosition,"onUpdate:modelValue":i[0]||(i[0]=e=>t.tabPosition=e),style:{"margin-bottom":"30px"}},{default:a((()=>[n(p,{label:"top"},{default:a((()=>[b])),_:1}),n(p,{label:"right"},{default:a((()=>[r])),_:1}),n(p,{label:"bottom"},{default:a((()=>[s])),_:1}),n(p,{label:"left"},{default:a((()=>[c])),_:1})])),_:1},8,["modelValue"]),n(v,{"tab-position":t.tabPosition,type:"line",style:{height:"200px"}},{default:a((()=>[n(T,{label:"谷歌浏览器"},{default:a((()=>[h])),_:1}),n(T,{label:"火狐浏览器"},{default:a((()=>[m])),_:1}),n(T,{label:"欧朋浏览器"},{default:a((()=>[u])),_:1})])),_:1},8,["tab-position"])],64)}},{setup:()=>({tabPosition:p("top")})})}(),"hl-demo3":function(){const{resolveComponent:t,createVNode:e,withCtx:a,createTextVNode:n,openBlock:l,createBlock:d}=T,o=n(" 我的行程 "),b=n(" 我的行程 "),r=n("消息中心"),s=n("欧朋浏览器");return i({render:function(n,i){const c=t("two-application"),h=t("hl-icon"),m=t("hl-tab-pane"),u=t("hl-tabs");return l(),d(u,null,{default:a((()=>[e(m,null,{label:a((()=>[e(h,{class:"sm m-r-xs"},{default:a((()=>[e(c)])),_:1}),o])),default:a((()=>[b])),_:1}),e(m,{label:"消息中心"},{default:a((()=>[r])),_:1}),e(m,{label:"欧朋浏览器"},{default:a((()=>[s])),_:1})])),_:1})}},{})}(),"hl-demo4":function(){const{renderList:t,Fragment:e,openBlock:a,createElementBlock:n,toDisplayString:l,createTextVNode:d,resolveComponent:o,withCtx:r,createBlock:s}=T;const{reactive:c,toRefs:h}=T,m={setup(){const t=c({editableTabsValue:"2",editableTabs:[{title:"Tab 1",name:"1",content:"Tab 1 content"},{title:"Tab 2",name:"2",content:"Tab 2 content"}],tabIndex:2});return b(i({},h(t)),{handleTabsEdit:(e,a)=>{if("add"===a){let e=++t.tabIndex+"";t.editableTabs.push({title:"New Tab",name:e,content:"New Tab content"}),t.editableTabsValue=e}if("remove"===a){let a=t.editableTabs,n=t.editableTabsValue;n===e&&a.forEach(((t,l)=>{if(t.name===e){let t=a[l+1]||a[l-1];t&&(n=t.name)}})),t.editableTabsValue=n,t.editableTabs=a.filter((t=>t.name!==e))}}})}};return i({render:function(i,b){const c=o("hl-tab-pane"),h=o("hl-tabs");return a(),s(h,{modelValue:i.editableTabsValue,"onUpdate:modelValue":b[0]||(b[0]=t=>i.editableTabsValue=t),editable:"",onEdit:i.handleTabsEdit},{default:r((()=>[(a(!0),n(e,null,t(i.editableTabs,((t,e)=>(a(),s(c,{key:t.name,label:t.title,name:t.name},{default:r((()=>[d(l(t.content),1)])),_:2},1032,["label","name"])))),128))])),_:1},8,["modelValue","onEdit"])}},m)}(),"hl-demo5":function(){const{createTextVNode:t,resolveComponent:e,withCtx:a,createVNode:n,createElementVNode:l,renderList:d,Fragment:o,openBlock:r,createElementBlock:s,toDisplayString:c,createBlock:h}=T,m={style:{"margin-bottom":"20px"}},u=t(" add tab ");const{reactive:p,toRefs:f}=T,v={setup(){const t=p({editableTabsValue:"2",editableTabs:[{title:"Tab 1",name:"1",content:"Tab 1 content"},{title:"Tab 2",name:"2",content:"Tab 2 content"}],tabIndex:2});return b(i({},f(t)),{addTab:e=>{let a=++t.tabIndex+"";t.editableTabs.push({title:"New Tab",name:a,content:"New Tab content"}),t.editableTabsValue=a},removeTab:e=>{let a=t.editableTabs,n=t.editableTabsValue;n===e&&a.forEach(((t,l)=>{if(t.name===e){let t=a[l+1]||a[l-1];t&&(n=t.name)}})),t.editableTabsValue=n,t.editableTabs=a.filter((t=>t.name!==e))}})}};return i({render:function(i,b){const p=e("hl-button"),f=e("hl-tab-pane"),T=e("hl-tabs");return r(),s(o,null,[l("div",m,[n(p,{size:"sm",onClick:b[0]||(b[0]=t=>i.addTab(i.editableTabsValue))},{default:a((()=>[u])),_:1})]),n(T,{modelValue:i.editableTabsValue,"onUpdate:modelValue":b[1]||(b[1]=t=>i.editableTabsValue=t),type:"line",closable:"",onTabRemove:i.removeTab},{default:a((()=>[(r(!0),s(o,null,d(i.editableTabs,((e,n)=>(r(),h(f,{key:e.name,label:e.title,name:e.name},{default:a((()=>[t(c(e.content),1)])),_:2},1032,["label","name"])))),128))])),_:1},8,["modelValue","onTabRemove"])],64)}},v)}()}},N={class:"doc-main-content"},V={class:"doc-content"},x=h("h1",null,"Tabs 标签页",-1),y=h("p",null,"Tabs 用于分隔内容上有关联但属于不同类别的数据集合。",-1),k=h("div",null,[h("p",null,[p("Tabs 组件提供了选项卡功能，默认选中第一个标签页，你也可以通过 "),h("code",null,"value"),p(" 属性来指定当前选中的标签页。")])],-1),_=h("pre",null,[h("code",{class:"html"},'<template>\n  <hl-tabs v-model="activeName" @tab-click="handleClick">\n    <hl-tab-pane label="谷歌浏览器" name="first">谷歌浏览器</hl-tab-pane>\n    <hl-tab-pane label="火狐浏览器" name="second">火狐浏览器</hl-tab-pane>\n    <hl-tab-pane label="欧朋浏览器" name="third">欧朋浏览器</hl-tab-pane>\n  </hl-tabs>\n</template>\n<script>\nimport { ref } from \'vue\'\nexport default {\n  setup() {\n    const activeName = ref(\'second\')\n    const handleClick = (tab, event) => {\n      console.log(tab, event)\n    }\n    return { activeName, handleClick }\n  },\n}\n<\/script>\n')],-1),w=h("h2",{id:"line-yang-shi"},[h("a",{class:"header-anchor",href:"#line-yang-shi"}),p(" Line 样式")],-1),C=h("p",null,[p("只需要设置 "),h("code",null,"type"),p(" 属性为 "),h("code",null,"line"),p(" 就可以使选项卡改变为线条风格。")],-1),E=h("pre",null,[h("code",{class:"html"},'<template>\n  <hl-tabs v-model="activeName" type="line" @tab-click="handleClick">\n    <hl-tab-pane label="谷歌浏览器" name="first">谷歌浏览器</hl-tab-pane>\n    <hl-tab-pane label="火狐浏览器" name="second">火狐浏览器</hl-tab-pane>\n    <hl-tab-pane label="欧朋浏览器" name="third">欧朋浏览器</hl-tab-pane>\n  </hl-tabs>\n</template>\n<script>\nimport { ref } from \'vue\'\nexport default {\n  setup() {\n    const activeName = ref(\'first\')\n    const handleClick = (tab, event) => {\n      console.log(tab, event)\n    }\n    return { activeName, handleClick }\n  },\n}\n<\/script>\n')],-1),j=h("h2",{id:"wei-zhi"},[h("a",{class:"header-anchor",href:"#wei-zhi"}),p(" 位置")],-1),P=h("p",null,[p("可以通过 "),h("code",null,"tab-position"),p(" 设置标签的位置")],-1),B=h("div",null,[h("p",null,[p("标签一共有四个方向的设置 "),h("code",null,'tabPosition="left|right|top|bottom"')])],-1),z=h("pre",null,[h("code",{class:"html"},'<template>\n  <hl-radio-group v-model="tabPosition" style="margin-bottom: 30px;">\n    <hl-radio label="top">top</hl-radio>\n    <hl-radio label="right">right</hl-radio>\n    <hl-radio label="bottom">bottom</hl-radio>\n    <hl-radio label="left">left</hl-radio>\n  </hl-radio-group>\n\n  <hl-tabs :tab-position="tabPosition" type="line" style="height: 200px;">\n    <hl-tab-pane label="谷歌浏览器">谷歌浏览器</hl-tab-pane>\n    <hl-tab-pane label="火狐浏览器">火狐浏览器</hl-tab-pane>\n    <hl-tab-pane label="欧朋浏览器">欧朋浏览器</hl-tab-pane>\n  </hl-tabs>\n</template>\n\n<script>\nimport { ref } from \'vue\'\nexport default {\n  setup() {\n    const tabPosition = ref(\'top\')\n    return { tabPosition }\n  },\n}\n<\/script>\n')],-1),I=h("h2",{id:"zi-ding-yi-biao-qian-ye"},[h("a",{class:"header-anchor",href:"#zi-ding-yi-biao-qian-ye"}),p(" 自定义标签页")],-1),O=h("p",null,[p("可以通过具名 "),h("code",null,"slot"),p(" 来实现自定义标签页的内容")],-1),q=h("pre",null,[h("code",{class:"html"},'<template>\n  <hl-tabs>\n    <hl-tab-pane>\n      <template v-slot:label>\n        <hl-icon class="sm m-r-xs"><two-application /></hl-icon>\n        我的行程\n      </template>\n      我的行程\n    </hl-tab-pane>\n    <hl-tab-pane label="消息中心">消息中心</hl-tab-pane>\n    <hl-tab-pane label="欧朋浏览器">欧朋浏览器</hl-tab-pane>\n  </hl-tabs>\n</template>\n')],-1),R=h("h2",{id:"dong-tai-zeng-jian-biao-qian-ye"},[h("a",{class:"header-anchor",href:"#dong-tai-zeng-jian-biao-qian-ye"}),p(" 动态增减标签页")],-1),U=h("p",null,"增减标签页按钮只能在选项卡样式的标签页下使用",-1),D=h("pre",null,[h("code",{class:"html"},"<template>\n  <hl-tabs v-model=\"editableTabsValue\" editable @edit=\"handleTabsEdit\">\n    <hl-tab-pane\n      :key=\"item.name\"\n      v-for=\"(item, index) in editableTabs\"\n      :label=\"item.title\"\n      :name=\"item.name\"\n    >\n      {{item.content}}\n    </hl-tab-pane>\n  </hl-tabs>\n</template>\n\n<script>\nimport { reactive, toRefs } from 'vue'\nexport default {\n  setup() {\n    const state = reactive({\n      editableTabsValue: '2',\n      editableTabs: [\n        {\n          title: 'Tab 1',\n          name: '1',\n          content: 'Tab 1 content',\n        },\n        {\n          title: 'Tab 2',\n          name: '2',\n          content: 'Tab 2 content',\n        },\n      ],\n      tabIndex: 2,\n    })\n    const handleTabsEdit = (targetName, action) => {\n      if (action === 'add') {\n        let newTabName = ++state.tabIndex + ''\n        state.editableTabs.push({\n          title: 'New Tab',\n          name: newTabName,\n          content: 'New Tab content',\n        })\n        state.editableTabsValue = newTabName\n      }\n      if (action === 'remove') {\n        let tabs = state.editableTabs\n        let activeName = state.editableTabsValue\n        if (activeName === targetName) {\n          tabs.forEach((tab, index) => {\n            if (tab.name === targetName) {\n              let nextTab = tabs[index + 1] || tabs[index - 1]\n              if (nextTab) {\n                activeName = nextTab.name\n              }\n            }\n          })\n        }\n\n        state.editableTabsValue = activeName\n        state.editableTabs = tabs.filter(tab => tab.name !== targetName)\n      }\n    }\n\n    return { ...toRefs(state), handleTabsEdit }\n  },\n}\n<\/script>\n")],-1),F=h("h2",{id:"zi-ding-yi-zeng-jia-biao-qian-ye-chu-fa-qi"},[h("a",{class:"header-anchor",href:"#zi-ding-yi-zeng-jia-biao-qian-ye-chu-fa-qi"}),p(" 自定义增加标签页触发器")],-1),A=h("pre",null,[h("code",{class:"html"},"<template>\n  <div style=\"margin-bottom: 20px;\">\n    <hl-button size=\"sm\" @click=\"addTab(editableTabsValue)\">\n      add tab\n    </hl-button>\n  </div>\n  <hl-tabs\n    v-model=\"editableTabsValue\"\n    type=\"line\"\n    closable\n    @tab-remove=\"removeTab\"\n  >\n    <hl-tab-pane\n      v-for=\"(item, index) in editableTabs\"\n      :key=\"item.name\"\n      :label=\"item.title\"\n      :name=\"item.name\"\n    >\n      {{item.content}}\n    </hl-tab-pane>\n  </hl-tabs>\n</template>\n\n<script>\nimport { reactive, toRefs } from 'vue'\nexport default {\n  setup() {\n    const state = reactive({\n      editableTabsValue: '2',\n      editableTabs: [\n        {\n          title: 'Tab 1',\n          name: '1',\n          content: 'Tab 1 content',\n        },\n        {\n          title: 'Tab 2',\n          name: '2',\n          content: 'Tab 2 content',\n        },\n      ],\n      tabIndex: 2,\n    })\n\n    const addTab = targetName => {\n      let newTabName = ++state.tabIndex + ''\n      state.editableTabs.push({\n        title: 'New Tab',\n        name: newTabName,\n        content: 'New Tab content',\n      })\n      state.editableTabsValue = newTabName\n    }\n\n    const removeTab = targetName => {\n      let tabs = state.editableTabs\n      let activeName = state.editableTabsValue\n      if (activeName === targetName) {\n        tabs.forEach((tab, index) => {\n          if (tab.name === targetName) {\n            let nextTab = tabs[index + 1] || tabs[index - 1]\n            if (nextTab) {\n              activeName = nextTab.name\n            }\n          }\n        })\n      }\n\n      state.editableTabsValue = activeName\n      state.editableTabs = tabs.filter(tab => tab.name !== targetName)\n    }\n    return { ...toRefs(state), addTab, removeTab }\n  },\n}\n<\/script>\n")],-1),L=f('<h2 id="tabs-attributes"><a class="header-anchor" href="#tabs-attributes"></a> Tabs Attributes</h2><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>model-value / v-model</td><td>绑定值，选中选项卡的 name</td><td>string</td><td>—</td><td>第一个选项卡的 name</td></tr><tr><td>type</td><td>风格类型</td><td>string</td><td>line</td><td>显示为线条样式</td></tr><tr><td>closable</td><td>标签是否可关闭</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>show-pane</td><td>是否显示内容</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>addable</td><td>标签是否可增加</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>editable</td><td>标签是否同时可增加和关闭</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>tab-position</td><td>选项卡所在位置</td><td>string</td><td>top/right/bottom/left</td><td>top</td></tr><tr><td>stretch</td><td>标签的宽度是否自撑开</td><td>boolean</td><td>-</td><td>false</td></tr><tr><td>before-leave</td><td>切换标签之前的钩子，若返回 false 或者返回 Promise 且被 reject，则阻止切换。</td><td>Function(activeName, oldActiveName)</td><td>—</td><td>—</td></tr></tbody></table><h2 id="tabs-events"><a class="header-anchor" href="#tabs-events"></a> Tabs Events</h2><table><thead><tr><th>事件名称</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>tab-click</td><td>tab 被选中时触发</td><td>被选中的标签 tab 实例</td></tr><tr><td>tab-remove</td><td>点击 tab 移除按钮后触发</td><td>被删除的标签的 name</td></tr><tr><td>tab-add</td><td>点击 tabs 的新增按钮后触发</td><td>—</td></tr><tr><td>edit</td><td>点击 tabs 的新增按钮或 tab 被关闭后触发</td><td>(targetName, action)</td></tr></tbody></table><h2 id="tab-pane-attributes"><a class="header-anchor" href="#tab-pane-attributes"></a> Tab-pane Attributes</h2><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>label</td><td>选项卡标题</td><td>string</td><td>—</td><td>—</td></tr><tr><td>disabled</td><td>是否禁用</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>name</td><td>与选项卡绑定值 value 对应的标识符，表示选项卡别名</td><td>string</td><td>—</td><td>该选项卡在选项卡列表中的顺序值，如第一个选项卡则为&#39;1&#39;</td></tr><tr><td>closable</td><td>标签是否可关闭</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>lazy</td><td>标签是否延迟渲染</td><td>boolean</td><td>—</td><td>false</td></tr></tbody></table>',6);var S=v(g,[["render",function(t,e,a,n,l,d){const o=r("hl-demo0"),i=r("demo-block"),b=r("hl-demo1"),p=r("hl-demo2"),f=r("hl-demo3"),T=r("hl-demo4"),v=r("hl-demo5"),g=r("right-nav");return s(),c("section",N,[h("div",V,[x,y,m(i,null,{source:u((()=>[m(o)])),highlight:u((()=>[_])),default:u((()=>[k])),_:1}),w,C,m(i,null,{source:u((()=>[m(b)])),highlight:u((()=>[E])),_:1}),j,P,m(i,null,{source:u((()=>[m(p)])),highlight:u((()=>[z])),default:u((()=>[B])),_:1}),I,O,m(i,null,{source:u((()=>[m(f)])),highlight:u((()=>[q])),_:1}),R,U,m(i,null,{source:u((()=>[m(T)])),highlight:u((()=>[D])),_:1}),F,m(i,null,{source:u((()=>[m(v)])),highlight:u((()=>[A])),_:1}),L]),m(g)])}]]);export{S as default};
