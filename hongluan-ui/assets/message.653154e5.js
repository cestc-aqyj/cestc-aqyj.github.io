var e=Object.defineProperty,n=Object.getOwnPropertySymbols,t=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable,s=(n,t,o)=>t in n?e(n,t,{enumerable:!0,configurable:!0,writable:!0,value:o}):n[t]=o,l=(e,l)=>{for(var a in l||(l={}))t.call(l,a)&&s(e,a,l[a]);if(n)for(var a of n(l))o.call(l,a)&&s(e,a,l[a]);return e};import{H as a,o as d,C as r,D as c,v as i,P as u,at as p,_ as h,as as m}from"./vue.69b6befa.js";import{_ as g,H as f}from"./index.6da685a4.js";import{H as C}from"./hongluan-icons.f9afdbe4.js";import"./hongluan.17b69477.js";import"./highlight.5ad4a187.js";const b={name:"component-doc",components:{"hl-demo0":function(){const{createTextVNode:e,resolveComponent:n,withCtx:t,createVNode:o,Fragment:s,openBlock:a,createElementBlock:d}=p,r=e("打开消息提示"),c=e("VNode");const{defineComponent:i,h:u}=p,{HlMessage:h}=f,m=i({setup:()=>({open(){h("只是一条消息提示")},openVn(){h({message:u("p",null,[u("span",null,"内容可以是 "),u("i",{style:"color: teal"},"VNode")])})}})});return l({render:function(e,l){const i=n("hl-button");return a(),d(s,null,[o(i,{onClick:e.open,class:"m-r-md"},{default:t((()=>[r])),_:1},8,["onClick"]),o(i,{onClick:e.openVn},{default:t((()=>[c])),_:1},8,["onClick"])],64)}},m)}(),"hl-demo1":function(){const{createTextVNode:e,resolveComponent:n,withCtx:t,createVNode:o,Fragment:s,openBlock:a,createElementBlock:d}=p,r=e("成功"),c=e("警告"),i=e("消息"),u=e("错误"),h=e("自定义icon");const{defineComponent:m,h:g,resolveComponent:b}=p,{HlMessage:M,HlIcon:k}=f,{Airplay:H}=C,y=m({setup:()=>({open1(){M({type:"success",duration:5e3,showClose:!0,message:"恭喜你，这是一条成功消息"})},open2(){M.warning({message:"警告哦，这是一条警告消息"})},open3(){M("这是一条消息提示")},open4(){M.error("错了哦，这是一条错误消息")},open5(){M({duration:5e3,icon:g(k,{size:"xl"},{default:()=>[g(H)]}),message:"自定义，这是一条自定义消息"})}})});return l({render:function(e,l){const p=n("hl-button");return a(),d(s,null,[o(p,{onClick:e.open1,class:"m-r-md"},{default:t((()=>[r])),_:1},8,["onClick"]),o(p,{onClick:e.open2,class:"m-r-md"},{default:t((()=>[c])),_:1},8,["onClick"]),o(p,{onClick:e.open3,class:"m-r-md"},{default:t((()=>[i])),_:1},8,["onClick"]),o(p,{onClick:e.open4,class:"m-r-md"},{default:t((()=>[u])),_:1},8,["onClick"]),o(p,{onClick:e.open5},{default:t((()=>[h])),_:1},8,["onClick"])],64)}},y)}(),"hl-demo2":function(){const{createTextVNode:e,resolveComponent:n,withCtx:t,createVNode:o,Fragment:s,openBlock:a,createElementBlock:d}=p,r=e("消息"),c=e("成功"),i=e("警告"),u=e("错误");const{defineComponent:h}=p,{HlMessage:m}=f,g=h({setup:()=>({open1(){m({showClose:!0,message:"这是一条消息提示",duration:3e5})},open2(){m({showClose:!0,message:"恭喜你，这是一条成功消息",type:"success"})},open3(){m({showClose:!0,message:"警告哦，这是一条警告消息",type:"warning"})},open4(){m({showClose:!0,message:"错了哦，这是一条错误消息",type:"error"})}})});return l({render:function(e,l){const p=n("hl-button");return a(),d(s,null,[o(p,{onClick:e.open1,class:"m-r-md"},{default:t((()=>[r])),_:1},8,["onClick"]),o(p,{onClick:e.open2,class:"m-r-md"},{default:t((()=>[c])),_:1},8,["onClick"]),o(p,{onClick:e.open3,class:"m-r-md"},{default:t((()=>[i])),_:1},8,["onClick"]),o(p,{onClick:e.open4},{default:t((()=>[u])),_:1},8,["onClick"])],64)}},g)}(),"hl-demo3":function(){const{createTextVNode:e,resolveComponent:n,withCtx:t,createVNode:o,Fragment:s,openBlock:a,createElementBlock:d}=p,r=e("居左对齐方式"),c=e("居中对齐方式"),i=e("居右对齐方式");const{defineComponent:u}=p,{HlMessage:h}=f,m=u({setup:()=>({openCenter(e){h({message:"文字对齐方式",textAlign:e})}})});return l({render:function(e,l){const u=n("hl-button");return a(),d(s,null,[o(u,{onClick:l[0]||(l[0]=n=>e.openCenter("left")),class:"m-r-md"},{default:t((()=>[r])),_:1}),o(u,{onClick:l[1]||(l[1]=n=>e.openCenter("center")),class:"m-r-md"},{default:t((()=>[c])),_:1}),o(u,{onClick:l[2]||(l[2]=n=>e.openCenter("right"))},{default:t((()=>[i])),_:1})],64)}},m)}(),"hl-demo4":function(){const{createTextVNode:e,resolveComponent:n,withCtx:t,openBlock:o,createBlock:s}=p,a=e("使用 HTML 片段");const{defineComponent:d}=p,{HlMessage:r}=f,c=d({setup:()=>({openHTML(){r({dangerouslyUseHTMLString:!0,message:"<strong>这是 <i>HTML</i> 片段</strong>"})}})});return l({render:function(e,l){const d=n("hl-button");return o(),s(d,{onClick:e.openHTML},{default:t((()=>[a])),_:1},8,["onClick"])}},c)}()}},M={class:"doc-main-content"},k={class:"doc-content"},H=c("h1",null,"Message 消息提示",-1),y=c("p",null,"常用于主动操作后的反馈提示。与 Notification 的区别是后者更多用于系统级通知的被动提醒。",-1),w=c("h2",{id:"ji-chu-yong-fa"},[c("a",{class:"header-anchor",href:"#ji-chu-yong-fa"}),h(" 基础用法")],-1),v=c("p",null,"从顶部出现，3 秒后自动消失。",-1),T=c("div",null,[c("p",null,[h("Message 在配置上与 Notification 非常类似，所以部分 options 在此不做详尽解释，文末有 options 列表，可以结合 Notification 的文档理解它们。Hongluan UI 注册了一个"),c("code",null,"$message"),h("方法用于调用，Message 可以接收一个字符串或一个 VNode 作为参数，它会被显示为正文内容。")])],-1),x=c("pre",null,[c("code",{class:"html"},"<template>\n  <hl-button @click=\"open\" class=\"m-r-md\">打开消息提示</hl-button>\n  <hl-button @click=\"openVn\">VNode</hl-button>\n</template>\n\n<script>\nimport { defineComponent, h } from 'vue'\nimport { HlMessage } from 'hongluan-ui'\nexport default defineComponent ({\n  setup() {\n    return {\n      open() {\n        HlMessage('只是一条消息提示')\n      },\n      openVn() {\n        HlMessage({\n          message: h('p', null, [\n            h('span', null, '内容可以是 '),\n            h('i', { style: 'color: teal' }, 'VNode')\n          ])\n        });\n      }\n    }\n  }\n})\n<\/script>\n")],-1),_=c("h2",{id:"bu-tong-zhuang-tai"},[c("a",{class:"header-anchor",href:"#bu-tong-zhuang-tai"}),h(" 不同状态")],-1),N=c("p",null,"用来显示「成功、警告、消息、错误」类的操作反馈。",-1),V=c("div",null,[c("p",null,[h("当需要自定义更多属性时，Message 也可以接收一个对象为参数。比如，设置"),c("code",null,"type"),h("字段可以定义不同的状态，默认为"),c("code",null,"info"),h("。此时正文内容以"),c("code",null,"message"),h("的值传入。同时，我们也为 Message 的各种 type 注册了方法，可以在不传入"),c("code",null,"type"),h("字段的情况下像"),c("code",null,"open4"),h("函数那样直接调用。")])],-1),L=c("pre",null,[c("code",{class:"html"},"<template>\n  <hl-button @click=\"open1\" class=\"m-r-md\">成功</hl-button>\n  <hl-button @click=\"open2\" class=\"m-r-md\">警告</hl-button>\n  <hl-button @click=\"open3\" class=\"m-r-md\">消息</hl-button>\n  <hl-button @click=\"open4\" class=\"m-r-md\">错误</hl-button>\n  <hl-button @click=\"open5\">自定义icon</hl-button>\n</template>\n\n<script>\nimport { defineComponent, h, resolveComponent } from 'vue'\nimport { HlMessage, HlIcon } from 'hongluan-ui'\nimport { Airplay } from '@hongluan-ui/icons'\n\nexport default defineComponent({\n  setup() {\n    return {\n      open1() {\n        HlMessage({\n          type: 'success',\n          duration: 5000,\n          showClose: true,\n          message: '恭喜你，这是一条成功消息'\n        });\n      },\n      open2() {\n        HlMessage.warning({\n          message: '警告哦，这是一条警告消息'\n        });\n      },\n      open3() {\n        HlMessage('这是一条消息提示');\n      },\n      open4() {\n        HlMessage.error('错了哦，这是一条错误消息');\n      },\n      open5() {\n        const msg = HlMessage({\n          duration: 5000,\n          icon: h(HlIcon, {\n            size: 'xl'\n          }, {\n            default: () => [h(Airplay)]\n          }),\n          message: '自定义，这是一条自定义消息'\n        });\n      }\n    }\n  }\n})\n<\/script>\n")],-1),j=c("h2",{id:"ke-guan-bi"},[c("a",{class:"header-anchor",href:"#ke-guan-bi"}),h(" 可关闭")],-1),B=c("p",null,"可以添加关闭按钮。",-1),A=c("div",null,[c("p",null,[h("默认的 Message 是不可以被人工关闭的，如果需要可手动关闭的 Message，可以使用"),c("code",null,"showClose"),h("字段。此外，和 Notification 一样，Message 拥有可控的"),c("code",null,"duration"),h("，设置"),c("code",null,"0"),h("为不会被自动关闭，默认为 3000 毫秒。")])],-1),S=c("pre",null,[c("code",{class:"html"},"<template>\n  <hl-button @click=\"open1\" class=\"m-r-md\">消息</hl-button>\n  <hl-button @click=\"open2\" class=\"m-r-md\">成功</hl-button>\n  <hl-button @click=\"open3\" class=\"m-r-md\">警告</hl-button>\n  <hl-button @click=\"open4\">错误</hl-button>\n</template>\n\n<script>\nimport { defineComponent } from 'vue'\nimport { HlMessage } from 'hongluan-ui'\n\nexport default defineComponent({\n  setup() {\n    return {\n      open1() {\n        HlMessage({\n          showClose: true,\n          message: '这是一条消息提示',\n          duration: 300000\n        });\n      },\n\n      open2() {\n        HlMessage({\n          showClose: true,\n          message: '恭喜你，这是一条成功消息',\n          type: 'success'\n        });\n      },\n\n      open3() {\n        HlMessage({\n          showClose: true,\n          message: '警告哦，这是一条警告消息',\n          type: 'warning'\n        });\n      },\n\n      open4() {\n        HlMessage({\n          showClose: true,\n          message: '错了哦，这是一条错误消息',\n          type: 'error'\n        });\n      }\n    }\n  }\n})\n<\/script>\n")],-1),U=c("h2",{id:"wen-zi-dui-qi-fang-shi"},[c("a",{class:"header-anchor",href:"#wen-zi-dui-qi-fang-shi"}),h(" 文字对齐方式")],-1),z=c("p",null,[h("使用 "),c("code",null,"textAlign"),h("属性，可选值为"),c("code",null,"left"),h(","),c("code",null,"right"),h(","),c("code",null,"center"),h("，默认值为"),c("code",null,"left")],-1),I=c("pre",null,[c("code",{class:"html"},"<template>\n  <hl-button @click=\"openCenter('left')\" class=\"m-r-md\">居左对齐方式</hl-button>\n  <hl-button @click=\"openCenter('center')\" class=\"m-r-md\">居中对齐方式</hl-button>\n  <hl-button @click=\"openCenter('right')\">居右对齐方式</hl-button>\n</template>\n\n<script>\nimport { defineComponent } from 'vue'\nimport { HlMessage } from 'hongluan-ui'\nexport default defineComponent({\n  setup() {\n    return {\n      openCenter(align) {\n        HlMessage({\n          message: `文字对齐方式`,\n          textAlign: align\n        });\n      }\n    }\n  }\n})\n<\/script>\n")],-1),O=c("h2",{id:"shi-yong-html-pian-duan"},[c("a",{class:"header-anchor",href:"#shi-yong-html-pian-duan"}),h(" 使用 HTML 片段")],-1),E=c("p",null,[c("code",null,"message"),h(" 属性支持传入 HTML 片段")],-1),P=c("div",null,[c("p",null,[h("将"),c("code",null,"dangerouslyUseHTMLString"),h("属性设置为 true，"),c("code",null,"message"),h(" 就会被当作 HTML 片段处理。")])],-1),q=c("pre",null,[c("code",{class:"html"},"<template>\n  <hl-button @click=\"openHTML\">使用 HTML 片段</hl-button>\n</template>\n\n<script>\nimport { defineComponent } from 'vue'\nimport { HlMessage } from 'hongluan-ui'\nexport default defineComponent({\n  setup() {\n    return {\n      openHTML() {\n        HlMessage({\n          dangerouslyUseHTMLString: true,\n          message: '<strong>这是 <i>HTML</i> 片段</strong>'\n        });\n      }\n    }\n  }\n})\n<\/script>\n")],-1),F=m('<div class="md-warning"><p><code>message</code> 属性虽然支持传入 HTML 片段，但是在网站上动态渲染任意 HTML 是非常危险的，因为容易导致 <a href="https://en.wikipedia.org/wiki/Cross-site_scripting">XSS 攻击</a>。因此在 <code>dangerouslyUseHTMLString</code> 打开的情况下，请确保 <code>message</code> 的内容是可信的，<strong>永远不要</strong>将用户提交的内容赋值给 <code>message</code> 属性。</p></div><h2 id="quan-ju-fang-fa"><a class="header-anchor" href="#quan-ju-fang-fa"></a> 全局方法</h2><p>Hongluan UI 为 <code>app.config.globalProperties</code> 添加了全局方法 $message。因此在 vue instance 中可以采用在 method 中调用 <code>this.$message</code> 方法唤起 <code>HlMessage</code>。</p><h2 id="dan-du-yin-yong"><a class="header-anchor" href="#dan-du-yin-yong"></a> 单独引用</h2><pre><code class="hljs language-javascript"><span class="hljs-keyword">import</span> { HlMessage } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;hongluan-ui&#39;</span>;\n</code></pre><p>此时调用方法为 <code>HlMessage(options)</code>。我们也为每个 type 定义了各自的方法，如 <code>HlMessage.success(options)</code>。并且可以调用 <code>HlMessage.closeAll()</code> 手动关闭所有实例。</p><h2 id="attributes"><a class="header-anchor" href="#attributes"></a> Attributes</h2><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>message</td><td>消息文字</td><td>string / VNode</td><td>—</td><td>—</td></tr><tr><td>type</td><td>主题</td><td>string</td><td>success/warning/info/error</td><td>info</td></tr><tr><td>dangerouslyUseHTMLString</td><td>是否将 message 属性作为 HTML 片段处理</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>customClass</td><td>自定义类名</td><td>string</td><td>—</td><td>—</td></tr><tr><td>duration</td><td>显示时间, 毫秒。设为 0 则不会自动关闭</td><td>number</td><td>—</td><td>3000</td></tr><tr><td>showClose</td><td>是否显示关闭按钮</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>textAlign</td><td>文字对齐方式</td><td>string</td><td>left / center / right</td><td>left</td></tr><tr><td>onClose</td><td>关闭时的回调函数, 参数为被关闭的 message 实例</td><td>function</td><td>—</td><td>—</td></tr><tr><td>offset</td><td>Message 距离窗口顶部的偏移量</td><td>number</td><td>—</td><td>20</td></tr><tr><td>icon</td><td>自定义icon，优先级高于type定义的icon</td><td>VNode</td><td>—</td><td>—</td></tr></tbody></table><h3 id="methods"><a class="header-anchor" href="#methods"></a> Methods</h3><p>调用 <code>HlMessage</code> 或 <code>this.$message</code> 会返回当前 Message 的实例。如果需要手动关闭实例，可以调用它的 <code>close</code> 方法。</p><table><thead><tr><th>方法名</th><th>说明</th></tr></thead><tbody><tr><td>close</td><td>关闭当前的 Message</td></tr></tbody></table>',11);var $=g(b,[["render",function(e,n,t,o,s,l){const p=a("hl-demo0"),h=a("demo-block"),m=a("hl-demo1"),g=a("hl-demo2"),f=a("hl-demo3"),C=a("hl-demo4"),b=a("right-nav");return d(),r("section",M,[c("div",k,[H,y,w,v,i(h,null,{source:u((()=>[i(p)])),highlight:u((()=>[x])),default:u((()=>[T])),_:1}),_,N,i(h,null,{source:u((()=>[i(m)])),highlight:u((()=>[L])),default:u((()=>[V])),_:1}),j,B,i(h,null,{source:u((()=>[i(g)])),highlight:u((()=>[S])),default:u((()=>[A])),_:1}),U,z,i(h,null,{source:u((()=>[i(f)])),highlight:u((()=>[I])),_:1}),O,E,i(h,null,{source:u((()=>[i(C)])),highlight:u((()=>[q])),default:u((()=>[P])),_:1}),F]),i(b)])}]]);export{$ as default};
