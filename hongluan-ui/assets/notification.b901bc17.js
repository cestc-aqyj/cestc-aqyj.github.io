var n=Object.defineProperty,t=Object.getOwnPropertySymbols,e=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable,l=(t,e,o)=>e in t?n(t,e,{enumerable:!0,configurable:!0,writable:!0,value:o}):t[e]=o,i=(n,i)=>{for(var a in i||(i={}))e.call(i,a)&&l(n,a,i[a]);if(t)for(var a of t(i))o.call(i,a)&&l(n,a,i[a]);return n};import{H as a,o as c,C as d,D as s,v as r,P as p,at as u,_ as h,as as m}from"./vue.69b6befa.js";import{_ as f,H as g}from"./index.6da685a4.js";import{H as b}from"./hongluan-icons.f9afdbe4.js";import"./hongluan.17b69477.js";import"./highlight.5ad4a187.js";const C={name:"component-doc",components:{"hl-demo0":function(){const{createTextVNode:n,resolveComponent:t,withCtx:e,createVNode:o,Fragment:l,openBlock:a,createElementBlock:c}=u,d=n(" 可自动关闭 "),s=n(" 不会自动关闭 ");const{defineComponent:r,h:p}=u,{HlNotification:h}=g,m=r({setup:()=>({open1:()=>{h({title:"标题名称",message:p("p",{style:"color: teal"},"在引入 Hongluan UI Library 时，可以传入一个全局配置对象。该对象目前支持 size 与 zIndex 字段。size 用于改变组件的默认尺寸，zIndex 设置弹框的初始 z-index（默认值：2000）")})},open2:()=>{h({title:"提示",message:"这是一条不会自动关闭的消息",duration:0})}})});return i({render:function(n,i){const r=t("hl-button");return a(),c(l,null,[o(r,{plain:"",onClick:n.open1,class:"m-r-md"},{default:e((()=>[d])),_:1},8,["onClick"]),o(r,{plain:"",onClick:n.open2},{default:e((()=>[s])),_:1},8,["onClick"])],64)}},m)}(),"hl-demo1":function(){const{createTextVNode:n,resolveComponent:t,withCtx:e,createVNode:o,Fragment:l,openBlock:a,createElementBlock:c}=u,d=n("成功"),s=n("警告"),r=n("消息"),p=n("错误"),h=n("自定义");const{defineComponent:m,h:f}=u,{HlNotification:C,HlIcon:k}=g,{Airplay:N}=b,H=m({setup:()=>({open1:()=>{C({title:"成功",message:"这是一条成功的提示消息",type:"success",duration:0})},open2:()=>{C({title:"警告",message:"这是一条警告的提示消息",type:"warning"})},open3:()=>{C.info({title:"消息",message:"这是一条消息的提示消息"})},open4:()=>{C.error({title:"错误",message:"这是一条错误的提示消息"})},open5:()=>{C({title:"自定义Icon",message:"这是一条自定义的提示消息",icon:f(k,{size:"xl"},{default:()=>[f(N)]})})}})});return i({render:function(n,i){const u=t("hl-button");return a(),c(l,null,[o(u,{plain:"",onClick:n.open1,class:"m-r-md"},{default:e((()=>[d])),_:1},8,["onClick"]),o(u,{plain:"",onClick:n.open2,class:"m-r-md"},{default:e((()=>[s])),_:1},8,["onClick"]),o(u,{plain:"",onClick:n.open3,class:"m-r-md"},{default:e((()=>[r])),_:1},8,["onClick"]),o(u,{plain:"",onClick:n.open4,class:"m-r-md"},{default:e((()=>[p])),_:1},8,["onClick"]),o(u,{plain:"",onClick:n.open5},{default:e((()=>[h])),_:1},8,["onClick"])],64)}},H)}(),"hl-demo2":function(){const{createTextVNode:n,resolveComponent:t,withCtx:e,createVNode:o,Fragment:l,openBlock:a,createElementBlock:c}=u,d=n(" 右上角 "),s=n(" 右下角 "),r=n(" 左下角 "),p=n(" 左上角 ");const{defineComponent:h,h:m}=u,{HlNotification:f}=g,b=h({setup:()=>({open1:()=>{f({title:"自定义位置",message:"右上角弹出的消息"})},open2:()=>{f({title:"自定义位置",message:"右下角弹出的消息",position:"bottom-right"})},open3:()=>{f({title:"自定义位置",message:"左下角弹出的消息",position:"bottom-left"})},open4:()=>{f({title:"自定义位置",message:"左上角弹出的消息",position:"top-left"})}})});return i({render:function(n,i){const u=t("hl-button");return a(),c(l,null,[o(u,{plain:"",onClick:n.open1,class:"m-r-md"},{default:e((()=>[d])),_:1},8,["onClick"]),o(u,{plain:"",onClick:n.open2,class:"m-r-md"},{default:e((()=>[s])),_:1},8,["onClick"]),o(u,{plain:"",onClick:n.open3,class:"m-r-md"},{default:e((()=>[r])),_:1},8,["onClick"]),o(u,{plain:"",onClick:n.open4},{default:e((()=>[p])),_:1},8,["onClick"])],64)}},b)}(),"hl-demo3":function(){const{createTextVNode:n,resolveComponent:t,withCtx:e,openBlock:o,createBlock:l}=u,a=n(" 偏移的消息 ");const{defineComponent:c,h:d}=u,{HlNotification:s}=g,r=c({setup:()=>({open:()=>{s({title:"偏移",message:"这是一条带有偏移的提示消息",offset:100})}})});return i({render:function(n,i){const c=t("hl-button");return o(),l(c,{plain:"",onClick:n.open},{default:e((()=>[a])),_:1},8,["onClick"])}},r)}(),"hl-demo4":function(){const{createTextVNode:n,resolveComponent:t,withCtx:e,openBlock:o,createBlock:l}=u,a=n(" 使用 HTML 片段 ");const{defineComponent:c,h:d}=u,{HlNotification:s}=g,r=c({setup:()=>({open:()=>{s({title:"HTML 片段",dangerouslyUseHTMLString:!0,message:"<strong>这是 <i>HTML</i> 片段</strong>"})}})});return i({render:function(n,i){const c=t("hl-button");return o(),l(c,{plain:"",onClick:n.open},{default:e((()=>[a])),_:1},8,["onClick"])}},r)}(),"hl-demo5":function(){const{createTextVNode:n,resolveComponent:t,withCtx:e,openBlock:o,createBlock:l}=u,a=n(" 隐藏关闭按钮 ");const{defineComponent:c,h:d}=u,{HlNotification:s}=g,r=c({setup:()=>({open:()=>{s.success({title:"Info",message:"这是一条没有关闭按钮的消息",showClose:!1})}})});return i({render:function(n,i){const c=t("hl-button");return o(),l(c,{plain:"",onClick:n.open},{default:e((()=>[a])),_:1},8,["onClick"])}},r)}()}},k={class:"doc-main-content"},N={class:"doc-content"},H=s("h1",null,"Notification 通知",-1),y=s("p",null,"悬浮出现在页面角落，显示全局的通知提醒消息。",-1),x=s("h2",{id:"ji-ben-yong-fa"},[s("a",{class:"header-anchor",href:"#ji-ben-yong-fa"}),h(" 基本用法")],-1),v=s("p",null,"适用性广泛的通知栏",-1),T=s("div",null,[s("p",null,[h("Notification 组件提供通知功能，Element Plus 注册了"),s("code",null,"$notify"),h("方法，接收一个"),s("code",null,"options"),h("字面量参数，在最简单的情况下，你可以设置"),s("code",null,"title"),h("字段和"),s("code",null,"message"),h("字段，用于设置通知的标题和正文。默认情况下，经过一段时间后 Notification 组件会自动关闭，但是通过设置"),s("code",null,"duration"),h("，可以控制关闭的时间间隔，特别的是，如果设置为"),s("code",null,"0"),h("，则不会自动关闭。注意："),s("code",null,"duration"),h("接收一个"),s("code",null,"Number"),h("，单位为毫秒，默认为"),s("code",null,"4500"),h("。")])],-1),_=s("pre",null,[s("code",{class:"html"},"<template>\n  <hl-button plain @click=\"open1\" class=\"m-r-md\">\n    可自动关闭\n  </hl-button>\n  <hl-button plain @click=\"open2\">\n    不会自动关闭\n  </hl-button>\n</template>\n\n<script>\nimport { defineComponent, h } from 'vue'\nimport { HlNotification } from 'hongluan-ui'\nexport default defineComponent ({\n  setup() {\n    const open1 = () => {\n      HlNotification({\n        title: '标题名称',\n        message: h(\n          'p',\n          { style: 'color: teal' },\n          '在引入 Hongluan UI Library 时，可以传入一个全局配置对象。该对象目前支持 size 与 zIndex 字段。size 用于改变组件的默认尺寸，zIndex 设置弹框的初始 z-index（默认值：2000）',\n        ),\n      })\n    }\n\n    const open2 = () => {\n      HlNotification({\n        title: '提示',\n        message: '这是一条不会自动关闭的消息',\n        duration: 0,\n      })\n    }\n    return {\n      open1,\n      open2,\n    }\n  }\n})\n<\/script>\n")],-1),w=s("h2",{id:"dai-you-qing-xiang-xing"},[s("a",{class:"header-anchor",href:"#dai-you-qing-xiang-xing"}),h(" 带有倾向性")],-1),L=s("p",null,"带有 icon，常用来显示「成功、警告、消息、错误」类的系统消息",-1),M=s("div",null,[s("p",null,[h("Hongluan ui 为 Notification 组件准备了四种通知类型："),s("code",null,"success"),h(", "),s("code",null,"warning"),h(", "),s("code",null,"info"),h(", "),s("code",null,"error"),h("。如有特殊 icon，请直接设置"),s("code",null,"icon"),h("填写 icon 库中的图标名称，如：open2 "),s("code",null,"inbox"),h(",通过"),s("code",null,"type"),h("字段来设置，除此以外的值将被忽略。同时，我们也为 Notification 的各种 type 注册了方法，可以在不传入"),s("code",null,"type"),h("字段的情况下像"),s("code",null,"open3"),h("和"),s("code",null,"open4"),h("那样直接调用。")])],-1),z=s("pre",null,[s("code",{class:"html"},"<template>\n  <hl-button plain @click=\"open1\" class=\"m-r-md\">成功</hl-button>\n  <hl-button plain @click=\"open2\" class=\"m-r-md\">警告</hl-button>\n  <hl-button plain @click=\"open3\" class=\"m-r-md\">消息</hl-button>\n  <hl-button plain @click=\"open4\" class=\"m-r-md\">错误</hl-button>\n  <hl-button plain @click=\"open5\">自定义</hl-button>\n</template>\n\n<script>\nimport { defineComponent, h } from 'vue'\nimport { HlNotification, HlIcon } from 'hongluan-ui'\nimport { Airplay } from '@hongluan-ui/icons'\n\nexport default defineComponent ({\n  setup() {\n    const open1 = () => {\n      HlNotification({\n        title: '成功',\n        message: '这是一条成功的提示消息',\n        type: 'success',\n        duration: 0,\n      })\n    }\n\n    const open2 = () => {\n      HlNotification({\n        title: '警告',\n        message: '这是一条警告的提示消息',\n        type: 'warning',\n      })\n    }\n\n    const open3 = () => {\n      HlNotification.info({\n        title: '消息',\n        message: '这是一条消息的提示消息',\n      })\n    }\n\n    const open4 = () => {\n      HlNotification.error({\n        title: '错误',\n        message: '这是一条错误的提示消息',\n      })\n    }\n\n    const open5 = () => {\n      HlNotification({\n        title: '自定义Icon',\n        message: '这是一条自定义的提示消息',\n        icon: h(HlIcon, {\n          size: 'xl'\n        }, {\n          default: () => [h(Airplay)]\n        }),\n      })\n    }\n\n    return {\n      open1,\n      open2,\n      open3,\n      open4,\n      open5,\n    }\n  }\n})\n<\/script>\n")],-1),I=s("h2",{id:"zi-ding-yi-dan-chu-wei-zhi"},[s("a",{class:"header-anchor",href:"#zi-ding-yi-dan-chu-wei-zhi"}),h(" 自定义弹出位置")],-1),j=s("p",null,"可以让 Notification 从屏幕四角中的任意一角弹出",-1),B=s("div",null,[s("p",null,[h("使用"),s("code",null,"position"),h("属性定义 Notification 的弹出位置，支持四个选项："),s("code",null,"top-right"),h("、"),s("code",null,"top-left"),h("、"),s("code",null,"bottom-right"),h("、"),s("code",null,"bottom-left"),h("，默认为"),s("code",null,"top-right"),h("。")])],-1),V=s("pre",null,[s("code",{class:"html"},"<template>\n  <hl-button plain @click=\"open1\" class=\"m-r-md\">\n    右上角\n  </hl-button>\n  <hl-button plain @click=\"open2\" class=\"m-r-md\">\n    右下角\n  </hl-button>\n  <hl-button plain @click=\"open3\" class=\"m-r-md\">\n    左下角\n  </hl-button>\n  <hl-button plain @click=\"open4\">\n    左上角\n  </hl-button>\n</template>\n\n<script>\nimport { defineComponent, h } from 'vue'\nimport { HlNotification } from 'hongluan-ui'\nexport default defineComponent ({\n  setup() {\n    const open1 = () => {\n      HlNotification({\n        title: '自定义位置',\n        message: '右上角弹出的消息',\n      })\n    }\n\n    const open2 = () => {\n      HlNotification({\n        title: '自定义位置',\n        message: '右下角弹出的消息',\n        position: 'bottom-right',\n      })\n    }\n\n    const open3 = () => {\n      HlNotification({\n        title: '自定义位置',\n        message: '左下角弹出的消息',\n        position: 'bottom-left',\n      })\n    }\n\n    const open4 = () => {\n      HlNotification({\n        title: '自定义位置',\n        message: '左上角弹出的消息',\n        position: 'top-left',\n      })\n    }\n\n    return {\n      open1,\n      open2,\n      open3,\n      open4,\n    }\n  }\n})\n<\/script>\n")],-1),S=s("h2",{id:"dai-you-pian-yi"},[s("a",{class:"header-anchor",href:"#dai-you-pian-yi"}),h(" 带有偏移")],-1),O=s("p",null,"让 Notification 偏移一些位置",-1),U=s("div",null,[s("p",null,[h("Notification 提供设置偏移量的功能，通过设置 "),s("code",null,"offset"),h(" 字段，可以使弹出的消息距屏幕边缘偏移一段距离。注意在同一时刻，所有的 Notification 实例应当具有一个相同的偏移量。")])],-1),P=s("pre",null,[s("code",{class:"html"},"<template>\n  <hl-button plain @click=\"open\">\n    偏移的消息\n  </hl-button>\n</template>\n\n<script>\nimport { defineComponent, h } from 'vue'\nimport { HlNotification } from 'hongluan-ui'\nexport default defineComponent ({\n  setup() {\n    const open = () => {\n      HlNotification({\n        title: '偏移',\n        message: '这是一条带有偏移的提示消息',\n        offset: 100,\n      })\n    }\n    return {\n      open,\n    }\n  }\n})\n<\/script>\n")],-1),E=s("h2",{id:"shi-yong-html-pian-duan"},[s("a",{class:"header-anchor",href:"#shi-yong-html-pian-duan"}),h(" 使用 HTML 片段")],-1),q=s("p",null,[s("code",null,"message"),h(" 属性支持传入 HTML 片段")],-1),A=s("div",null,[s("p",null,[h("将"),s("code",null,"dangerouslyUseHTMLString"),h("属性设置为 true，"),s("code",null,"message"),h(" 就会被当作 HTML 片段处理。")])],-1),F=s("pre",null,[s("code",{class:"html"},"<template>\n  <hl-button plain @click=\"open\">\n    使用 HTML 片段\n  </hl-button>\n</template>\n\n<script>\nimport { defineComponent, h } from 'vue'\nimport { HlNotification } from 'hongluan-ui'\nexport default defineComponent ({\n  setup() {\n    const open = () => {\n      HlNotification({\n        title: 'HTML 片段',\n        dangerouslyUseHTMLString: true,\n        message: '<strong>这是 <i>HTML</i> 片段</strong>',\n      })\n    }\n    return {\n      open,\n    }\n  }\n})\n<\/script>\n")],-1),$=m('<div class="md-warning"><p><code>message</code> 属性虽然支持传入 HTML 片段，但是在网站上动态渲染任意 HTML 是非常危险的，因为容易导致 <a href="https://en.wikipedia.org/wiki/Cross-site_scripting">XSS 攻击</a>。因此在 <code>dangerouslyUseHTMLString</code> 打开的情况下，请确保 <code>message</code> 的内容是可信的，<strong>永远不要</strong>将用户提交的内容赋值给 <code>message</code> 属性。</p></div><h2 id="yin-cang-guan-bi-an-niu"><a class="header-anchor" href="#yin-cang-guan-bi-an-niu"></a> 隐藏关闭按钮</h2><p>可以不显示关闭按钮</p>',3),D=s("div",null,[s("p",null,[h("将"),s("code",null,"showClose"),h("属性设置为"),s("code",null,"false"),h("即可隐藏关闭按钮。")])],-1),X=s("pre",null,[s("code",{class:"html"},"<template>\n  <hl-button plain @click=\"open\">\n    隐藏关闭按钮\n  </hl-button>\n</template>\n\n<script>\nimport { defineComponent, h } from 'vue'\nimport { HlNotification } from 'hongluan-ui'\nexport default defineComponent ({\n  setup() {\n    const open = () => {\n      HlNotification.success({\n        title: 'Info',\n        message: '这是一条没有关闭按钮的消息',\n        showClose: false,\n      })\n    }\n    return {\n      open,\n    }\n  }\n})\n<\/script>\n")],-1),G=m('<h2 id="quan-ju-fang-fa"><a class="header-anchor" href="#quan-ju-fang-fa"></a> 全局方法</h2><p>Hongluan ui 为 <code>app.config.globalProperties</code> 添加了全局方法 <code>$notify</code>。因此在 vue instance 中可以采用本页面中的方式调用 Notification。</p><h2 id="options"><a class="header-anchor" href="#options"></a> Options</h2><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>title</td><td>标题</td><td>string</td><td>—</td><td>—</td></tr><tr><td>message</td><td>说明文字</td><td>string/Vue.VNode</td><td>—</td><td>—</td></tr><tr><td>dangerouslyUseHTMLString</td><td>是否将 message 属性作为 HTML 片段处理</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>type</td><td>主题样式，如果不在可选值内将被忽略</td><td>string</td><td>success/warning/info/error</td><td>—</td></tr><tr><td>icon</td><td>自定义icon，优先级高于type定义图标</td><td>VNode</td><td>—</td><td>—</td></tr><tr><td>customClass</td><td>自定义类名</td><td>string</td><td>—</td><td>—</td></tr><tr><td>duration</td><td>显示时间, 毫秒。设为 0 则不会自动关闭</td><td>number</td><td>—</td><td>4500</td></tr><tr><td>position</td><td>自定义弹出位置</td><td>string</td><td>top-right/top-left/bottom-right/bottom-left</td><td>top-right</td></tr><tr><td>showClose</td><td>是否显示关闭按钮</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>onClose</td><td>关闭时的回调函数</td><td>function</td><td>—</td><td>—</td></tr><tr><td>onClick</td><td>点击 Notification 时的回调函数</td><td>function</td><td>—</td><td>—</td></tr><tr><td>offset</td><td>偏移的距离，在同一时刻，所有的 Notification 实例应当具有一个相同的偏移量</td><td>number</td><td>—</td><td>0</td></tr></tbody></table><h2 id="fang-fa"><a class="header-anchor" href="#fang-fa"></a> 方法</h2><p>调用 <code>Notification</code> 或 <code>this.$notify</code> 会返回当前 Notification 的实例。如果需要手动关闭实例，可以调用它的 <code>close</code> 方法。</p><table><thead><tr><th>方法名</th><th>说明</th></tr></thead><tbody><tr><td>close</td><td>关闭当前的 Notification</td></tr></tbody></table>',7);var J=f(C,[["render",function(n,t,e,o,l,i){const u=a("hl-demo0"),h=a("demo-block"),m=a("hl-demo1"),f=a("hl-demo2"),g=a("hl-demo3"),b=a("hl-demo4"),C=a("hl-demo5"),J=a("right-nav");return c(),d("section",k,[s("div",N,[H,y,x,v,r(h,null,{source:p((()=>[r(u)])),highlight:p((()=>[_])),default:p((()=>[T])),_:1}),w,L,r(h,null,{source:p((()=>[r(m)])),highlight:p((()=>[z])),default:p((()=>[M])),_:1}),I,j,r(h,null,{source:p((()=>[r(f)])),highlight:p((()=>[V])),default:p((()=>[B])),_:1}),S,O,r(h,null,{source:p((()=>[r(g)])),highlight:p((()=>[P])),default:p((()=>[U])),_:1}),E,q,r(h,null,{source:p((()=>[r(b)])),highlight:p((()=>[F])),default:p((()=>[A])),_:1}),$,r(h,null,{source:p((()=>[r(C)])),highlight:p((()=>[X])),default:p((()=>[D])),_:1}),G]),r(J)])}]]);export{J as default};
