var l=Object.defineProperty,e=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,n=Object.prototype.propertyIsEnumerable,c=(e,o,n)=>o in e?l(e,o,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[o]=n,t=(l,t)=>{for(var a in t||(t={}))o.call(t,a)&&c(l,a,t[a]);if(e)for(var a of e(t))n.call(t,a)&&c(l,a,t[a]);return l};import{H as a,o as d,C as m,D as u,v as h,P as s,at as r,as as p,_ as i}from"./vue.69b6befa.js";import{_ as f}from"./index.f86c4400.js";import"./hongluan.17b69477.js";import"./highlight.5ad4a187.js";import"./hongluan-icons.f9afdbe4.js";const g={name:"component-doc",components:{"hl-demo0":function(){const{createElementVNode:l,resolveComponent:e,withCtx:o,createVNode:n,openBlock:c,createBlock:a}=r,d=l("em",null,"col-12",-1),m=l("em",null,"col-12",-1),u=l("em",null,"col-8",-1),h=l("em",null,"col-8",-1),s=l("em",null,"col-8",-1),p=l("em",null,"col-6",-1),i=l("em",null,"col-6",-1),f=l("em",null,"col-6",-1),g=l("em",null,"col-6",-1);return t({render:function(l,t){const r=e("hl-col"),v=e("hl-row");return c(),a(v,{class:"show-col",gap:"var(--md)"},{default:o((()=>[n(r,{span:"col-12"},{default:o((()=>[d])),_:1}),n(r,{span:"col-12"},{default:o((()=>[m])),_:1}),n(r,{span:"col-8"},{default:o((()=>[u])),_:1}),n(r,{span:"col-8"},{default:o((()=>[h])),_:1}),n(r,{span:"col-8"},{default:o((()=>[s])),_:1}),n(r,{span:"col-6"},{default:o((()=>[p])),_:1}),n(r,{span:"col-6"},{default:o((()=>[i])),_:1}),n(r,{span:"col-6"},{default:o((()=>[f])),_:1}),n(r,{span:"col-6"},{default:o((()=>[g])),_:1})])),_:1})}},{})}(),"hl-demo1":function(){const{createElementVNode:l,resolveComponent:e,withCtx:o,createVNode:n,openBlock:c,createBlock:a}=r,d=l("em",null,"col-md-4",-1),m=l("em",null,"col-md-8",-1),u=l("em",null,"col-md-12",-1),h=l("em",null,"col-lg-12",-1),s=l("em",null,"col-lg-12",-1),p=l("em",null,"col-lg-8 col-xl-8",-1),i=l("em",null,"col-lg-12 col-xl-8",-1),f=l("em",null,"col-lg-4 col-xl-8",-1);return t({render:function(l,t){const r=e("hl-col"),g=e("hl-row");return c(),a(g,{class:"show-col",gap:"var(--md)"},{default:o((()=>[n(r,{span:"col-md-4"},{default:o((()=>[d])),_:1}),n(r,{span:"col-md-8"},{default:o((()=>[m])),_:1}),n(r,{span:"col-md-12"},{default:o((()=>[u])),_:1}),n(r,{span:"col-lg-12"},{default:o((()=>[h])),_:1}),n(r,{span:"col-lg-12"},{default:o((()=>[s])),_:1}),n(r,{span:"col-lg-6 col-xl-8"},{default:o((()=>[p])),_:1}),n(r,{span:"col-lg-12 col-xl-8"},{default:o((()=>[i])),_:1}),n(r,{span:"col-lg-6 col-xl-8"},{default:o((()=>[f])),_:1})])),_:1})}},{})}(),"hl-demo2":function(){const{createElementVNode:l,resolveComponent:e,withCtx:o,createVNode:n,Fragment:c,openBlock:a,createElementBlock:d}=r,m=l("em",null,"col",-1),u=l("em",null,"col",-1),h=l("em",null,"col",-1),s=l("em",null,"col-xl",-1),p=l("em",null,"col-xl",-1),i=l("em",null,"col-xl",-1);return t({render:function(l,t){const r=e("hl-col"),f=e("hl-row");return a(),d(c,null,[n(f,{class:"show-col"},{default:o((()=>[n(r,{span:"col"},{default:o((()=>[m])),_:1}),n(r,{span:"col"},{default:o((()=>[u])),_:1}),n(r,{span:"col"},{default:o((()=>[h])),_:1})])),_:1}),n(f,{class:"show-col m-t-md"},{default:o((()=>[n(r,{span:"col-xl"},{default:o((()=>[s])),_:1}),n(r,{span:"col-xl"},{default:o((()=>[p])),_:1}),n(r,{span:"col-xl"},{default:o((()=>[i])),_:1})])),_:1})],64)}},{})}(),"hl-demo3":function(){const{createElementVNode:l,resolveComponent:e,withCtx:o,createVNode:n,openBlock:c,createBlock:a}=r,d=l("em",null,"col-md-8",-1),m=l("em",null,"col-md-8 offset-md-8",-1),u=l("em",null,"col-md-8",-1),h=l("em",null,"col-lg-12 offset-lg-6",-1);return t({render:function(l,t){const s=e("hl-col"),r=e("hl-row");return c(),a(r,{class:"show-col",gap:"var(--md)"},{default:o((()=>[n(s,{span:"col-md-8"},{default:o((()=>[d])),_:1}),n(s,{span:"col-md-8",offset:"offset-md-8"},{default:o((()=>[m])),_:1}),n(s,{span:"col-md-6"},{default:o((()=>[u])),_:1}),n(s,{span:"col-lg-12",offset:"offset-lg-6"},{default:o((()=>[h])),_:1})])),_:1})}},{})}(),"hl-demo4":function(){const{renderList:l,Fragment:e,openBlock:o,createElementBlock:n,resolveComponent:c,createBlock:a,createCommentVNode:d,withCtx:m,createVNode:u,createElementVNode:h}=r,s=h("em",null,"item",-1),p=h("em",null,"item",-1),i=h("em",null,"item",-1),f=h("em",null,"item",-1),g=h("em",null,"item",-1),v=h("em",null,"item",-1);const{defineComponent:w,ref:_}=r,x=w({setup:()=>({options:_([{value:"0",label:"none"},{divider:!0},{value:"var(--sm)",label:"sm"},{value:"var(--md)",label:"md"},{value:"var(--lg)",label:"lg"},{value:"var(--xl)",label:"xl"},{value:"var(--xxl)",label:"xxl"}]),value:_(""),valueX:_(""),valueY:_("")})});return t({render:function(t,d){const h=c("hl-option"),r=c("hl-select"),w=c("hl-group"),_=c("hl-col"),x=c("hl-row");return o(),n(e,null,[u(w,{gap:"var(--md)"},{default:m((()=>[u(r,{modelValue:t.value,"onUpdate:modelValue":d[0]||(d[0]=l=>t.value=l),clearable:"",placeholder:"gap 属性"},{default:m((()=>[(o(!0),n(e,null,l(t.options,(l=>(o(),n(e,null,[l.divider?(o(),a(h,{key:0,divider:""})):(o(),a(h,{key:l.value,label:l.label,value:l.value},null,8,["label","value"]))],64)))),256))])),_:1},8,["modelValue"]),u(r,{modelValue:t.valueX,"onUpdate:modelValue":d[1]||(d[1]=l=>t.valueX=l),clearable:"",placeholder:"gap-x 属性"},{default:m((()=>[(o(!0),n(e,null,l(t.options,(l=>(o(),n(e,null,[l.divider?(o(),a(h,{key:0,divider:""})):(o(),a(h,{key:l.value,label:l.label,value:l.value},null,8,["label","value"]))],64)))),256))])),_:1},8,["modelValue"]),u(r,{modelValue:t.valueY,"onUpdate:modelValue":d[2]||(d[2]=l=>t.valueY=l),clearable:"",placeholder:"gap-y 属性"},{default:m((()=>[(o(!0),n(e,null,l(t.options,(l=>(o(),n(e,null,[l.divider?(o(),a(h,{key:0,divider:""})):(o(),a(h,{key:l.value,label:l.label,value:l.value},null,8,["label","value"]))],64)))),256))])),_:1},8,["modelValue"])])),_:1}),u(x,{class:"show-col m-t-md",gap:t.value,"gap-x":t.valueX,"gap-y":t.valueY},{default:m((()=>[u(_,{span:"col-md-8"},{default:m((()=>[s])),_:1}),u(_,{span:"col-md-8"},{default:m((()=>[p])),_:1}),u(_,{span:"col-md-8"},{default:m((()=>[i])),_:1}),u(_,{span:"col-md-8"},{default:m((()=>[f])),_:1}),u(_,{span:"col-md-8"},{default:m((()=>[g])),_:1}),u(_,{span:"col-md-8"},{default:m((()=>[v])),_:1})])),_:1},8,["gap","gap-x","gap-y"])],64)}},x)}(),"hl-demo5":function(){const{createElementVNode:l,resolveComponent:e,withCtx:o,createVNode:n,Fragment:c,openBlock:a,createElementBlock:d}=r,m=l("em",null,"col-md-6",-1),u=l("em",null,"col-md-6",-1),h=l("em",null,"col-md-6",-1),s=l("em",null,"col-md-6",-1),p=l("em",null,"col-md-6",-1),i=l("em",null,"col-md-6",-1),f=l("em",null,"col-md-6",-1),g=l("em",null,"col-md-6",-1),v=l("em",null,"col-md-6",-1),w=l("em",null,"col-md-6",-1),_=l("em",null,"col-md-6",-1),x=l("em",null,"col-md-6",-1),b=l("em",null,"col-md-6",-1),y=l("em",null,"col-md-6",-1),k=l("em",null,"col-md-6",-1);return t({render:function(l,t){const r=e("hl-col"),V=e("hl-row");return a(),d(c,null,[n(V,{class:"show-col dom-area",align:"left","data-name":"left"},{default:o((()=>[n(r,{span:"col-md-6"},{default:o((()=>[m])),_:1}),n(r,{span:"col-md-6"},{default:o((()=>[u])),_:1}),n(r,{span:"col-md-6"},{default:o((()=>[h])),_:1})])),_:1}),n(V,{class:"show-col m-t-md dom-area",align:"center","data-name":"center"},{default:o((()=>[n(r,{span:"col-md-6"},{default:o((()=>[s])),_:1}),n(r,{span:"col-md-6"},{default:o((()=>[p])),_:1}),n(r,{span:"col-md-6"},{default:o((()=>[i])),_:1})])),_:1}),n(V,{class:"show-col m-t-md dom-area",align:"right","data-name":"right"},{default:o((()=>[n(r,{span:"col-md-6"},{default:o((()=>[f])),_:1}),n(r,{span:"col-md-6"},{default:o((()=>[g])),_:1}),n(r,{span:"col-md-6"},{default:o((()=>[v])),_:1})])),_:1}),n(V,{class:"show-col m-t-md dom-area",align:"around","data-name":"around"},{default:o((()=>[n(r,{span:"col-md-6"},{default:o((()=>[w])),_:1}),n(r,{span:"col-md-6"},{default:o((()=>[_])),_:1}),n(r,{span:"col-md-6"},{default:o((()=>[x])),_:1})])),_:1}),n(V,{class:"show-col m-t-md dom-area",align:"between","data-name":"between"},{default:o((()=>[n(r,{span:"col-md-6"},{default:o((()=>[b])),_:1}),n(r,{span:"col-md-6"},{default:o((()=>[y])),_:1}),n(r,{span:"col-md-6"},{default:o((()=>[k])),_:1})])),_:1})],64)}},{})}(),"hl-demo6":function(){const{createElementVNode:l,resolveComponent:e,withCtx:o,createVNode:n,openBlock:c,createBlock:a}=r,d=l("em",null,"col",-1),m=l("em",null,"col",-1),u=l("em",null,"col",-1),h=l("em",null,"col",-1),s=l("em",null,"col",-1),p=l("em",null,"col",-1);return t({render:function(l,t){const r=e("hl-col"),i=e("hl-row");return c(),a(i,{gap:"var(--lg)"},{default:o((()=>[n(r,{span:"col"},{default:o((()=>[n(i,{class:"show-col bg-stripes",align:"top",style:{height:"20vh"}},{default:o((()=>[n(r,{span:"col"},{default:o((()=>[d])),_:1}),n(r,{span:"col"},{default:o((()=>[m])),_:1})])),_:1})])),_:1}),n(r,{span:"col"},{default:o((()=>[n(i,{class:"show-col bg-stripes",align:"middle",style:{height:"20vh"}},{default:o((()=>[n(r,{span:"col"},{default:o((()=>[u])),_:1}),n(r,{span:"col"},{default:o((()=>[h])),_:1})])),_:1})])),_:1}),n(r,{span:"col"},{default:o((()=>[n(i,{class:"show-col bg-stripes",align:"bottom",style:{height:"20vh"}},{default:o((()=>[n(r,{span:"col"},{default:o((()=>[s])),_:1}),n(r,{span:"col"},{default:o((()=>[p])),_:1})])),_:1})])),_:1})])),_:1})}},{})}(),"hl-demo7":function(){const{createElementVNode:l,resolveComponent:e,withCtx:o,createVNode:n,openBlock:c,createBlock:a}=r,d=l("em",null,"1",-1),m=l("em",null,"2",-1),u=l("em",null,"3",-1),h=l("em",null,"4",-1),s=l("em",null,"5",-1),p=l("em",null,"6",-1),i=l("em",null,"7",-1),f=l("em",null,"8",-1),g=l("em",null,"9",-1);return t({render:function(l,t){const r=e("hl-col"),v=e("hl-row");return c(),a(v,{layout:"grid",count:"count-xl-3 count-md-2",gap:"var(--md)",class:"show-col"},{default:o((()=>[n(r,{span:"col"},{default:o((()=>[d])),_:1}),n(r,{span:"col"},{default:o((()=>[m])),_:1}),n(r,{span:"col"},{default:o((()=>[u])),_:1}),n(r,{span:"col"},{default:o((()=>[h])),_:1}),n(r,{span:"col"},{default:o((()=>[s])),_:1}),n(r,{span:"col"},{default:o((()=>[p])),_:1}),n(r,{span:"col"},{default:o((()=>[i])),_:1}),n(r,{span:"col"},{default:o((()=>[f])),_:1}),n(r,{span:"col"},{default:o((()=>[g])),_:1})])),_:1})}},{})}(),"hl-demo8":function(){const{createElementVNode:l,resolveComponent:e,withCtx:o,createVNode:n,openBlock:c,createBlock:a}=r,d=l("em",null,"1",-1),m=l("em",null,"2",-1),u=l("em",null,"3",-1),h=l("em",null,"4",-1),s=l("em",null,"5",-1),p=l("em",null,"6",-1),i=l("em",null,"7",-1),f=l("em",null,"8",-1),g=l("em",null,"9",-1);return t({render:function(l,t){const r=e("hl-col"),v=e("hl-row");return c(),a(v,{layout:"grid",count:"count-xl-3 count-md-4",dir:"horizontal",gap:"var(--md)",class:"show-col"},{default:o((()=>[n(r,{span:"col"},{default:o((()=>[d])),_:1}),n(r,{span:"col"},{default:o((()=>[m])),_:1}),n(r,{span:"col"},{default:o((()=>[u])),_:1}),n(r,{span:"col"},{default:o((()=>[h])),_:1}),n(r,{span:"col"},{default:o((()=>[s])),_:1}),n(r,{span:"col"},{default:o((()=>[p])),_:1}),n(r,{span:"col"},{default:o((()=>[i])),_:1}),n(r,{span:"col"},{default:o((()=>[f])),_:1}),n(r,{span:"col"},{default:o((()=>[g])),_:1})])),_:1})}},{})}(),"hl-demo9":function(){const{createElementVNode:l,resolveComponent:e,withCtx:o,createVNode:n,createTextVNode:c,createStaticVNode:a,Fragment:d,openBlock:m,createElementBlock:u}=r,h=l("em",null,"1",-1),s=l("em",null,"2",-1),p=l("em",null,"3",-1),i=l("em",null,"4",-1),f=l("em",null,"5",-1),g=l("em",null,"6",-1),v=a("<br><br><p>跨度类与 <code>.col-*`</code> 类似，但<code>.col-*</code> 是根据24栅格来占比的，而跨度类是基于 <code>hl-row</code> 的 <code>count</code> 属性来占比的。</p><p>比如：当 <code>count=&quot;count-3&quot;</code> 时 <code>.grid-col-span-3</code> 即为 3/3， <code>.grid-col-span-1</code> 即为 1/3。</p>",4);return t({render:function(l,c){const t=e("hl-col"),a=e("hl-row");return m(),u(d,null,[n(a,{layout:"grid",count:"count-3",dir:"vertical",gap:"var(--md)",class:"show-col"},{default:o((()=>[n(t,{span:"col grid-col-span-3"},{default:o((()=>[h])),_:1}),n(t,{span:"col"},{default:o((()=>[s])),_:1}),n(t,{span:"col grid-row-span-lg-1 grid-row-span-xl-2"},{default:o((()=>[p])),_:1}),n(t,{span:"col"},{default:o((()=>[i])),_:1}),n(t,{span:"col"},{default:o((()=>[f])),_:1}),n(t,{span:"col"},{default:o((()=>[g])),_:1})])),_:1}),v],64)}},{})}(),"hl-demo10":function(){const{createElementVNode:l,resolveComponent:e,withCtx:o,createVNode:n,openBlock:c,createBlock:a}=r,d=l("em",null,"col1",-1),m=l("em",null,"col2",-1),u=l("em",null,"col3",-1),h=l("em",null,"col4",-1),s=l("em",null,"col5",-1),p=l("em",null,"col6",-1),i=l("em",null,"col7",-1),f=l("em",null,"col8",-1);return t({render:function(l,t){const r=e("hl-col"),g=e("hl-row");return c(),a(g,{layout:"flow",count:"count-lg-2 count-xl-3 count-xxl-4",gap:"var(--md)",class:"show-col"},{default:o((()=>[n(r,{span:"col",style:{height:"300px"}},{default:o((()=>[d])),_:1}),n(r,{span:"col",style:{height:"200px"}},{default:o((()=>[m])),_:1}),n(r,{span:"col",style:{height:"120px"}},{default:o((()=>[u])),_:1}),n(r,{span:"col",style:{height:"380px"}},{default:o((()=>[h])),_:1}),n(r,{span:"col",style:{height:"240px"}},{default:o((()=>[s])),_:1}),n(r,{span:"col",style:{height:"260px"}},{default:o((()=>[p])),_:1}),n(r,{span:"col",style:{height:"380px"}},{default:o((()=>[i])),_:1}),n(r,{span:"col",style:{height:"120px"}},{default:o((()=>[f])),_:1})])),_:1})}},{})}()}},v={class:"doc-main-content"},w={class:"doc-content"},_=p('<h1>Grid 栅格系统</h1><p>鸿鸾使用了 <strong>24 列</strong> 栅格系统，通过对 <code>row</code> 和 <code>col</code> 组件的定义，即可轻松创造出丰富且响应式的界面布局</p><h2 id="ji-chu-bu-ju"><a class="header-anchor" href="#ji-chu-bu-ju"></a> 基础布局</h2><p>使用 <code>span</code> 属性来为每一个 <code>col</code> 设置比例 例如 <code>span=&quot;col-12&quot;</code></p>',4),x=u("div",null,[u("p",null,[u("strong",null,"24 列"),i(" 栅格表示你可以将宽度拆分为 24 列，24 为 100%、12 为 50%、6 为 25%，依此类推。所以你可以将 "),u("code",null,"col-*"),i("设置为 1-24 的任意数值，例如："),u("code",null,"col-5")])],-1),b=u("pre",null,[u("code",{class:"html"},'<template>\n  <hl-row class="show-col" gap="var(--md)">\n    <hl-col span="col-12"><em>col-12</em></hl-col>\n    <hl-col span="col-12"><em>col-12</em></hl-col>\n    <hl-col span="col-8"><em>col-8</em></hl-col>\n    <hl-col span="col-8"><em>col-8</em></hl-col>\n    <hl-col span="col-8"><em>col-8</em></hl-col>\n    <hl-col span="col-6"><em>col-6</em></hl-col>\n    <hl-col span="col-6"><em>col-6</em></hl-col>\n    <hl-col span="col-6"><em>col-6</em></hl-col>\n    <hl-col span="col-6"><em>col-6</em></hl-col>\n  </hl-row>\n</template>\n')],-1),y=u("h2",{id:"xiang-ying-shi"},[u("a",{class:"header-anchor",href:"#xiang-ying-shi"}),i(" 响应式")],-1),k=u("p",null,[i("你可以为每个成员 "),u("code",null,"col"),i(" 赋予响应窗口尺寸的标签，例如 "),u("code",null,'span="col-md-12"'),i(", "),u("strong",null,"可以多同时设置多个响应式个标签哦"),i("。")],-1),V=u("div",null,[u("p",null,[i("响应式尺寸有 "),u("code",null,"sm"),i(),u("code",null,"md"),i(),u("code",null,"lg"),i(),u("code",null,"xl"),i(),u("code",null,"xxl"),i(" , 参考页尾的窗口响应对照表")])],-1),j=u("pre",null,[u("code",{class:"html"},'<template>\n  <hl-row class="show-col" gap="var(--md)">\n    <hl-col span="col-md-4"><em>col-md-4</em></hl-col>\n    <hl-col span="col-md-8"><em>col-md-8</em></hl-col>\n    <hl-col span="col-md-12"><em>col-md-12</em></hl-col>\n    <hl-col span="col-lg-12"><em>col-lg-12</em></hl-col>\n    <hl-col span="col-lg-12"><em>col-lg-12</em></hl-col>\n    <hl-col span="col-lg-6 col-xl-8"><em>col-lg-8 col-xl-8</em></hl-col>\n    <hl-col span="col-lg-12 col-xl-8"><em>col-lg-12 col-xl-8</em></hl-col>\n    <hl-col span="col-lg-6 col-xl-8"><em>col-lg-4 col-xl-8</em></hl-col>\n  </hl-row>\n</template>\n')],-1),C=u("h2",{id:"jun-deng-fen-bu-lie"},[u("a",{class:"header-anchor",href:"#jun-deng-fen-bu-lie"}),i(" 均等分布列")],-1),N=u("p",null,[i("当你未设置 "),u("code",null,"col"),i(" 比例的时候，它们将自动均等分配宽度，同时也支持响应式尺寸例如： "),u("code",null,"col-md"),i(),u("code",null,"col-lg"),i(" 等")],-1),B=u("div",null,[u("p",null,[i("所有自动布局类的栅格系统如：Grid自动网格布局 和 Flow自动流布局 都需要为"),u("code",null,"<hl-col>"),i("设置"),u("code",null,'span="col"'),i("属性。")])],-1),E=u("pre",null,[u("code",{class:"html"},'<template>\n  <hl-row class="show-col">\n    <hl-col span="col"><em>col</em></hl-col>\n    <hl-col span="col"><em>col</em></hl-col>\n    <hl-col span="col"><em>col</em></hl-col>\n  </hl-row>\n  <hl-row class="show-col m-t-md">\n    <hl-col span="col-xl"><em>col-xl</em></hl-col>\n    <hl-col span="col-xl"><em>col-xl</em></hl-col>\n    <hl-col span="col-xl"><em>col-xl</em></hl-col>\n  </hl-row>\n</template>\n')],-1),z=u("h2",{id:"pian-yi"},[u("a",{class:"header-anchor",href:"#pian-yi"}),i(" 偏移")],-1),q=u("p",null,[i("你可以使用 "),u("code",null,"offset"),i(" 属性来偏移某个 "),u("code",null,"col"),i(" 列，例如 "),u("code",null,'offset="offset-md-8"')],-1),X=u("div",null,[u("p",null,[u("code",null,"offset"),i(" 拥有跟 "),u("code",null,"col"),i(" 一样的宽度比例设定和响应式的特性。")])],-1),Y=u("pre",null,[u("code",{class:"html"},'<template>\n  <hl-row class="show-col" gap="var(--md)">\n    <hl-col span="col-md-8"><em>col-md-8</em></hl-col>\n    <hl-col span="col-md-8" offset="offset-md-8"><em>col-md-8 offset-md-8</em></hl-col>\n    <hl-col span="col-md-6"><em>col-md-8</em></hl-col>\n    <hl-col span="col-lg-12" offset="offset-lg-6"><em>col-lg-12 offset-lg-6</em></hl-col>\n  </hl-row>\n</template>\n')],-1),F=u("h2",{id:"jian-ju-she-zhi"},[u("a",{class:"header-anchor",href:"#jian-ju-she-zhi"}),i(" 间距设置")],-1),O=u("p",null,[i("鸿鸾提供了规范化间距尺寸来设置 "),u("code",null,"col"),i(" 之间的间距, 例如为 "),u("code",null,"<hl-row>"),i(" 增加 "),u("code",null,'gap="var(--md)"'),i(" 属性")],-1),G=u("div",null,[u("p",null,[i("同时还提供"),u("code",null,"gap-x"),i(" 和 "),u("code",null,"gap-y"),i(" 属性来单独设置横向和纵向间距。"),u("code",null,"gap"),i("属性允许你传递任意的尺寸单位。")])],-1),P=u("pre",null,[u("code",{class:"html"},'<template>\n  <hl-group gap="var(--md)">\n  <hl-select v-model="value" clearable placeholder="gap 属性">\n    <template v-for="item in options">\n      <hl-option v-if="item.divider" divider> </hl-option>\n      <hl-option v-else :key="item.value" :label="item.label" :value="item.value"> </hl-option>\n    </template>\n  </hl-select>\n  <hl-select v-model="valueX" clearable placeholder="gap-x 属性">\n    <template v-for="item in options">\n      <hl-option v-if="item.divider" divider> </hl-option>\n      <hl-option v-else :key="item.value" :label="item.label" :value="item.value"> </hl-option>\n    </template>\n  </hl-select>\n  <hl-select v-model="valueY" clearable placeholder="gap-y 属性">\n    <template v-for="item in options">\n      <hl-option v-if="item.divider" divider> </hl-option>\n      <hl-option v-else :key="item.value" :label="item.label" :value="item.value"> </hl-option>\n    </template>\n  </hl-select>\n  </hl-group>\n  <hl-row class="show-col m-t-md" :gap="value" :gap-x="valueX" :gap-y="valueY">\n    <hl-col span="col-md-8"><em>item</em></hl-col>\n    <hl-col span="col-md-8"><em>item</em></hl-col>\n    <hl-col span="col-md-8"><em>item</em></hl-col>\n    <hl-col span="col-md-8"><em>item</em></hl-col>\n    <hl-col span="col-md-8"><em>item</em></hl-col>\n    <hl-col span="col-md-8"><em>item</em></hl-col>\n  </hl-row>\n</template>\n\n<script>\nimport { defineComponent, ref } from \'vue\'\nexport default defineComponent({\n  setup() {\n    const options = ref([\n      {\n        value: \'0\',\n        label: \'none\',\n      },\n      {\n        divider: true,\n      },\n      {\n        value: \'var(--sm)\',\n        label: \'sm\',\n      },\n      {\n        value: \'var(--md)\',\n        label: \'md\',\n      },\n      {\n        value: \'var(--lg)\',\n        label: \'lg\',\n      },\n      {\n        value: \'var(--xl)\',\n        label: \'xl\',\n      },\n      {\n        value: \'var(--xxl)\',\n        label: \'xxl\',\n      },\n    ])\n    const value = ref(\'\')\n    const valueX= ref(\'\')\n    const valueY = ref(\'\')\n    return {\n      options,\n      value,\n      valueX,\n      valueY,\n    }\n  }\n})\n<\/script>\n')],-1),S=u("h2",{id:"heng-xiang-dui-qi"},[u("a",{class:"header-anchor",href:"#heng-xiang-dui-qi"}),i(" 横向对齐")],-1),U=u("p",null,[u("code",null,"align"),i(" 属性可改变子元素的排列方式，例如 "),u("code",null,'align="center"')],-1),A=u("div",null,[u("p",null,[i("为 "),u("code",null,"align"),i(" 设置 "),u("code",null,"left"),i(" , "),u("code",null,"center"),i(" , "),u("code",null,"right"),i(" , "),u("code",null,"around"),i(" , "),u("code",null,"between"),i(" 即可改变子元素的横向排列方式，")])],-1),D=u("pre",null,[u("code",{class:"html"},'<template>\n  <hl-row class="show-col dom-area" align="left" data-name="left">\n    <hl-col span="col-md-6"><em>col-md-6</em></hl-col>\n    <hl-col span="col-md-6"><em>col-md-6</em></hl-col>\n    <hl-col span="col-md-6"><em>col-md-6</em></hl-col>\n  </hl-row>\n\n  <hl-row class="show-col m-t-md dom-area" align="center" data-name="center">\n    <hl-col span="col-md-6"><em>col-md-6</em></hl-col>\n    <hl-col span="col-md-6"><em>col-md-6</em></hl-col>\n    <hl-col span="col-md-6"><em>col-md-6</em></hl-col>\n  </hl-row>\n\n  <hl-row class="show-col m-t-md dom-area" align="right" data-name="right">\n    <hl-col span="col-md-6"><em>col-md-6</em></hl-col>\n    <hl-col span="col-md-6"><em>col-md-6</em></hl-col>\n    <hl-col span="col-md-6"><em>col-md-6</em></hl-col>\n  </hl-row>\n\n  <hl-row class="show-col m-t-md dom-area" align="around" data-name="around">\n    <hl-col span="col-md-6"><em>col-md-6</em></hl-col>\n    <hl-col span="col-md-6"><em>col-md-6</em></hl-col>\n    <hl-col span="col-md-6"><em>col-md-6</em></hl-col>\n  </hl-row>\n\n  <hl-row class="show-col m-t-md dom-area" align="between" data-name="between">\n    <hl-col span="col-md-6"><em>col-md-6</em></hl-col>\n    <hl-col span="col-md-6"><em>col-md-6</em></hl-col>\n    <hl-col span="col-md-6"><em>col-md-6</em></hl-col>\n  </hl-row>\n</template>\n')],-1),H=u("h2",{id:"zong-xiang-dui-qi"},[u("a",{class:"header-anchor",href:"#zong-xiang-dui-qi"}),i(" 纵向对齐")],-1),I=u("p",null,[i("为 "),u("code",null,"align"),i(" 属性指定 "),u("code",null,"top"),i(" , "),u("code",null,"middle"),i(" , "),u("code",null,"bottom"),i(" 即可改变子元素的纵向排列方式。")],-1),L=u("pre",null,[u("code",{class:"html"},'<template>\n  <hl-row gap="var(--lg)">\n    <hl-col span="col">\n      <hl-row class="show-col bg-stripes" align="top" style="height: 20vh">\n        <hl-col span="col"><em>col</em></hl-col>\n        <hl-col span="col"><em>col</em></hl-col>\n      </hl-row>\n    </hl-col>\n    <hl-col span="col">\n      <hl-row class="show-col bg-stripes" align="middle" style="height: 20vh">\n        <hl-col span="col"><em>col</em></hl-col>\n        <hl-col span="col"><em>col</em></hl-col>\n      </hl-row>\n    </hl-col>\n    <hl-col span="col">\n      <hl-row class="show-col bg-stripes" align="bottom" style="height: 20vh">\n        <hl-col span="col"><em>col</em></hl-col>\n        <hl-col span="col"><em>col</em></hl-col>\n      </hl-row>\n    </hl-col>\n  </hl-row>\n</template>\n')],-1),R=u("h2",{id:"grid-zi-dong-wang-ge-bu-ju"},[u("a",{class:"header-anchor",href:"#grid-zi-dong-wang-ge-bu-ju"}),i(" Grid 自动网格布局")],-1),T=u("p",null,"网格布局（Grid）是目前最强大的 CSS 布局方案。",-1),J=u("div",null,[u("p",null,[i("同样，"),u("code",null,"count-*-*"),i(" 也支持相同的响应式尺寸，例如： "),u("code",null,"count-xl-3"),i(",")])],-1),K=u("pre",null,[u("code",{class:"html"},'<template>\n  <hl-row layout="grid" count="count-xl-3 count-md-2" gap="var(--md)" class="show-col">\n    <hl-col span="col"><em>1</em></hl-col>\n    <hl-col span="col"><em>2</em></hl-col>\n    <hl-col span="col"><em>3</em></hl-col>\n    <hl-col span="col"><em>4</em></hl-col>\n    <hl-col span="col"><em>5</em></hl-col>\n    <hl-col span="col"><em>6</em></hl-col>\n    <hl-col span="col"><em>7</em></hl-col>\n    <hl-col span="col"><em>8</em></hl-col>\n    <hl-col span="col"><em>9</em></hl-col>\n  </hl-row>\n</template>\n')],-1),M=u("h3",{id:"pai-lie-shun-xu"},[u("a",{class:"header-anchor",href:"#pai-lie-shun-xu"}),i(" 排列顺序")],-1),Q=u("p",null,[u("code",null,"dir"),i(" 属性可以设置网格的排列顺序，例如 "),u("code",null,'dir="vertical"')],-1),W=u("div",null,[u("p",null,[i("dir 支持的参数有： 横向排序 "),u("code",null,"vertical"),i(" 和 纵向排序 "),u("code",null,"horizontal")])],-1),Z=u("pre",null,[u("code",{class:"html"},'<template>\n  <hl-row layout="grid" count="count-xl-3 count-md-4" dir="horizontal" gap="var(--md)" class="show-col">\n    <hl-col span="col"><em>1</em></hl-col>\n    <hl-col span="col"><em>2</em></hl-col>\n    <hl-col span="col"><em>3</em></hl-col>\n    <hl-col span="col"><em>4</em></hl-col>\n    <hl-col span="col"><em>5</em></hl-col>\n    <hl-col span="col"><em>6</em></hl-col>\n    <hl-col span="col"><em>7</em></hl-col>\n    <hl-col span="col"><em>8</em></hl-col>\n    <hl-col span="col"><em>9</em></hl-col>\n  </hl-row>\n</template>\n')],-1),$=u("h3",{id:"kua-du-she-zhi"},[u("a",{class:"header-anchor",href:"#kua-du-she-zhi"}),i(" 跨度设置")],-1),ll=u("p",null,[u("code",null,"<hl-col>"),i(" 的 "),u("code",null,"span"),i(" 属性，支持传入跨度例如："),u("code",null,".grid-col-span-*"),i("，同时也支持传入多个响应式跨度标签")],-1),el=u("div",null,[u("p",null,[i("可以设置跨行"),u("code",null,".grid-row-span-*"),i("和跨列"),u("code",null,".grid-col-span-*"),i("也允许同时设置它们。同时跨度类也支持响应尺寸标签，例如 "),u("code",null,"grid-row-span-lg-*"),i("或"),u("code",null,"grid-col-span-lg-*")])],-1),ol=u("pre",null,[u("code",{class:"html"},'<template>\n  <hl-row layout="grid" count="count-3" dir="vertical" gap="var(--md)" class="show-col">\n    <hl-col span="col grid-col-span-3"><em>1</em></hl-col>\n    <hl-col span="col"><em>2</em></hl-col>\n    <hl-col span="col grid-row-span-lg-1 grid-row-span-xl-2"><em>3</em></hl-col>\n    <hl-col span="col"><em>4</em></hl-col>\n    <hl-col span="col"><em>5</em></hl-col>\n    <hl-col span="col"><em>6</em></hl-col>\n  </hl-row>\n\n  <br />\n  <br />\n  <p>跨度类与 <code>.col-*`</code> 类似，但<code>.col-*</code> 是根据24栅格来占比的，而跨度类是基于 <code>hl-row</code> 的 <code>count</code> 属性来占比的。</p>\n  <p>比如：当 <code>count="count-3"</code> 时 <code>.grid-col-span-3</code> 即为 3/3， <code>.grid-col-span-1</code> 即为 1/3。</p>\n</template>\n')],-1),nl=u("h2",{id:"flow-zi-dong-liu-bu-ju"},[u("a",{class:"header-anchor",href:"#flow-zi-dong-liu-bu-ju"}),i(" Flow 自动流布局")],-1),cl=u("p",null,"流布局能够自动根据可用的空间插入元素。通常用于展现瀑布流的布局方案。",-1),tl=u("div",null,[u("p",null,[u("code",null,"flow"),i(" 属性能够创建瀑布流式布局。 "),u("code",null,"count"),i(" 表示列数，可以设置成数字或者使用断点字符串设置。")])],-1),al=u("pre",null,[u("code",{class:"html"},'<template>\n  <hl-row layout="flow" count="count-lg-2 count-xl-3 count-xxl-4" gap="var(--md)" class="show-col">\n    <hl-col span="col" style="height: 300px;"><em>col1</em></hl-col>\n    <hl-col span="col" style="height: 200px;"><em>col2</em></hl-col>\n    <hl-col span="col" style="height: 120px;"><em>col3</em></hl-col>\n    <hl-col span="col" style="height: 380px;"><em>col4</em></hl-col>\n    <hl-col span="col" style="height: 240px;"><em>col5</em></hl-col>\n    <hl-col span="col" style="height: 260px;"><em>col6</em></hl-col>\n    <hl-col span="col" style="height: 380px;"><em>col7</em></hl-col>\n    <hl-col span="col" style="height: 120px;"><em>col8</em></hl-col>\n  </hl-row>\n</template>\n')],-1),dl=p('<h2 id="row-attributes"><a class="header-anchor" href="#row-attributes"></a> Row Attributes</h2><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>align</td><td>栅格的排列方式</td><td>string</td><td>top/middle/bottom/left/center/right/around/between</td><td>-</td></tr><tr><td>layout</td><td>自动布局类型</td><td>string</td><td>flow / grid</td><td>-</td></tr><tr><td>count</td><td>自动布局列数</td><td>string/number</td><td></td><td>1</td></tr><tr><td>gap</td><td>同时设置col 列的横向和纵向间距</td><td>string</td><td>规范化尺寸/自定义数值</td><td>-</td></tr><tr><td>gap-x</td><td>col 列的横向间距</td><td>string</td><td>规范化尺寸/自定义数值</td><td>-</td></tr><tr><td>gap-y</td><td>col 列的纵向间距</td><td>string</td><td>规范化尺寸/自定义数值</td><td>-</td></tr><tr><td>dir</td><td>自动布局的排列方向</td><td>string</td><td>vertical / horizontal</td><td>vertical</td></tr></tbody></table><h2 id="col-attributes"><a class="header-anchor" href="#col-attributes"></a> Col Attributes</h2><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>span</td><td>col 占据的格数</td><td>number/string</td><td>—</td><td></td></tr><tr><td>offset</td><td>col 偏移的格数</td><td>number/string</td><td>—</td><td></td></tr><tr><td>none</td><td>auto</td><td>number/object (例如： .col)</td><td>—</td><td>—</td></tr><tr><td>sm</td><td><code>≥640px</code> 响应式栅格数或者栅格属性对象</td><td>number/object (例如： .col-sm-)</td><td>—</td><td>—</td></tr><tr><td>md</td><td><code>≥768px</code> 响应式栅格数或者栅格属性对象</td><td>number/object (例如： .col-md-)</td><td>—</td><td>—</td></tr><tr><td>lg</td><td><code>≥1024px</code> 响应式栅格数或者栅格属性对象</td><td>number/object (例如： .col-lg-)</td><td>—</td><td>—</td></tr><tr><td>xl</td><td><code>≥1280px</code> 响应式栅格数或者栅格属性对象</td><td>number/object (例如： .col-xl-)</td><td>—</td><td>—</td></tr><tr><td>xxl</td><td><code>≥1536px</code> 响应式栅格数或者栅格属性对象</td><td>number/object (例如： .col-xxl-)</td><td>—</td><td>—</td></tr></tbody></table>',4);var ml=f(g,[["render",function(l,e,o,n,c,t){const r=a("hl-demo0"),p=a("demo-block"),i=a("hl-demo1"),f=a("hl-demo2"),g=a("hl-demo3"),ml=a("hl-demo4"),ul=a("hl-demo5"),hl=a("hl-demo6"),sl=a("hl-demo7"),rl=a("hl-demo8"),pl=a("hl-demo9"),il=a("hl-demo10"),fl=a("right-nav");return d(),m("section",v,[u("div",w,[_,h(p,null,{source:s((()=>[h(r)])),highlight:s((()=>[b])),default:s((()=>[x])),_:1}),y,k,h(p,null,{source:s((()=>[h(i)])),highlight:s((()=>[j])),default:s((()=>[V])),_:1}),C,N,h(p,null,{source:s((()=>[h(f)])),highlight:s((()=>[E])),default:s((()=>[B])),_:1}),z,q,h(p,null,{source:s((()=>[h(g)])),highlight:s((()=>[Y])),default:s((()=>[X])),_:1}),F,O,h(p,null,{source:s((()=>[h(ml)])),highlight:s((()=>[P])),default:s((()=>[G])),_:1}),S,U,h(p,null,{source:s((()=>[h(ul)])),highlight:s((()=>[D])),default:s((()=>[A])),_:1}),H,I,h(p,null,{source:s((()=>[h(hl)])),highlight:s((()=>[L])),_:1}),R,T,h(p,null,{source:s((()=>[h(sl)])),highlight:s((()=>[K])),default:s((()=>[J])),_:1}),M,Q,h(p,null,{source:s((()=>[h(rl)])),highlight:s((()=>[Z])),default:s((()=>[W])),_:1}),$,ll,h(p,null,{source:s((()=>[h(pl)])),highlight:s((()=>[ol])),default:s((()=>[el])),_:1}),nl,cl,h(p,null,{source:s((()=>[h(il)])),highlight:s((()=>[al])),default:s((()=>[tl])),_:1}),dl]),h(fl)])}]]);export{ml as default};
