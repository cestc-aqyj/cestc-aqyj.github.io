var t=Object.defineProperty,e=Object.getOwnPropertySymbols,d=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable,l=(e,d,a)=>d in e?t(e,d,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[d]=a,n=(t,n)=>{for(var r in n||(n={}))d.call(n,r)&&l(t,r,n[r]);if(e)for(var r of e(n))a.call(n,r)&&l(t,r,n[r]);return t};import{H as r,o,C as c,D as s,v as u,P as i,at as h,_ as p,as as m}from"./vue.69b6befa.js";import{_ as f}from"./index.6da685a4.js";import"./hongluan.17b69477.js";import"./highlight.5ad4a187.js";import"./hongluan-icons.f9afdbe4.js";const v={name:"component-doc",components:{"hl-demo0":function(){const{createElementVNode:t,resolveComponent:e,createVNode:d,withCtx:a,openBlock:l,createBlock:r}=h,o=t("p",null,"默认",-1),c=t("p",null,"带快捷选项",-1),s=t("p",null,"设置默认时间",-1);const{defineComponent:u,ref:i}=h,p=u({setup(){const t=[{text:"今天",value:new Date},{text:"昨天",value:(()=>{const t=new Date;return t.setTime(t.getTime()-864e5),t})()},{text:"一周前",value:(()=>{const t=new Date;return t.setTime(t.getTime()-6048e5),t})()}],e=new Date(2e3,1,1,12,0,0);return{shortcuts:t,value1:i(""),value2:i(""),value3:i(""),defaultTime:e}}});return n({render:function(t,n){const u=e("hl-date-picker"),i=e("hl-col"),h=e("hl-row");return l(),r(h,{gap:"var(--lg)"},{default:a((()=>[d(i,{span:"col-lg-8"},{default:a((()=>[o,d(u,{modelValue:t.value1,"onUpdate:modelValue":n[0]||(n[0]=e=>t.value1=e),type:"datetime",placeholder:"选择日期时间",block:"",fill:""},null,8,["modelValue"])])),_:1}),d(i,{span:"col-lg-8"},{default:a((()=>[c,d(u,{modelValue:t.value2,"onUpdate:modelValue":n[1]||(n[1]=e=>t.value2=e),type:"datetime",placeholder:"选择日期时间",shortcuts:t.shortcuts,block:""},null,8,["modelValue","shortcuts"])])),_:1}),d(i,{span:"col-lg-8"},{default:a((()=>[s,d(u,{modelValue:t.value3,"onUpdate:modelValue":n[2]||(n[2]=e=>t.value3=e),type:"datetime",placeholder:"选择日期时间","default-time":t.defaultTime,block:""},null,8,["modelValue","default-time"])])),_:1})])),_:1})}},p)}(),"hl-demo1":function(){const{createElementVNode:t,resolveComponent:e,createVNode:d,withCtx:a,openBlock:l,createBlock:r}=h,o=t("p",null,"默认",-1),c=t("p",null,"带快捷选项",-1);const{defineComponent:s,ref:u}=h,i=s({setup:()=>({shortcuts:[{text:"最近一周",value:()=>{const t=new Date,e=new Date;return e.setTime(e.getTime()-6048e5),[e,t]}},{text:"最近一个月",value:()=>{const t=new Date,e=new Date;return e.setTime(e.getTime()-2592e6),[e,t]}},{text:"最近三个月",value:()=>{const t=new Date,e=new Date;return e.setTime(e.getTime()-7776e6),[e,t]}}],value1:u([new Date(2e3,10,10,10,10),new Date(2e3,10,11,10,10)]),value2:u("")})});return n({render:function(t,n){const s=e("hl-date-picker"),u=e("hl-col"),i=e("hl-row");return l(),r(i,{align:"center",gap:"var(--lg)"},{default:a((()=>[d(u,{span:"col"},{default:a((()=>[o,d(s,{modelValue:t.value1,"onUpdate:modelValue":n[0]||(n[0]=e=>t.value1=e),type:"datetimerange","range-separator":"至","start-placeholder":"开始日期","end-placeholder":"结束日期",fill:""},null,8,["modelValue"])])),_:1}),d(u,{span:"col"},{default:a((()=>[c,d(s,{modelValue:t.value2,"onUpdate:modelValue":n[1]||(n[1]=e=>t.value2=e),type:"datetimerange",shortcuts:t.shortcuts,"range-separator":"至","start-placeholder":"开始日期","end-placeholder":"结束日期"},null,8,["modelValue","shortcuts"])])),_:1})])),_:1})}},i)}(),"hl-demo2":function(){const{createElementVNode:t,resolveComponent:e,createVNode:d,withCtx:a,openBlock:l,createBlock:r}=h,o=t("p",null,"起始日期时刻为 12:00:00",-1),c=t("p",null,"起始日期时刻为 12:00:00，结束日期时刻为 08:00:00",-1);const{defineComponent:s,ref:u}=h,i=s({setup(){const t=[new Date(2e3,1,1,12,0,0)],e=[new Date(2e3,1,1,12,0,0),new Date(2e3,2,1,8,0,0)];return{value1:u(""),value2:u(""),defaultTime1:t,defaultTime2:e}}});return n({render:function(t,n){const s=e("hl-date-picker"),u=e("hl-col"),i=e("hl-row");return l(),r(i,{align:"center",gap:"var(--lg)"},{default:a((()=>[d(u,{span:"col"},{default:a((()=>[o,d(s,{modelValue:t.value1,"onUpdate:modelValue":n[0]||(n[0]=e=>t.value1=e),type:"datetimerange","start-placeholder":"开始日期","end-placeholder":"结束日期","default-time":t.defaultTime1,block:""},null,8,["modelValue","default-time"])])),_:1}),d(u,{span:"col"},{default:a((()=>[c,d(s,{modelValue:t.value2,"onUpdate:modelValue":n[1]||(n[1]=e=>t.value2=e),type:"datetimerange","start-placeholder":"开始日期","end-placeholder":"结束日期","default-time":t.defaultTime2,block:""},null,8,["modelValue","default-time"])])),_:1})])),_:1})}},i)}()}},g={class:"doc-main-content"},b={class:"doc-content"},w=s("h1",null,"DateTimePicker 日期时间选择器",-1),D=s("p",null,[p("为"),s("code",null,"hl-date-picker"),p("设置"),s("code",null,"type"),p("属性为"),s("code",null,"datetime"),p("，即可在同一个选择器里同时进行日期和时间的选择。快捷选项的使用方法与 Date Picker 相同。")],-1),k=s("div",null,[s("p",null,"DateTimePicker 由 时间 和 日期 选择器派生而来，相关属性可参考文档说明。")],-1),T=s("pre",null,[s("code",{class:"html"},'<template>\n  <hl-row gap="var(--lg)">\n    <hl-col span="col-lg-8">\n      <p>默认</p>\n      <hl-date-picker v-model="value1" type="datetime" placeholder="选择日期时间" block fill></hl-date-picker>\n    </hl-col>\n    <hl-col span="col-lg-8">\n      <p>带快捷选项</p>\n      <hl-date-picker v-model="value2" type="datetime" placeholder="选择日期时间" :shortcuts="shortcuts" block></hl-date-picker>\n    </hl-col>\n    <hl-col span="col-lg-8">\n      <p>设置默认时间</p>\n      <hl-date-picker v-model="value3" type="datetime" placeholder="选择日期时间" :default-time="defaultTime" block></hl-date-picker>\n    </hl-col>\n  </hl-row>\n</template>\n\n<script>\n  import { defineComponent, ref } from \'vue\'\n  export default defineComponent({\n    setup() {\n      const shortcuts = [\n        {\n          text: \'今天\',\n          value: new Date(),\n        },\n        {\n          text: \'昨天\',\n          value: (() => {\n            const date = new Date()\n            date.setTime(date.getTime() - 3600 * 1000 * 24)\n            return date\n          })(),\n        },\n        {\n          text: \'一周前\',\n          value: (() => {\n            const date = new Date()\n            date.setTime(date.getTime() - 3600 * 1000 * 24 * 7)\n            return date\n          })(),\n        },\n      ]\n      const defaultTime = new Date(2000, 1, 1, 12, 0, 0)\n      return {\n        shortcuts,\n        value1: ref(\'\'),\n        value2: ref(\'\'),\n        value3: ref(\'\'),\n        defaultTime, // \'12:00:00\'\n      }\n    },\n  })\n<\/script>\n')],-1),y=s("h2",{id:"ri-qi-he-shi-jian-fan-wei"},[s("a",{class:"header-anchor",href:"#ri-qi-he-shi-jian-fan-wei"}),p(" 日期和时间范围")],-1),V=s("div",null,[s("p",null,[p("设置"),s("code",null,"type"),p("为"),s("code",null,"datetimerange"),p("即可选择日期和时间范围")])],-1),x=s("pre",null,[s("code",{class:"html"},'<template>\n  <hl-row align="center" gap="var(--lg)">\n    <hl-col span="col">\n      <p>默认</p>\n      <hl-date-picker v-model="value1" type="datetimerange" range-separator="至" start-placeholder="开始日期" end-placeholder="结束日期" fill> </hl-date-picker>\n    </hl-col>\n    <hl-col span="col">\n      <p>带快捷选项</p>\n      <hl-date-picker v-model="value2" type="datetimerange" :shortcuts="shortcuts" range-separator="至" start-placeholder="开始日期" end-placeholder="结束日期"> </hl-date-picker>\n    </hl-col>\n  </hl-row>\n</template>\n\n<script>\n  import { defineComponent, ref } from \'vue\'\n  export default defineComponent({\n    setup() {\n      const shortcuts = [\n        {\n          text: \'最近一周\',\n          value: () => {\n            const end = new Date()\n            const start = new Date()\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7)\n            return [start, end]\n          },\n        },\n        {\n          text: \'最近一个月\',\n          value: () => {\n            const end = new Date()\n            const start = new Date()\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30)\n            return [start, end]\n          },\n        },\n        {\n          text: \'最近三个月\',\n          value: () => {\n            const end = new Date()\n            const start = new Date()\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90)\n            return [start, end]\n          },\n        },\n      ]\n      return {\n        shortcuts,\n        value1: ref([new Date(2000, 10, 10, 10, 10), new Date(2000, 10, 11, 10, 10)]),\n        value2: ref(\'\'),\n      }\n    },\n  })\n<\/script>\n')],-1),C=s("h2",{id:"mo-ren-de-qi-shi-yu-jie-shu-shi-ke"},[s("a",{class:"header-anchor",href:"#mo-ren-de-qi-shi-yu-jie-shu-shi-ke"}),p(" 默认的起始与结束时刻")],-1),_=s("div",null,[s("p",null,[p("使用"),s("code",null,"datetimerange"),p("进行范围选择时，在日期选择面板中选定起始与结束的日期，默认会使用该日期的"),s("code",null,"00:00:00"),p("作为起始与结束的时刻；通过选项"),s("code",null,"default-time"),p("可以控制选中起始与结束日期时所使用的具体时刻。"),s("code",null,"default-time"),p("接受一个数组，其中第一项控制起始日期的具体时刻，第二项控制结束日期的具体时刻。")])],-1),j=s("pre",null,[s("code",{class:"html"},'<template>\n  <hl-row align="center" gap="var(--lg)">\n    <hl-col span="col">\n      <p>起始日期时刻为 12:00:00</p>\n      <hl-date-picker v-model="value1" type="datetimerange" start-placeholder="开始日期" end-placeholder="结束日期" :default-time="defaultTime1" block> </hl-date-picker>\n    </hl-col>\n    <hl-col span="col">\n      <p>起始日期时刻为 12:00:00，结束日期时刻为 08:00:00</p>\n      <hl-date-picker v-model="value2" type="datetimerange" start-placeholder="开始日期" end-placeholder="结束日期" :default-time="defaultTime2" block> </hl-date-picker>\n    </hl-col>\n  </hl-row>\n</template>\n\n<script>\n  import { defineComponent, ref } from \'vue\'\n  export default defineComponent({\n    setup() {\n      const defaultTime1 = [new Date(2000, 1, 1, 12, 0, 0)] // \'12:00:00\'\n      const defaultTime2 = [new Date(2000, 1, 1, 12, 0, 0), new Date(2000, 2, 1, 8, 0, 0)] // \'12:00:00\', \'08:00:00\'\n      return {\n        value1: ref(\'\'),\n        value2: ref(\'\'),\n        defaultTime1,\n        defaultTime2,\n      }\n    },\n  })\n<\/script>\n')],-1),N=m('<h2 id="attributes"><a class="header-anchor" href="#attributes"></a> Attributes</h2><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>model-value / v-model</td><td>绑定值</td><td>date(DateTimePicker) / array(DateTimeRangePicker)</td><td>—</td><td>—</td></tr><tr><td>readonly</td><td>完全只读</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>disabled</td><td>禁用</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>editable</td><td>文本框可输入</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>clearable</td><td>是否显示清除按钮</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>size</td><td>输入框尺寸</td><td>string</td><td>sm/lg</td><td>large</td></tr><tr><td>placeholder</td><td>非范围选择时的占位内容</td><td>string</td><td>—</td><td>—</td></tr><tr><td>start-placeholder</td><td>范围选择时开始日期的占位内容</td><td>string</td><td>—</td><td>—</td></tr><tr><td>end-placeholder</td><td>范围选择时结束日期的占位内容</td><td>string</td><td>—</td><td>—</td></tr><tr><td>time-arrow-control</td><td>是否使用箭头进行时间选择</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>type</td><td>显示类型</td><td>string</td><td>year/month/date/week/ datetime/datetimerange/daterange</td><td>date</td></tr><tr><td>format</td><td>显示在输入框中的格式</td><td>string</td><td>见<a href="#/zh-CN/component/date-picker#ri-qi-ge-shi">日期格式</a></td><td>YYYY-MM-DD HH:mm:ss</td></tr><tr><td>value-format</td><td>可选，绑定值的格式。不指定则绑定值为 Date 对象</td><td>string</td><td>见<a href="#/zh-CN/component/date-picker#ri-qi-ge-shi">日期格式</a></td><td>—</td></tr><tr><td>popper-class</td><td>DateTimePicker 下拉框的类名</td><td>string</td><td>—</td><td>—</td></tr><tr><td>range-separator</td><td>选择范围时的分隔符</td><td>string</td><td>-</td><td>&#39;-&#39;</td></tr><tr><td>default-value</td><td>可选，选择器打开时默认显示的时间</td><td>Date</td><td>可被<code>new Date()</code>解析</td><td>—</td></tr><tr><td>default-time</td><td>选中日期后的默认具体时刻</td><td>Date / 范围选择时：Date[]</td><td>非范围选择时：Date 对象；范围选择时：数组，长度为 2，每项值为 Date 对象，第一项指定开始日期的时刻，第二项指定结束日期的时刻。不指定会使用时刻 <code>00:00:00</code></td><td>—</td></tr><tr><td>name</td><td>原生属性</td><td>string</td><td>—</td><td>—</td></tr><tr><td>fill</td><td>填充样式</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>unlink-panels</td><td>在范围选择器里取消两个日期面板之间的联动</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>shortcuts</td><td>设置快捷选项，需要传入数组对象</td><td>object[{ text: string, value: date / function }]</td><td>—</td><td>—</td></tr><tr><td>disabled-date</td><td>设置禁用状态，参数为当前日期，要求返回 Boolean</td><td>Function</td><td>—</td><td>—</td></tr><tr><td>cell-class-name</td><td>设置日期的 className</td><td>Function(Date)</td><td>—</td><td>—</td></tr></tbody></table><h2 id="slots"><a class="header-anchor" href="#slots"></a> Slots</h2><table><thead><tr><th>方法名</th><th>说明</th><th>参数</th></tr></thead><tbody><tr><td>icon</td><td>自定义图标</td><td>—</td></tr></tbody></table><h2 id="events"><a class="header-anchor" href="#events"></a> Events</h2><table><thead><tr><th>Event Name</th><th>Description</th><th>Parameters</th></tr></thead><tbody><tr><td>change</td><td>用户确认选定的值时触发</td><td>组件绑定值</td></tr><tr><td>blur</td><td>当 input 失去焦点时触发</td><td>组件实例</td></tr><tr><td>focus</td><td>当 input 获得焦点时触发</td><td>组件实例</td></tr><tr><td>calendar-change</td><td>选中日历日期后会执行的回调，只有当 <code>datetimerange</code> 才生效</td><td>[Date, Date]</td></tr></tbody></table><h2 id="methods"><a class="header-anchor" href="#methods"></a> Methods</h2><table><thead><tr><th>方法名</th><th>说明</th><th>参数</th></tr></thead><tbody><tr><td>focus</td><td>使 input 获取焦点</td><td>—</td></tr></tbody></table><h2 id="slots-2"><a class="header-anchor" href="#slots-2"></a> Slots</h2><table><thead><tr><th>Name</th><th>说明</th></tr></thead><tbody><tr><td>range-separator</td><td>自定义分隔符</td></tr></tbody></table>',10);var P=f(v,[["render",function(t,e,d,a,l,n){const h=r("hl-demo0"),p=r("demo-block"),m=r("hl-demo1"),f=r("hl-demo2"),v=r("right-nav");return o(),c("section",g,[s("div",b,[w,D,u(p,null,{source:i((()=>[u(h)])),highlight:i((()=>[T])),default:i((()=>[k])),_:1}),y,u(p,null,{source:i((()=>[u(m)])),highlight:i((()=>[x])),default:i((()=>[V])),_:1}),C,u(p,null,{source:i((()=>[u(f)])),highlight:i((()=>[j])),default:i((()=>[_])),_:1}),N]),u(v)])}]]);export{P as default};
