import{H as s,o as a,C as n,v as p,as as l}from"./vue.69b6befa.js";import{_ as e}from"./index.6da685a4.js";import"./hongluan.17b69477.js";import"./highlight.5ad4a187.js";import"./hongluan-icons.f9afdbe4.js";const c={},t={class:"doc-main-content"},o=l('<div class="doc-content"><h1>快速上手</h1><p>本节将介绍如何在项目中使用 鸿鸾UI。</p><h2 id="yin-ru-hongluan-ui"><a class="header-anchor" href="#yin-ru-hongluan-ui"></a> 引入 Hongluan UI</h2><p>你可以引入整个 Hongluan UI，或是根据需要仅引入部分组件。我们先介绍如何引入完整的 Hongluan UI Library。</p><h2 id="wan-zheng-yin-ru"><a class="header-anchor" href="#wan-zheng-yin-ru"></a> 完整引入</h2><p>在 main.js 中写入以下内容：</p><pre><code class="hljs language-javascript"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n<span class="hljs-keyword">import</span> HongluanUI <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;hongluan-ui&#39;</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-string">&#39;hongluan-ui/dist/index.css&#39;</span>;\n<span class="hljs-comment">// import &#39;hongluan-ui/dist/index-dark.css&#39;;</span>\n<span class="hljs-keyword">import</span> App <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;./App.vue&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = createApp(App)\napp.use(HongluanUI)\napp.mount(<span class="hljs-string">&#39;#app&#39;</span>)\n</code></pre><p>以上代码便完成了 Hongluan UI 的引入。需要注意的是，样式文件需要单独引入。</p><h2 id="an-xu-yin-ru-zu-jian"><a class="header-anchor" href="#an-xu-yin-ru-zu-jian"></a> 按需引入组件</h2><p><code>HongluanUI</code>的 JS 代码默认支持基于 ES modules 的 <a href="https://webpack.js.org/guides/tree-shaking/">摇树 tree shaking</a>。</p><blockquote><p>App.vue</p></blockquote><pre><code class="hljs language-html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">hl-button</span>&gt;</span>\n    Hello hl-button\n  <span class="hljs-tag">&lt;/<span class="hljs-name">hl-button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n<span class="hljs-keyword">import</span> { defineComponent } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n<span class="hljs-keyword">import</span> { HlButton } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;hongluan-ui&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> defineComponent({\n  <span class="hljs-attr">name</span>: <span class="hljs-string">&#39;app&#39;</span>\n  <span class="hljs-attr">components</span>: {\n    HlButton,\n  },\n})\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</code></pre><h2 id="yang-shi-de-yin-ru"><a class="header-anchor" href="#yang-shi-de-yin-ru"></a> 样式的引入</h2><p>我们<strong>强烈建议直接引入全部的样式文件</strong>，虽然这看起来会增大整个应用的体积，但这样做可以避免引入额外的打包工具插件（减少负担），你还可以通过 <a href="https://www.cloudflare.com/learning/cdn/what-is-a-cdn/">CDN</a> 的方式来加载样式文件，从而使得你的应用加载更快。</p><p>通过 JS 的方式引入</p><pre><code class="hljs language-typescript"><span class="hljs-keyword">import</span> <span class="hljs-string">&#39;hongluan-ui/dist/index.css&#39;</span>\n<span class="hljs-comment">// import &#39;hongluan-ui/dist/index-dark.css&#39;</span>\n</code></pre><p>通过 HTML 的头文件引入</p><pre><code class="hljs language-html"><span class="hljs-comment">&lt;!-- index.html --&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;//unpkg.com/hongluan-ui/dist/index.css&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span>\n</code></pre><h3 id="an-xu-jia-zai-yang-shi-vue-cli-js"><a class="header-anchor" href="#an-xu-jia-zai-yang-shi-vue-cli-js"></a> 按需加载样式：Vue CLI（JS）</h3><p>借助 <a href="https://github.com/ant-design/babel-plugin-import">babel-plugin-import</a>，我们可以只引入需要的组件，以达到减小项目体积的目的。</p><p>首先，安装 babel-plugin-import:</p><pre><code class="hljs language-bash">$ npm install babel-plugin-import -D\n<span class="hljs-comment"># 或者</span>\n$ yarn add babel-plugin-import -D\n</code></pre><p>然后，将 babel.config.js 修改为：</p><h4 id="yin-ru-.scss-yang-shi"><a class="header-anchor" href="#yin-ru-.scss-yang-shi"></a> 引入 <code>.scss</code> 样式</h4><p>请确保已经安装了 <code>sass</code> 和 <code>sass-loader</code> 依赖并将 <code>hongluan-ui/theme/scss/base.scss</code> 文件在入口文件中引入</p><pre><code class="hljs language-js"><span class="hljs-built_in">module</span>.exports = {\n  <span class="hljs-attr">plugins</span>: [\n    [\n      <span class="hljs-string">&quot;import&quot;</span>,\n      {\n        <span class="hljs-attr">libraryName</span>: <span class="hljs-string">&#39;hongluan-ui&#39;</span>,\n        <span class="hljs-attr">customStyleName</span>: <span class="hljs-function">(<span class="hljs-params">name</span>) =&gt;</span> {\n          name = name.slice(<span class="hljs-number">3</span>)\n          <span class="hljs-keyword">return</span> <span class="hljs-string">`hongluan-ui/theme/scss/<span class="hljs-subst">${name}</span>.scss`</span>;\n        },\n      },\n    ],\n  ],\n};\n</code></pre><h4 id="huo-zhe-yin-ru-.css-yang-shi"><a class="header-anchor" href="#huo-zhe-yin-ru-.css-yang-shi"></a> 或者引入 <code>.css</code> 样式</h4><pre><code class="hljs language-js"><span class="hljs-built_in">module</span>.exports = {\n  <span class="hljs-attr">plugins</span>: [\n    [\n      <span class="hljs-string">&quot;import&quot;</span>,\n      {\n        <span class="hljs-attr">libraryName</span>: <span class="hljs-string">&#39;hongluan-ui&#39;</span>,\n        <span class="hljs-attr">customStyleName</span>: <span class="hljs-function">(<span class="hljs-params">name</span>) =&gt;</span> {\n          <span class="hljs-keyword">return</span> <span class="hljs-string">`hongluan-ui/theme/<span class="hljs-subst">${name}</span>.css`</span>;\n        },\n      },\n    ],\n  ],\n};\n</code></pre><h3 id="an-xu-jia-zai-yang-shi-vue-cli-ts"><a class="header-anchor" href="#an-xu-jia-zai-yang-shi-vue-cli-ts"></a> 按需加载样式：Vue CLI（TS）</h3><p>借助 <a href="https://github.com/Brooooooklyn/ts-import-plugin">ts-import-plugin</a>，我们可以只引入需要的组件，以达到减小项目体积的目的。</p><p>具体安装过程以及使用请参考官方文档，这里不在赘述，下面是vue.config.js代码配置示例:</p><pre><code class="hljs language-js">chainWebpack: <span class="hljs-function"><span class="hljs-params">config</span> =&gt;</span> {\n  config.module\n    .rule(<span class="hljs-string">&#39;ts&#39;</span>)\n    .use(<span class="hljs-string">&#39;ts-loader&#39;</span>)\n      .loader(<span class="hljs-string">&#39;ts-loader&#39;</span>)\n      .tap(<span class="hljs-function"><span class="hljs-params">options</span> =&gt;</span> {\n        <span class="hljs-keyword">return</span> {\n          ...options,\n          <span class="hljs-attr">getCustomTransformers</span>: <span class="hljs-function">() =&gt;</span> {\n            <span class="hljs-keyword">return</span> {\n              <span class="hljs-attr">before</span>: [tsImportPluginFactory({\n                <span class="hljs-attr">libraryName</span>: <span class="hljs-string">&#39;hongluan-ui&#39;</span>,\n                <span class="hljs-attr">style</span>: <span class="hljs-literal">true</span>\n              })]\n            }\n          },\n        }\n      })\n}\n</code></pre><h3 id="vite"><a class="header-anchor" href="#vite"></a> Vite</h3><p>首先，安装 <a href="https://github.com/anncwb/vite-plugin-style-import">vite-plugin-style-import</a>:</p><pre><code class="hljs language-bash">$ npm install vite-plugin-style-import -D\n<span class="hljs-comment">#或者</span>\n$ yarn add vite-plugin-style-import -D\n</code></pre><p>然后，将 vite.config.js 修改为：</p><h4 id="yin-ru-.scss-yang-shi-2"><a class="header-anchor" href="#yin-ru-.scss-yang-shi-2"></a> 引入 <code>.scss</code> 样式</h4><p>请确保已经安装了 <code>sass</code> 依赖并将 <code>hongluan-ui/theme/scss/base.scss</code> 文件在入口文件中引入</p><pre><code class="hljs language-js"><span class="hljs-keyword">import</span> { defineConfig } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vite&#39;</span>\n<span class="hljs-keyword">import</span> vue <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;@vitejs/plugin-vue&#39;</span>\n<span class="hljs-keyword">import</span> styleImport <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vite-plugin-style-import&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> defineConfig({\n  <span class="hljs-attr">plugins</span>: [\n    vue(),\n    styleImport({\n      <span class="hljs-attr">libs</span>: [{\n        <span class="hljs-attr">libraryName</span>: <span class="hljs-string">&#39;hongluan-ui&#39;</span>,\n        <span class="hljs-attr">esModule</span>: <span class="hljs-literal">true</span>,\n        <span class="hljs-attr">ensureStyleFile</span>: <span class="hljs-literal">true</span>,\n        <span class="hljs-attr">resolveStyle</span>: <span class="hljs-function">(<span class="hljs-params">name</span>) =&gt;</span> {\n          name = name.slice(<span class="hljs-number">3</span>)\n          <span class="hljs-keyword">return</span> <span class="hljs-string">`hongluan-ui/theme/scss/<span class="hljs-subst">${name}</span>.scss`</span>;\n        },\n        <span class="hljs-attr">resolveComponent</span>: <span class="hljs-function">(<span class="hljs-params">name</span>) =&gt;</span> {\n          <span class="hljs-keyword">return</span> <span class="hljs-string">`hongluan-ui/lib/<span class="hljs-subst">${name}</span>`</span>;\n        },\n      }]\n    })\n  ]\n})\n</code></pre><h4 id="huo-zhe-yin-ru-.css-yang-shi-2"><a class="header-anchor" href="#huo-zhe-yin-ru-.css-yang-shi-2"></a> 或者引入 <code>.css</code> 样式</h4><p>请确保 <code>hongluan-ui/theme/base.css</code> 文件在入口文件中引入</p><pre><code class="hljs language-js"><span class="hljs-keyword">import</span> { defineConfig } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vite&#39;</span>\n<span class="hljs-keyword">import</span> vue <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;@vitejs/plugin-vue&#39;</span>\n<span class="hljs-keyword">import</span> styleImport <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vite-plugin-style-import&#39;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> defineConfig({\n  <span class="hljs-attr">plugins</span>: [\n    vue(),\n    styleImport({\n      <span class="hljs-attr">libs</span>: [\n        {\n          <span class="hljs-attr">libraryName</span>: <span class="hljs-string">&#39;hongluan-ui&#39;</span>,\n          <span class="hljs-attr">esModule</span>: <span class="hljs-literal">true</span>,\n          <span class="hljs-attr">ensureStyleFile</span>: <span class="hljs-literal">true</span>,\n          <span class="hljs-attr">resolveStyle</span>: <span class="hljs-function">(<span class="hljs-params">name</span>) =&gt;</span> {\n            <span class="hljs-keyword">return</span> <span class="hljs-string">`hongluan-ui/theme/<span class="hljs-subst">${name}</span>.css`</span>;\n          },\n          <span class="hljs-attr">resolveComponent</span>: <span class="hljs-function">(<span class="hljs-params">name</span>) =&gt;</span> {\n            <span class="hljs-keyword">return</span> <span class="hljs-string">`hongluan-ui/lib/<span class="hljs-subst">${name}</span>`</span>;\n          },\n        }\n      ]\n    })\n  ]\n})\n</code></pre><p>接下来，如果你只希望引入部分组件，比如 Button 和 Select，那么需要在 main.js 中写入以下内容：</p><pre><code class="hljs language-javascript"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n<span class="hljs-keyword">import</span> { HlButton, HlSelect } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;hongluan-ui&#39;</span>;\n<span class="hljs-keyword">import</span> App <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;./App.vue&#39;</span>;\n<span class="hljs-comment">// 如果要使用.scss样式文件，则需要引入base.scss文件</span>\n<span class="hljs-comment">// import &#39;hongluan-ui/theme/scss/base.scss&#39;</span>\n\n<span class="hljs-comment">// 如果要使用.css样式文件，则需要引入base.css文件</span>\n<span class="hljs-comment">// import &#39;hongluan-ui/theme/base.css&#39;</span>\n\n<span class="hljs-keyword">const</span> app = createApp(App)\napp.component(HlButton.name, HlButton); <span class="hljs-comment">// 注意：此种引入方式下，name不带有前缀hl</span>\napp.component(HlSelect.name, HlSelect); <span class="hljs-comment">// 注意：此种引入方式下，name不带有前缀hl</span>\n\n<span class="hljs-comment">/* or\n * app.use(HlButton) // 注意：此种引入方式下，将带有前缀hl\n * app.use(HlSelect)\n */</span>\n\napp.mount(<span class="hljs-string">&#39;#app&#39;</span>)\n</code></pre><h2 id="quan-ju-pei-zhi"><a class="header-anchor" href="#quan-ju-pei-zhi"></a> 全局配置</h2><p>在引入 Hongluan UI 时，可以传入一个全局配置对象。该对象目前支持 <code>size</code> 与 <code>zIndex</code> 字段。<code>size(xs/sm/md/lg)</code> 用于改变组件的默认尺寸，<code>zIndex</code> 设置弹框的初始 z-index（默认值：2000）。按需引入 Hongluan UI 的方式，具体操作如下：</p><h4 id="wan-zheng-yin-ru-hongluan-ui"><a class="header-anchor" href="#wan-zheng-yin-ru-hongluan-ui"></a> 完整引入 Hongluan UI：</h4><pre><code class="hljs language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n<span class="hljs-keyword">import</span> HongluanUI <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;hongluan-ui&#39;</span>;\n<span class="hljs-keyword">import</span> App <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;./App.vue&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = createApp(App)\napp.use(HongluanUI, { <span class="hljs-attr">size</span>: <span class="hljs-string">&#39;sm&#39;</span>, <span class="hljs-attr">zIndex</span>: <span class="hljs-number">3000</span> });\n</code></pre><h4 id="an-xu-yin-ru-hongluan-ui"><a class="header-anchor" href="#an-xu-yin-ru-hongluan-ui"></a> 按需引入 Hongluan UI：</h4><pre><code class="hljs language-js"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n<span class="hljs-keyword">import</span> { HlButton } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;hongluan-ui&#39;</span>;\n<span class="hljs-keyword">import</span> App <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;./App.vue&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = createApp(App)\napp.config.globalProperties.$HL = option\napp.use(HlButton);\n</code></pre><p>按照以上设置，项目中所有拥有 <code>size</code> 属性的组件的默认尺寸均为 &#39;small&#39;，弹框的初始 z-index 为 3000。</p><h2 id="volar-support"><a class="header-anchor" href="#volar-support"></a> Volar support</h2><p>如实使用Volar， 请把 <code>compilerOptions.types</code> 添加到 <code>tsconfig.json</code>。</p><pre><code class="hljs language-json"><span class="hljs-comment">// tsconfig.json</span>\n{\n  <span class="hljs-attr">&quot;compilerOptions&quot;</span>: {\n    <span class="hljs-comment">// ...</span>\n    <span class="hljs-attr">&quot;types&quot;</span>: [<span class="hljs-string">&quot;hongluan-ui/global&quot;</span>]\n  }\n}\n</code></pre><h2 id="kai-shi-shi-yong"><a class="header-anchor" href="#kai-shi-shi-yong"></a> 开始使用</h2><p>至此，一个基于 Vue3 和 Hongluan UI 的开发环境已经搭建完毕，现在就可以编写代码了。</p><p>各个组件的使用方法请参阅它们各自的说明文档。</p></div>',1);var r=e(c,[["render",function(l,e){const c=s("right-nav");return a(),n("section",t,[o,p(c)])}]]);export{r as default};
