var n=Object.defineProperty,e=Object.getOwnPropertySymbols,t=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable,a=(e,t,l)=>t in e?n(e,t,{enumerable:!0,configurable:!0,writable:!0,value:l}):e[t]=l,o=(n,o)=>{for(var d in o||(o={}))t.call(o,d)&&a(n,d,o[d]);if(e)for(var d of e(o))l.call(o,d)&&a(n,d,o[d]);return n};import{H as d,o as s,C as r,D as i,v as c,P as p,at as u,_ as g,as as h}from"./vue.69b6befa.js";import{_ as m,H as b}from"./index.6da685a4.js";import"./hongluan.17b69477.js";import"./highlight.5ad4a187.js";import"./hongluan-icons.f9afdbe4.js";const f={name:"component-doc",components:{"hl-demo0":function(){const{resolveComponent:n,createVNode:e,resolveDirective:t,withCtx:l,withDirectives:a,openBlock:d,createBlock:s}=u;const{defineComponent:r,ref:i}=u,c=r({setup:()=>({tableData:i([{date:"2016-05-03",name:"王小虎",address:"上海市普陀区金沙江路 1518 弄"},{date:"2016-05-02",name:"王小虎",address:"上海市普陀区金沙江路 1518 弄"},{date:"2016-05-04",name:"王小虎",address:"上海市普陀区金沙江路 1518 弄"}]),loading:i(!0)})});return o({render:function(o,r){const i=n("hl-table-column"),c=n("hl-table"),p=t("loading");return a((d(),s(c,{data:o.tableData,style:{width:"100%"}},{default:l((()=>[e(i,{prop:"date",label:"日期",width:"180"}),e(i,{prop:"name",label:"姓名",width:"180"}),e(i,{prop:"address",label:"地址"})])),_:1},8,["data"])),[[p,o.loading]])}},c)}(),"hl-demo1":function(){const{resolveComponent:n,createVNode:e,resolveDirective:t,withCtx:l,withDirectives:a,Fragment:d,openBlock:s,createElementBlock:r}=u;const{defineComponent:i,ref:c}=u,p=i({setup:()=>({spinner:c({color:"red"}),tableData:c([{date:"2016-05-03",name:"王小虎",address:"上海市普陀区金沙江路 1518 弄"},{date:"2016-05-02",name:"王小虎",address:"上海市普陀区金沙江路 1518 弄"},{date:"2016-05-04",name:"王小虎",address:"上海市普陀区金沙江路 1518 弄"}]),loading:c(!0),svg:c('\n      <path class="path" d="\n        M 30 15\n        L 28 17\n        M 25.61 25.61\n        A 15 15, 0, 0, 1, 15 30\n        A 15 15, 0, 1, 1, 27.99 7.5\n        L 15 15\n      " style="stroke-width: 4px; fill: rgba(0, 0, 0, 0)"/>\n    ')})});return o({render:function(o,i){const c=n("hl-table-column"),p=n("hl-table"),u=t("loading");return s(),r(d,null,[a(e(p,{"loading-text":"拼命加载中","loading-spinner":"spinner","loading-background":"rgba(0, 0, 0, 0.8)",data:o.tableData,style:{width:"100%","margin-bottom":"10px"}},{default:l((()=>[e(c,{prop:"date",label:"日期",width:"180"}),e(c,{prop:"name",label:"姓名",width:"180"}),e(c,{prop:"address",label:"地址"})])),_:1},8,["data"]),[[u,o.loading]]),a(e(p,{"loading-svg":o.svg,class:"custom-loading-svg","loading-svg-view-box":"-10, -10, 50, 50",data:o.tableData,style:{width:"100%"}},{default:l((()=>[e(c,{prop:"date",label:"日期",width:"180"}),e(c,{prop:"name",label:"姓名",width:"180"}),e(c,{prop:"address",label:"地址"})])),_:1},8,["loading-svg","data"]),[[u,o.loading]])],64)}},p)}(),"hl-demo2":function(){const{createTextVNode:n,resolveComponent:e,resolveDirective:t,withCtx:l,createVNode:a,withDirectives:d,Fragment:s,openBlock:r,createElementBlock:i}=u,c=n(" 指令方式 "),p=n("      "),g=n(" 服务方式 ");const{defineComponent:h,ref:m}=u,{HlLoading:f}=b,v=h({setup(){const n=m(!1);return{fullscreenLoading:n,openFullScreen1:()=>{n.value=!0,setTimeout((()=>{n.value=!1}),2e3)},openFullScreen2:()=>{const n=f.service({lock:!0,text:"Loading",spinner:{size:"30px",color:"yellow"},background:"rgba(0, 0, 0, 0.7)"});setTimeout((()=>{n.close()}),2e3)}}}});return o({render:function(n,o){const u=e("hl-button"),h=t("loading");return r(),i(s,null,[d(a(u,{type:"primary",onClick:n.openFullScreen1},{default:l((()=>[c])),_:1},8,["onClick"]),[[h,n.fullscreenLoading,void 0,{fullscreen:!0,lock:!0}]]),p,a(u,{type:"primary",onClick:n.openFullScreen2},{default:l((()=>[g])),_:1},8,["onClick"])],64)}},v)}()}},v={class:"doc-main-content"},y={class:"doc-content"},w=i("h2",{id:"loading-jia-zai"},[i("a",{class:"header-anchor",href:"#loading-jia-zai"}),g(" Loading 加载")],-1),L=i("p",null,"加载数据时显示动效。",-1),j=i("h3",{id:"qu-yu-jia-zai"},[i("a",{class:"header-anchor",href:"#qu-yu-jia-zai"}),g(" 区域加载")],-1),k=i("p",null,"在表格等容器中加载数据时显示。",-1),x=i("div",null,[i("p",null,[g("Hongluan ui 提供了两种调用 Loading 的方法：指令和服务。对于自定义指令"),i("code",null,"v-loading"),g("，只需要绑定"),i("code",null,"Boolean"),g("即可。默认状况下，Loading 遮罩会插入到绑定元素的子节点，通过添加"),i("code",null,"body"),g("修饰符，可以使遮罩插入至 DOM 中的 body 上。")])],-1),D=i("pre",null,[i("code",{class:"html"},'<template>\n  <hl-table\n    v-loading="loading"\n    :data="tableData"\n    style="width: 100%">\n    <hl-table-column\n      prop="date"\n      label="日期"\n      width="180">\n    </hl-table-column>\n    <hl-table-column\n      prop="name"\n      label="姓名"\n      width="180">\n    </hl-table-column>\n    <hl-table-column\n      prop="address"\n      label="地址">\n    </hl-table-column>\n  </hl-table>\n</template>\n\n<style>\n  body {\n    margin: 0;\n  }\n</style>\n\n<script>\nimport { defineComponent, ref } from \'vue\'\nexport default defineComponent({\n  setup() {\n    const tableData  = ref([{\n      date: \'2016-05-03\',\n      name: \'王小虎\',\n      address: \'上海市普陀区金沙江路 1518 弄\'\n    }, {\n      date: \'2016-05-02\',\n      name: \'王小虎\',\n      address: \'上海市普陀区金沙江路 1518 弄\'\n    }, {\n      date: \'2016-05-04\',\n      name: \'王小虎\',\n      address: \'上海市普陀区金沙江路 1518 弄\'\n    }])\n    const loading = ref(true)\n\n    return {\n      tableData,\n      loading,\n    }\n  }\n})\n<\/script>\n')],-1),C=i("h3",{id:"zi-ding-yi"},[i("a",{class:"header-anchor",href:"#zi-ding-yi"}),g(" 自定义")],-1),S=i("p",null,"可自定义加载文案、图标和背景色。",-1),H=i("div",null,[i("p",null,[g("在绑定了"),i("code",null,"v-loading"),g("指令的元素上添加"),i("code",null,"loading-text"),g("属性，其值会被渲染为加载文案，并显示在加载图标的下方。类似地，"),i("code",null,"loading-spinner"),g("、"),i("code",null,"loading-background"),g("和"),i("code",null,"loading-svg"),g("属性分别用来设定图标类名、背景色值、加载图标。当loading-spinner为对象时，将会默认使用Spinner组件")])],-1),_=i("pre",null,[i("code",{class:"html"},'<template>\n  <hl-table\n    v-loading="loading"\n    loading-text="拼命加载中"\n    loading-spinner="spinner"\n    loading-background="rgba(0, 0, 0, 0.8)"\n    :data="tableData"\n    style="width: 100%;margin-bottom: 10px">\n    <hl-table-column\n      prop="date"\n      label="日期"\n      width="180">\n    </hl-table-column>\n    <hl-table-column\n      prop="name"\n      label="姓名"\n      width="180">\n    </hl-table-column>\n    <hl-table-column\n      prop="address"\n      label="地址">\n    </hl-table-column>\n  </hl-table>\n  <hl-table\n    v-loading="loading"\n    :loading-svg="svg"\n    class="custom-loading-svg"\n    loading-svg-view-box="-10, -10, 50, 50"\n    :data="tableData"\n    style="width: 100%">\n    <hl-table-column\n      prop="date"\n      label="日期"\n      width="180">\n    </hl-table-column>\n    <hl-table-column\n      prop="name"\n      label="姓名"\n      width="180">\n    </hl-table-column>\n    <hl-table-column\n      prop="address"\n      label="地址">\n    </hl-table-column>\n  </hl-table>\n</template>\n\n<style>\n  .custom-loading-svg .el-loading-mask > .el-loading-spinner > .circular {\n    animation: none;\n  }\n</style>\n\n<script>\nimport { defineComponent, ref } from \'vue\'\nexport default defineComponent({\n  setup() {\n    const spinner = ref({ color: \'red\' })\n    const tableData = ref([{\n      date: \'2016-05-03\',\n      name: \'王小虎\',\n      address: \'上海市普陀区金沙江路 1518 弄\'\n    }, {\n      date: \'2016-05-02\',\n      name: \'王小虎\',\n      address: \'上海市普陀区金沙江路 1518 弄\'\n    }, {\n      date: \'2016-05-04\',\n      name: \'王小虎\',\n      address: \'上海市普陀区金沙江路 1518 弄\'\n    }])\n    const loading = ref(true)\n    const svg = ref(`\n      <path class="path" d="\n        M 30 15\n        L 28 17\n        M 25.61 25.61\n        A 15 15, 0, 0, 1, 15 30\n        A 15 15, 0, 1, 1, 27.99 7.5\n        L 15 15\n      " style="stroke-width: 4px; fill: rgba(0, 0, 0, 0)"/>\n    `)\n\n    return {\n      spinner,\n      tableData,\n      loading,\n      svg,\n    }\n  }\n})\n<\/script>\n')],-1),z=h('<div class="md-warning"><p><code>loading-svg</code> 属性虽然支持传入 HTML 片段，但是在网站上动态渲染任意 HTML 是非常危险的，因为容易导致 <a href="https://en.wikipedia.org/wiki/Cross-site_scripting">XSS 攻击</a>。请确保 <code>loading-svg</code> 的内容是可信的，<strong>永远不要</strong>将用户提交的内容赋值给 <code>loading-svg</code> 属性。</p></div><h3 id="zheng-ye-jia-zai"><a class="header-anchor" href="#zheng-ye-jia-zai"></a> 整页加载</h3><p>页面数据加载时显示。</p>',3),F=i("div",null,[i("p",null,[g("当使用指令方式时，全屏遮罩需要添加"),i("code",null,"fullscreen"),g("修饰符（遮罩会插入至 body 上），此时若需要锁定屏幕的滚动，可以使用"),i("code",null,"lock"),g("修饰符；当使用服务方式时，遮罩默认即为全屏，无需额外设置。")])],-1),O=i("pre",null,[i("code",{class:"html"},"<template>\n  <hl-button\n    type=\"primary\"\n    @click=\"openFullScreen1\"\n    v-loading.fullscreen.lock=\"fullscreenLoading\">\n    指令方式\n  </hl-button>\n  &nbsp;&nbsp;&nbsp;&nbsp;\n  <hl-button\n    type=\"primary\"\n    @click=\"openFullScreen2\">\n    服务方式\n  </hl-button>\n</template>\n\n<script>\nimport { defineComponent, ref } from 'vue'\nimport { HlLoading } from 'hongluan-ui'\nexport default defineComponent({\n  setup() {\n    const fullscreenLoading = ref(false)\n    const openFullScreen1 = () => {\n      fullscreenLoading.value = true;\n      setTimeout(() => {\n        fullscreenLoading.value = false;\n      }, 2000);\n    }\n    const openFullScreen2 = () => {\n      const loading = HlLoading.service({\n        lock: true,\n        text: 'Loading',\n        spinner: { size: '30px', color: 'yellow' },\n        background: 'rgba(0, 0, 0, 0.7)'\n      });\n      setTimeout(() => {\n        loading.close();\n      }, 2000);\n    }\n\n    return {\n      fullscreenLoading,\n      openFullScreen1,\n      openFullScreen2,\n    }\n  }\n})\n<\/script>\n")],-1),M=h('<h3 id="fu-wu"><a class="header-anchor" href="#fu-wu"></a> 服务</h3><p>Loading 还可以以服务的方式调用。引入 Loading 服务：</p><pre><code class="hljs language-javascript"><span class="hljs-keyword">import</span> { HlLoading } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;hongluan-ui&#39;</span>;\n</code></pre><p>在需要调用时：</p><pre><code class="hljs language-javascript">HlLoading.service(options);\n</code></pre><p>其中 <code>options</code> 参数为 Loading 的配置项，具体见下表。<code>LoadingService</code> 会返回一个 Loading 实例，可通过调用该实例的 <code>close</code> 方法来关闭它：</p><pre><code class="hljs language-javascript"><span class="hljs-keyword">let</span> loadingInstance = HlLoading.service(options);\n<span class="hljs-built_in">this</span>.$nextTick(<span class="hljs-function">() =&gt;</span> { <span class="hljs-comment">// 以服务的方式调用的 Loading 需要异步关闭</span>\n  loadingInstance.close();\n});\n</code></pre><p>需要注意的是，以服务的方式调用的全屏 Loading 是单例的：若在前一个全屏 Loading 关闭前再次调用全屏 Loading，并不会创建一个新的 Loading 实例，而是返回现有全屏 Loading 的实例：</p><pre><code class="hljs language-javascript"><span class="hljs-keyword">let</span> loadingInstance1 = HlLoading.service({ <span class="hljs-attr">fullscreen</span>: <span class="hljs-literal">true</span> });\n<span class="hljs-keyword">let</span> loadingInstance2 = HlLoading.service({ <span class="hljs-attr">fullscreen</span>: <span class="hljs-literal">true</span> });\n<span class="hljs-built_in">console</span>.log(loadingInstance1 === loadingInstance2); <span class="hljs-comment">// true</span>\n</code></pre><p>此时调用它们中任意一个的 <code>close</code> 方法都能关闭这个全屏 Loading。</p><p>如果完整引入了 Element，那么 <code>app.config.globalProperties</code> 上会有一个全局方法 <code>$loading</code>，它的调用方式为：<code>this.$loading(options)</code>，同样会返回一个 Loading 实例。</p><h3 id="options"><a class="header-anchor" href="#options"></a> Options</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>target</td><td>Loading 需要覆盖的 DOM 节点。可传入一个 DOM 对象或字符串；若传入字符串，则会将其作为参数传入 <code>document.querySelector</code>以获取到对应 DOM 节点</td><td>object/string</td><td>—</td><td>document.body</td></tr><tr><td>body</td><td>同 <code>v-loading</code> 指令中的 <code>body</code> 修饰符</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>fullscreen</td><td>同 <code>v-loading</code> 指令中的 <code>fullscreen</code> 修饰符</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>lock</td><td>同 <code>v-loading</code> 指令中的 <code>lock</code> 修饰符</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>text</td><td>显示在加载图标下方的加载文案</td><td>string</td><td>—</td><td>—</td></tr><tr><td>spinner</td><td>自定义加载图标类名</td><td>string</td><td>—</td><td>—</td></tr><tr><td>background</td><td>遮罩背景色</td><td>string</td><td>—</td><td>—</td></tr><tr><td>customClass</td><td>Loading 的自定义类名</td><td>string</td><td>—</td><td>—</td></tr></tbody></table>',13);var T=m(f,[["render",function(n,e,t,l,a,o){const u=d("hl-demo0"),g=d("demo-block"),h=d("hl-demo1"),m=d("hl-demo2"),b=d("right-nav");return s(),r("section",v,[i("div",y,[w,L,j,k,c(g,null,{source:p((()=>[c(u)])),highlight:p((()=>[D])),default:p((()=>[x])),_:1}),C,S,c(g,null,{source:p((()=>[c(h)])),highlight:p((()=>[_])),default:p((()=>[H])),_:1}),z,c(g,null,{source:p((()=>[c(m)])),highlight:p((()=>[O])),default:p((()=>[F])),_:1}),M]),c(b)])}]]);export{T as default};
