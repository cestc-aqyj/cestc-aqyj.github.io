var t=Object.defineProperty,e=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable,a=(e,n,l)=>n in e?t(e,n,{enumerable:!0,configurable:!0,writable:!0,value:l}):e[n]=l,o=(t,o)=>{for(var d in o||(o={}))n.call(o,d)&&a(t,d,o[d]);if(e)for(var d of e(o))l.call(o,d)&&a(t,d,o[d]);return t};import{H as d,o as r,C as c,D as i,v as u,P as h,at as p,_ as s,as as g}from"./vue.69b6befa.js";import{_ as m}from"./index.f86c4400.js";import"./hongluan.17b69477.js";import"./highlight.5ad4a187.js";import"./hongluan-icons.f9afdbe4.js";const f={name:"component-doc",components:{"hl-demo0":function(){const{createElementVNode:t,resolveComponent:e,createVNode:n,withCtx:l,openBlock:a,createBlock:d}=p,r=t("p",null,"页数较少时的效果",-1),c=t("p",null,"大于 7 页时的效果",-1);return o({render:function(t,o){const i=e("hl-pagination"),u=e("hl-col"),h=e("hl-row");return a(),d(h,null,{default:l((()=>[n(u,{span:"col-24"},{default:l((()=>[r,n(i,{layout:"prev, pager, next",total:50})])),_:1}),n(u,{span:"col-24",class:"m-t-lg"},{default:l((()=>[c,n(i,{layout:"prev, pager, next",total:1e3})])),_:1})])),_:1})}},{})}(),"hl-demo1":function(){const{resolveComponent:t,openBlock:e,createBlock:n}=p;return o({render:function(l,a){const o=t("hl-pagination");return e(),n(o,{"page-size":20,"pager-count":11,layout:"prev, pager, next",total:1e3})}},{})}(),"hl-demo2":function(){const{resolveComponent:t,openBlock:e,createBlock:n}=p;return o({render:function(l,a){const o=t("hl-pagination");return e(),n(o,{line:"",layout:"prev, pager, next",total:50})}},{})}(),"hl-demo3":function(){const{resolveComponent:t,openBlock:e,createBlock:n}=p;return o({render:function(l,a){const o=t("hl-pagination");return e(),n(o,{block:"",layout:"prev, pager, next",total:50})}},{})}(),"hl-demo4":function(){const{resolveComponent:t,createVNode:e,withCtx:n,openBlock:l,createBlock:a}=p;return o({render:function(o,d){const r=t("hl-pagination"),c=t("hl-col"),i=t("hl-row");return l(),a(i,{align:"center"},{default:n((()=>[e(c,{span:"col-lg-16",class:"dom-area","data-name":"left"},{default:n((()=>[e(r,{layout:"prev, pager, next",total:50,align:"left"})])),_:1}),e(c,{span:"col-lg-16",class:"m-t-xxl dom-area","data-name":"center"},{default:n((()=>[e(r,{layout:"prev, pager, next",total:50,align:"center"})])),_:1}),e(c,{span:"col-lg-16",class:"m-t-xxl dom-area","data-name":"right"},{default:n((()=>[e(r,{layout:"prev, pager, next",total:50,align:"right"})])),_:1}),e(c,{span:"col-lg-16",class:"m-t-xxl dom-area","data-name":"between"},{default:n((()=>[e(r,{line:"",layout:"prev, pager, next",total:50,align:"between"})])),_:1})])),_:1})}},{})}(),"hl-demo5":function(){const{createElementVNode:t,resolveComponent:e,withCtx:n,createVNode:l,openBlock:a,createBlock:d}=p,r=t("div",{style:{width:"100%",padding:"0 12px"}},[t("a",null,"自定义元素")],-1);const{defineComponent:c,ref:i}=p,u=c({setup(){const t=i(5),e=i(5),n=i(5);return{currentPage1:t,currentPage4:i(4),currentPage2:e,currentPage3:n,handleSizeChange:t=>{console.log(`每页 ${t} 条`)},handleCurrentChange:t=>{console.log(`当前页: ${t}`)}}}});return o({render:function(t,o){const c=e("hl-pagination"),i=e("hl-col"),u=e("hl-row");return a(),d(u,null,{default:n((()=>[l(i,{span:"col-24",class:"m-t-xxl"},{default:n((()=>[l(c,{onSizeChange:t.handleSizeChange,onCurrentChange:t.handleCurrentChange,"current-page":t.currentPage4,"page-sizes":[100,200,300,400],"page-size":100,layout:"total, slot, prev, pager, next, sizes, jumper",total:400,align:"between"},{default:n((()=>[r])),_:1},8,["onSizeChange","onCurrentChange","current-page"])])),_:1})])),_:1})}},u)}(),"hl-demo6":function(){const{resolveComponent:t,createVNode:e,createElementVNode:n,openBlock:l,createElementBlock:a}=p;const{defineComponent:d,ref:r}=p,c=d({setup:()=>({value:r(!1)})});return o({render:function(o,d){const r=t("hl-switch"),c=t("hl-pagination");return l(),a("div",null,[n("p",null,[e(r,{modelValue:o.value,"onUpdate:modelValue":d[0]||(d[0]=t=>o.value=t),style:{}},null,8,["modelValue"])]),e(c,{"hide-on-single-page":o.value,total:5,layout:"prev, pager, next"},null,8,["hide-on-single-page"])])}},c)}()}},v={class:"doc-main-content"},y={class:"doc-content"},x=i("h1",null,"Pagination 分页",-1),b=i("p",null,"当数据量过多时，使用分页分解数据。",-1),C=i("div",null,[i("p",null,[s("设置"),i("code",null,"layout"),s("，表示需要显示的内容，用逗号分隔，布局元素会依次显示。"),i("code",null,"prev"),s("表示上一页，"),i("code",null,"next"),s("为下一页，"),i("code",null,"pager"),s("表示页码列表，除此以外还提供了"),i("code",null,"jumper"),s("和"),i("code",null,"total"),s("，"),i("code",null,"size"),s("和特殊的布局符号"),i("code",null,"->"),s("，"),i("code",null,"->"),s("后的元素会靠右显示，"),i("code",null,"jumper"),s("表示跳页元素，"),i("code",null,"total"),s("表示总条目数，"),i("code",null,"size"),s("用于设置每页显示的页码数量。")])],-1),z=i("pre",null,[i("code",{class:"html"},'<template>\n  <hl-row>\n    <hl-col span="col-24">\n      <p>页数较少时的效果</p>\n      <hl-pagination layout="prev, pager, next" :total="50"> </hl-pagination>\n    </hl-col>\n    <hl-col span="col-24" class="m-t-lg">\n      <p>大于 7 页时的效果</p>\n      <hl-pagination layout="prev, pager, next" :total="1000"> </hl-pagination>\n    </hl-col>\n  </hl-row>\n</template>\n')],-1),w=i("h2",{id:"she-zhi-zui-da-ye-ma-an-niu-shu"},[i("a",{class:"header-anchor",href:"#she-zhi-zui-da-ye-ma-an-niu-shu"}),s(" 设置最大页码按钮数")],-1),k=i("p",null,[s("通过"),i("code",null,"pager-count"),s("属性可以设置最大页码按钮数。")],-1),P=i("div",null,[i("p",null,"默认情况下，当总页数超过 7 页时 Pagination 会折叠多余的页码按钮。")],-1),_=i("pre",null,[i("code",{class:"html"},'<template>\n  <hl-pagination\n    :page-size="20"\n    :pager-count="11"\n    layout="prev, pager, next"\n    :total="1000"\n  >\n  </hl-pagination>\n</template>\n')],-1),j=i("h2",{id:"line-yang-shi"},[i("a",{class:"header-anchor",href:"#line-yang-shi"}),s(" Line 样式")],-1),B=i("p",null,"在空间有限的情况下，可以使用简单的小型分页。",-1),S=i("pre",null,[i("code",{class:"html"},'<template>\n  <hl-pagination line layout="prev, pager, next" :total="50"> </hl-pagination>\n</template>\n')],-1),V=i("h2",{id:"man-kuan-yu-pai-lie-fang-shi"},[i("a",{class:"header-anchor",href:"#man-kuan-yu-pai-lie-fang-shi"}),s(" 满宽与排列方式")],-1),N=i("p",null,[s("使用 "),i("code",null,"block"),s(" 属性会使分页组件变为块级样式。")],-1),E=i("pre",null,[i("code",{class:"html"},'<template>\n  <hl-pagination block layout="prev, pager, next" :total="50"></hl-pagination>\n</template>\n')],-1),O=i("h2",{id:"pai-lie-fang-shi"},[i("a",{class:"header-anchor",href:"#pai-lie-fang-shi"}),s(" 排列方式")],-1),$=i("p",null,[s("使用 "),i("code",null,"align"),s(" 属性能够设置分页组件的排列方式。")],-1),A=i("div",null,[i("p",null,[s("支持常用的 "),i("code",null,"left(默认)"),s(),i("code",null,"center"),s(),i("code",null,"right"),s(),i("code",null,"around"),s(),i("code",null,"between"),s(" 属性")])],-1),D=i("pre",null,[i("code",{class:"html"},'<template>\n  <hl-row align="center">\n    <hl-col span="col-lg-16" class="dom-area" data-name="left">\n      <hl-pagination\n        layout="prev, pager, next"\n        :total="50"\n        align="left"\n      ></hl-pagination>\n    </hl-col>\n    <hl-col span="col-lg-16" class="m-t-xxl dom-area" data-name="center">\n      <hl-pagination\n        layout="prev, pager, next"\n        :total="50"\n        align="center"\n      ></hl-pagination>\n    </hl-col>\n\n    <hl-col span="col-lg-16" class="m-t-xxl dom-area" data-name="right">\n      <hl-pagination\n        layout="prev, pager, next"\n        :total="50"\n        align="right"\n      ></hl-pagination>\n    </hl-col>\n\n    <hl-col span="col-lg-16" class="m-t-xxl dom-area" data-name="between">\n      <hl-pagination\n        line\n        layout="prev, pager, next"\n        :total="50"\n        align="between"\n      ></hl-pagination>\n    </hl-col>\n  </hl-row>\n</template>\n')],-1),H=i("h2",{id:"fu-jia-gong-neng"},[i("a",{class:"header-anchor",href:"#fu-jia-gong-neng"}),s(" 附加功能")],-1),I=i("p",null,[s("根据使用需求，你可以添加其他的功能模块，还可以通过自定义元素和 "),i("code",null,"align"),s(" 属性来布局一个两端对齐的分页组件。")],-1),L=i("div",null,[i("p",null,[s("此例是一个完整的用例，使用了"),i("code",null,"size-change"),s("和"),i("code",null,"current-change"),s("事件来处理页码大小和当前页变动时候触发的事件。"),i("code",null,"page-sizes"),s("接受一个整型数组，数组元素为展示的选择每页显示个数的选项，"),i("code",null,"[100, 200, 300, 400]"),s("表示四个选项，每页显示 100 个，200 个，300 个或者 400 个。")])],-1),U=i("pre",null,[i("code",{class:"html"},'<template>\n  <hl-row>\n    <hl-col span="col-24" class="m-t-xxl">\n      <hl-pagination\n        @size-change="handleSizeChange"\n        @current-change="handleCurrentChange"\n        :current-page="currentPage4"\n        :page-sizes="[100, 200, 300, 400]"\n        :page-size="100"\n        layout="total, slot, prev, pager, next, sizes, jumper"\n        :total="400"\n        align="between"\n      >\n        <div style="width:100%; padding: 0 12px"><a>自定义元素</a></div>\n      </hl-pagination>\n    </hl-col>\n  </hl-row>\n</template>\n\n<script>\nimport { defineComponent, ref } from \'vue\'\nexport default defineComponent({\n  setup() {\n    const currentPage1 = ref(5)\n    const currentPage2 = ref(5)\n    const currentPage3 = ref(5)\n    const currentPage4 = ref(4)\n\n    const handleSizeChange = (val) => {\n      console.log(`每页 ${val} 条`)\n    }\n    const handleCurrentChange = (val) => {\n      console.log(`当前页: ${val}`)\n    }\n\n    return {\n      currentPage1,\n      currentPage4,\n      currentPage2,\n      currentPage3,\n      handleSizeChange,\n      handleCurrentChange\n    }\n  }\n})\n<\/script>\n')],-1),q=i("h3",{id:"dang-zhi-you-yi-ye-shi-yin-cang-fen-ye"},[i("a",{class:"header-anchor",href:"#dang-zhi-you-yi-ye-shi-yin-cang-fen-ye"}),s(" 当只有一页时隐藏分页")],-1),F=i("p",null,[s("当只有一页时，通过设置 "),i("code",null,"hide-on-single-page"),s(" 属性来隐藏分页。")],-1),G=i("pre",null,[i("code",{class:"html"},'<template>\n  <div>\n    <p>\n      <hl-switch v-model="value" style=""> </hl-switch>\n    </p>\n    <hl-pagination\n      :hide-on-single-page="value"\n      :total="5"\n      layout="prev, pager, next"\n    >\n    </hl-pagination>\n  </div>\n</template>\n\n<script>\nimport { defineComponent, ref } from \'vue\'\nexport default defineComponent({\n  setup() {\n    const value = ref(false)\n    return {\n      value,\n    }\n  }\n})\n<\/script>\n')],-1),J=g('<h2 id="attributes"><a class="header-anchor" href="#attributes"></a> Attributes</h2><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>line</td><td>是否使用线条分页样式</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>align</td><td>分页组件的排列方式</td><td>string</td><td><code>left</code>, <code>center</code>, <code>right</code>, <code>around</code>, <code>between</code></td><td>left</td></tr><tr><td>page-size</td><td>每页显示条目个数，支持 v-model 双向绑定</td><td>number</td><td>—</td><td>10</td></tr><tr><td>total</td><td>总条目数</td><td>number</td><td>—</td><td>—</td></tr><tr><td>page-count</td><td>总页数，total 和 page-count 设置任意一个就可以达到显示页码的功能；如果要支持 page-sizes 的更改，则需要使用 total 属性</td><td>Number</td><td>—</td><td>—</td></tr><tr><td>pager-count</td><td>页码按钮的数量，当总页数超过该值时会折叠</td><td>number</td><td>大于等于 5 且小于等于 21 的奇数</td><td>7</td></tr><tr><td>current-page</td><td>当前页数，支持 v-model 双向绑定符</td><td>number</td><td>—</td><td>1</td></tr><tr><td>layout</td><td>组件布局，子组件名用逗号分隔</td><td>string</td><td><code>sizes</code>, <code>prev</code>, <code>pager</code>, <code>next</code>, <code>jumper</code>, <code>total</code>, <code>slot</code></td><td>&#39;prev, pager, next, jumper, total&#39;</td></tr><tr><td>page-sizes</td><td>每页显示个数选择器的选项设置</td><td>number[]</td><td>—</td><td>[10, 20, 30, 40, 50, 100]</td></tr><tr><td>popper-class</td><td>每页显示个数选择器的下拉框类名</td><td>string</td><td>—</td><td>—</td></tr><tr><td>prev-text</td><td>替代图标显示的上一页文字</td><td>string</td><td>—</td><td>—</td></tr><tr><td>next-text</td><td>替代图标显示的下一页文字</td><td>string</td><td>—</td><td>—</td></tr><tr><td>disabled</td><td>是否禁用</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>hide-on-single-page</td><td>只有一页时是否隐藏</td><td>boolean</td><td>—</td><td>-</td></tr><tr><td>block</td><td>块级样式</td><td>boolean</td><td>—</td><td>false</td></tr></tbody></table><h2 id="events"><a class="header-anchor" href="#events"></a> Events</h2><table><thead><tr><th>事件名称</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>size-change</td><td>pageSize 改变时会触发</td><td>每页条数</td></tr><tr><td>current-change</td><td>currentPage 改变时会触发</td><td>当前页</td></tr><tr><td>prev-click</td><td>用户点击上一页按钮改变当前页后触发</td><td>当前页</td></tr><tr><td>next-click</td><td>用户点击下一页按钮改变当前页后触发</td><td>当前页</td></tr></tbody></table><h2 id="slot"><a class="header-anchor" href="#slot"></a> Slot</h2><table><thead><tr><th>name</th><th>说明</th></tr></thead><tbody><tr><td>—</td><td>自定义内容，需要在 <code>layout</code> 中列出 <code>slot</code></td></tr></tbody></table>',6);var K=m(f,[["render",function(t,e,n,l,a,o){const p=d("hl-demo0"),s=d("demo-block"),g=d("hl-demo1"),m=d("hl-demo2"),f=d("hl-demo3"),K=d("hl-demo4"),M=d("hl-demo5"),Q=d("hl-demo6"),R=d("right-nav");return r(),c("section",v,[i("div",y,[x,b,u(s,null,{source:h((()=>[u(p)])),highlight:h((()=>[z])),default:h((()=>[C])),_:1}),w,k,u(s,null,{source:h((()=>[u(g)])),highlight:h((()=>[_])),default:h((()=>[P])),_:1}),j,B,u(s,null,{source:h((()=>[u(m)])),highlight:h((()=>[S])),_:1}),V,N,u(s,null,{source:h((()=>[u(f)])),highlight:h((()=>[E])),_:1}),O,$,u(s,null,{source:h((()=>[u(K)])),highlight:h((()=>[D])),default:h((()=>[A])),_:1}),H,I,u(s,null,{source:h((()=>[u(M)])),highlight:h((()=>[U])),default:h((()=>[L])),_:1}),q,F,u(s,null,{source:h((()=>[u(Q)])),highlight:h((()=>[G])),_:1}),J]),u(R)])}]]);export{K as default};
