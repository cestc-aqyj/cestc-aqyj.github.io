var t=Object.defineProperty,e=Object.getOwnPropertySymbols,d=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable,n=(e,d,l)=>d in e?t(e,d,{enumerable:!0,configurable:!0,writable:!0,value:l}):e[d]=l,a=(t,a)=>{for(var r in a||(a={}))d.call(a,r)&&n(t,r,a[r]);if(e)for(var r of e(a))l.call(a,r)&&n(t,r,a[r]);return t};import{H as r,o,C as s,D as i,v as c,P as u,at as h,_ as p,as as m}from"./vue.69b6befa.js";import{_ as b}from"./index.6da685a4.js";import"./hongluan.17b69477.js";import"./highlight.5ad4a187.js";import"./hongluan-icons.f9afdbe4.js";const f={name:"component-doc",components:{"hl-demo0":function(){const{createElementVNode:t,createTextVNode:e,resolveComponent:d,createVNode:l,withCtx:n,openBlock:r,createBlock:o}=h,s=t("p",null,[e("使用的箭头进行选择："),t("code",null,"arrow-control")],-1),i=t("p",null,"鼠标滚轮进行选择：默认",-1);const{defineComponent:c,ref:u}=h,p=(t,e)=>{const d=[];for(let l=t;l<=e;l++)d.push(l);return d},m=c({setup:()=>({value1:u(new Date(2016,9,10,18,40)),value2:u(new Date(2016,9,10,18,40)),disabledHours:()=>p(0,16).concat(p(19,23)),disabledMinutes:t=>17===t?p(0,29):18===t?p(31,59):void 0,disabledSeconds:(t,e)=>{if(18===t&&30===e)return p(1,59)}})});return a({render:function(t,e){const a=d("two-airplay"),c=d("hl-icon"),u=d("hl-time-picker"),h=d("hl-col"),p=d("hl-row");return r(),o(p,{align:"center",gap:"var(--xl)"},{default:n((()=>[l(h,{span:"col-lg-10"},{default:n((()=>[s,l(u,{"arrow-control":"",modelValue:t.value2,"onUpdate:modelValue":e[0]||(e[0]=e=>t.value2=e),"disabled-hours":t.disabledHours,"disabled-minutes":t.disabledMinutes,"disabled-seconds":t.disabledSeconds,placeholder:"任意时间点",block:""},{icon:n((()=>[l(c,null,{default:n((()=>[l(a)])),_:1})])),_:1},8,["modelValue","disabled-hours","disabled-minutes","disabled-seconds"])])),_:1}),l(h,{span:"col-lg-10"},{default:n((()=>[i,l(u,{modelValue:t.value1,"onUpdate:modelValue":e[1]||(e[1]=e=>t.value1=e),"disabled-hours":t.disabledHours,"disabled-minutes":t.disabledMinutes,"disabled-seconds":t.disabledSeconds,placeholder:"任意时间点",block:"",fill:""},null,8,["modelValue","disabled-hours","disabled-minutes","disabled-seconds"])])),_:1})])),_:1})}},m)}(),"hl-demo1":function(){const{resolveComponent:t,createVNode:e,withCtx:d,openBlock:l,createBlock:n}=h;const{defineComponent:r,ref:o}=h,s=r({setup:()=>({value1:o([new Date(2016,9,10,8,40),new Date(2016,9,10,9,40)]),value2:o([new Date(2016,9,10,8,40),new Date(2016,9,10,9,40)])})});return a({render:function(a,r){const o=t("hl-time-picker"),s=t("hl-col"),i=t("hl-row");return l(),n(i,{align:"center",gap:"var(--xl)"},{default:d((()=>[e(s,{span:"col-lg-10"},{default:d((()=>[e(o,{"is-range":"","arrow-control":"",modelValue:a.value2,"onUpdate:modelValue":r[0]||(r[0]=t=>a.value2=t),"range-separator":"至","start-placeholder":"开始时间","end-placeholder":"结束时间",placeholder:"选择时间范围",block:""},null,8,["modelValue"])])),_:1}),e(s,{span:"col-lg-10"},{default:d((()=>[e(o,{"is-range":"",modelValue:a.value1,"onUpdate:modelValue":r[1]||(r[1]=t=>a.value1=t),"range-separator":"至","start-placeholder":"开始时间","end-placeholder":"结束时间",placeholder:"选择时间范围",block:"",fill:""},null,8,["modelValue"])])),_:1})])),_:1})}},s)}()}},g={class:"doc-main-content"},v={class:"doc-content"},k=i("h1",null,"TimePicker 时间选择器",-1),w=i("p",null,[i("code",null,"hl-time-picker"),p(" 组件可以选择任意时间。")],-1),y=i("div",null,[i("p",null,[p("通过 "),i("code",null,"disabledHours"),p(),i("code",null,"disabledMinutes"),p(" 和 "),i("code",null,"disabledSeconds"),p(" 限制可选时间范围。")])],-1),D=i("pre",null,[i("code",{class:"html"},'<template>\n  <hl-row align="center" gap="var(--xl)">\n    <hl-col span="col-lg-10">\n      <p>使用的箭头进行选择：<code>arrow-control</code></p>\n      <hl-time-picker arrow-control v-model="value2" :disabled-hours="disabledHours" :disabled-minutes="disabledMinutes" :disabled-seconds="disabledSeconds" placeholder="任意时间点" block>\n        <template #icon>\n          <hl-icon><two-airplay /></hl-icon>\n        </template>\n      </hl-time-picker>\n    </hl-col>\n    <hl-col span="col-lg-10">\n      <p>鼠标滚轮进行选择：默认</p>\n      <hl-time-picker v-model="value1" :disabled-hours="disabledHours" :disabled-minutes="disabledMinutes" :disabled-seconds="disabledSeconds" placeholder="任意时间点" block fill></hl-time-picker>\n    </hl-col>\n  </hl-row>\n</template>\n\n<script>\n  import { defineComponent, ref } from \'vue\'\n  const makeRange = (start, end) => {\n    const result = []\n    for (let i = start; i <= end; i++) {\n      result.push(i)\n    }\n    return result\n  }\n  export default defineComponent({\n    setup() {\n      let value1 = ref(new Date(2016, 9, 10, 18, 40))\n      let value2 = ref(new Date(2016, 9, 10, 18, 40))\n\n      // 如允许 17:30:00 - 18:30:00\n      const disabledHours = () => {\n        return makeRange(0, 16).concat(makeRange(19, 23))\n      }\n\n      const disabledMinutes = hour => {\n        if (hour === 17) {\n          return makeRange(0, 29)\n        }\n        if (hour === 18) {\n          return makeRange(31, 59)\n        }\n      }\n\n      const disabledSeconds = (hour, minute) => {\n        if (hour === 18 && minute === 30) {\n          return makeRange(1, 59)\n        }\n      }\n\n      return {\n        value1,\n        value2,\n        disabledHours,\n        disabledMinutes,\n        disabledSeconds,\n      }\n    },\n  })\n<\/script>\n')],-1),V=i("h2",{id:"ren-yi-shi-jian-fan-wei"},[i("a",{class:"header-anchor",href:"#ren-yi-shi-jian-fan-wei"}),p(" 任意时间范围")],-1),C=i("p",null,[p("添加"),i("code",null,"is-range"),p("属性即可选择时间范围，同样支持"),i("code",null,"arrow-control"),p("属性。")],-1),H=i("pre",null,[i("code",{class:"html"},'<template>\n<hl-row align="center" gap="var(--xl)">\n  <hl-col span="col-lg-10">\n    <hl-time-picker is-range arrow-control v-model="value2" range-separator="至" start-placeholder="开始时间" end-placeholder="结束时间" placeholder="选择时间范围" block></hl-time-picker>\n  </hl-col>\n  <hl-col span="col-lg-10">\n    <hl-time-picker is-range v-model="value1" range-separator="至" start-placeholder="开始时间" end-placeholder="结束时间" placeholder="选择时间范围" block fill></hl-time-picker>\n  </hl-col>\n</hl-row>\n</template>\n\n<script>\n  import { defineComponent, ref } from \'vue\'\n\n  export default defineComponent({\n    setup() {\n      let value1 = ref([new Date(2016, 9, 10, 8, 40), new Date(2016, 9, 10, 9, 40)])\n      let value2 = ref([new Date(2016, 9, 10, 8, 40), new Date(2016, 9, 10, 9, 40)])\n\n      return {\n        value1,\n        value2,\n      }\n    },\n  })\n<\/script>\n')],-1),S=m('<h2 id="attributes"><a class="header-anchor" href="#attributes"></a> Attributes</h2><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>model-value / v-model</td><td>绑定值</td><td>date</td><td>—</td><td>—</td></tr><tr><td>readonly</td><td>完全只读</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>disabled</td><td>禁用</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>editable</td><td>文本框可输入</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>clearable</td><td>是否显示清除按钮</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>size</td><td>输入框尺寸</td><td>string</td><td>sm / lg</td><td>—</td></tr><tr><td>placeholder</td><td>非范围选择时的占位内容</td><td>string</td><td>—</td><td>—</td></tr><tr><td>start-placeholder</td><td>范围选择时开始日期的占位内容</td><td>string</td><td>—</td><td>—</td></tr><tr><td>end-placeholder</td><td>范围选择时开始日期的占位内容</td><td>string</td><td>—</td><td>—</td></tr><tr><td>is-range</td><td>是否为时间范围选择</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>arrow-control</td><td>是否使用箭头进行时间选择</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>popper-class</td><td>TimePicker 下拉框的类名</td><td>string</td><td>—</td><td>—</td></tr><tr><td>range-separator</td><td>选择范围时的分隔符</td><td>string</td><td>-</td><td>&#39;-&#39;</td></tr><tr><td>format</td><td>显示在输入框中的格式</td><td>string</td><td>见<a href="#/zh-CN/component/date-picker#ri-qi-ge-shi">日期格式</a></td><td>HH:mm:ss</td></tr><tr><td>value-format</td><td>可选，绑定值的格式。不指定则绑定值为 Date 对象</td><td>string</td><td>见<a href="#/zh-CN/component/date-picker#ri-qi-ge-shi">日期格式</a></td><td>—</td></tr><tr><td>default-value</td><td>可选，选择器打开时默认显示的时间</td><td>Date(TimePicker) / string(TimeSelect)</td><td>可被<code>new Date()</code>解析(TimePicker) / 可选值(TimeSelect)</td><td>—</td></tr><tr><td>name</td><td>原生属性</td><td>string</td><td>—</td><td>—</td></tr><tr><td>fill</td><td>填充样式</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>disabled-hours</td><td>禁止选择部分小时选项</td><td>function</td><td>—</td><td>-</td></tr><tr><td>disabled-minutes</td><td>禁止选择部分分钟选项</td><td>function(selectedHour)</td><td>—</td><td>-</td></tr><tr><td>disabled-seconds</td><td>禁止选择部分秒选项</td><td>function(selectedHour, selectedMinute)</td><td>—</td><td>-</td></tr></tbody></table><h2 id="slots"><a class="header-anchor" href="#slots"></a> Slots</h2><table><thead><tr><th>方法名</th><th>说明</th><th>参数</th></tr></thead><tbody><tr><td>icon</td><td>自定义图标</td><td>—</td></tr></tbody></table><h2 id="events"><a class="header-anchor" href="#events"></a> Events</h2><table><thead><tr><th>事件名</th><th>说明</th><th>参数</th></tr></thead><tbody><tr><td>change</td><td>用户确认选定的值时触发</td><td>组件绑定值</td></tr><tr><td>blur</td><td>当 input 失去焦点时触发</td><td>组件实例</td></tr><tr><td>focus</td><td>当 input 获得焦点时触发</td><td>组件实例</td></tr></tbody></table><h2 id="methods"><a class="header-anchor" href="#methods"></a> Methods</h2><table><thead><tr><th>方法名</th><th>说明</th><th>参数</th></tr></thead><tbody><tr><td>focus</td><td>使 input 获取焦点</td><td>—</td></tr><tr><td>blur</td><td>使 input 失去焦点</td><td>—</td></tr></tbody></table>',8);var _=b(f,[["render",function(t,e,d,l,n,a){const h=r("hl-demo0"),p=r("demo-block"),m=r("hl-demo1"),b=r("right-nav");return o(),s("section",g,[i("div",v,[k,w,c(p,null,{source:u((()=>[c(h)])),highlight:u((()=>[D])),default:u((()=>[y])),_:1}),V,C,c(p,null,{source:u((()=>[c(m)])),highlight:u((()=>[H])),_:1}),S]),c(b)])}]]);export{_ as default};
