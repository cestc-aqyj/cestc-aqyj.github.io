var t=Object.defineProperty,e=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable,n=(e,l,o)=>l in e?t(e,l,{enumerable:!0,configurable:!0,writable:!0,value:o}):e[l]=o,d=(t,d)=>{for(var a in d||(d={}))l.call(d,a)&&n(t,a,d[a]);if(e)for(var a of e(d))o.call(d,a)&&n(t,a,d[a]);return t};import{H as a,o as i,C as r,D as s,v as c,P as m,at as u,_ as h,as as b}from"./vue.69b6befa.js";import{_ as p}from"./index.6da685a4.js";import"./hongluan.17b69477.js";import"./highlight.5ad4a187.js";import"./hongluan-icons.f9afdbe4.js";const g={name:"component-doc",components:{"hl-demo0":function(){const{createTextVNode:t,resolveComponent:e,withCtx:l,createVNode:o,createElementVNode:n,Fragment:a,openBlock:i,createElementBlock:r}=u,s=t("打开 Dialog"),c=n("br",null,null,-1),m=n("br",null,null,-1),h=t("打开 左侧抽屉"),b=t("打开 右侧抽屉"),p=t("打开 底部抽屉"),g=t("打开 顶部抽屉"),f=n("br",null,null,-1),V=n("br",null,null,-1),D=t("打开 全屏Dialog"),k=n("h4",null,"自定义对话框title",-1),w=n("span",{style:{display:"block",height:"100px"}},"对话框body信息",-1),y={class:"dialog-footer"},C=t("取 消"),v=t("确 定");const{defineComponent:x,ref:_}=u,F=x({setup(){const t=_(!1),e=_("dialog"),l=_("center");return{dialogVisible:t,showAs:e,placement:l,btnClick:(o,n="dialog",d)=>{l.value=o,e.value=n,t.value=!0}}}});return d({render:function(t,d){const u=e("hl-button"),x=e("hl-dialog");return i(),r(a,null,[o(u,{class:"m-r-md",onClick:d[0]||(d[0]=e=>t.btnClick("center"))},{default:l((()=>[s])),_:1}),c,m,o(u,{class:"m-r-md",onClick:d[1]||(d[1]=e=>t.btnClick("left","drawer"))},{default:l((()=>[h])),_:1}),o(u,{class:"m-r-md",onClick:d[2]||(d[2]=e=>t.btnClick("right","drawer"))},{default:l((()=>[b])),_:1}),o(u,{class:"m-r-md",onClick:d[3]||(d[3]=e=>t.btnClick("bottom","drawer"))},{default:l((()=>[p])),_:1}),o(u,{class:"m-r-md",onClick:d[4]||(d[4]=e=>t.btnClick("top","drawer"))},{default:l((()=>[g])),_:1}),f,V,o(u,{class:"m-r-md",onClick:d[5]||(d[5]=e=>t.btnClick("fullscreen","drawer"))},{default:l((()=>[D])),_:1}),o(x,{modelValue:t.dialogVisible,"onUpdate:modelValue":d[8]||(d[8]=e=>t.dialogVisible=e),width:"400px",showAs:t.showAs,placement:t.placement},{header:l((()=>[k])),footer:l((()=>[n("span",y,[o(u,{onClick:d[6]||(d[6]=e=>t.dialogVisible=!1)},{default:l((()=>[C])),_:1}),o(u,{type:"primary",onClick:d[7]||(d[7]=e=>t.dialogVisible=!1),class:"m-l-md"},{default:l((()=>[v])),_:1})])])),default:l((()=>[w])),_:1},8,["modelValue","showAs","placement"])],64)}},F)}(),"hl-demo1":function(){const{createTextVNode:t,resolveComponent:e,withCtx:l,createVNode:o,createElementVNode:n,Fragment:a,openBlock:i,createElementBlock:r}=u,s=t("打开嵌套表格的 Dialog"),c=t("打开嵌套表单的 Dialog"),m={class:"dialog-footer"},h=t("取 消"),b=t("确 定");const{defineComponent:p,ref:g}=u,f=p({setup:()=>({gridData:g([{date:"2016-05-02",name:"王小虎",address:"上海市普陀区金沙江路 1518 弄"},{date:"2016-05-04",name:"王小虎",address:"上海市普陀区金沙江路 1518 弄"},{date:"2016-05-01",name:"王小虎",address:"上海市普陀区金沙江路 1518 弄"},{date:"2016-05-03",name:"王小虎",address:"上海市普陀区金沙江路 1518 弄"}]),dialogTableVisible:g(!1),dialogFormVisible:g(!1),form:g({name:"",region:"",date1:"",date2:"",delivery:!1,type:[],resource:"",desc:""}),formLabelWidth:g("120px")})});return d({render:function(t,d){const u=e("hl-button"),p=e("hl-table-column"),g=e("hl-table"),f=e("hl-dialog"),V=e("hl-input"),D=e("hl-form-item"),k=e("hl-option"),w=e("hl-select"),y=e("hl-form");return i(),r(a,null,[o(u,{class:"m-r-md",onClick:d[0]||(d[0]=e=>t.dialogTableVisible=!0)},{default:l((()=>[s])),_:1}),o(f,{title:"收货地址",modelValue:t.dialogTableVisible,"onUpdate:modelValue":d[1]||(d[1]=e=>t.dialogTableVisible=e),width:"50%"},{default:l((()=>[o(g,{data:t.gridData,list:""},{default:l((()=>[o(p,{property:"date",label:"日期",width:"150"}),o(p,{property:"name",label:"姓名",width:"200"}),o(p,{property:"address",label:"地址"})])),_:1},8,["data"])])),_:1},8,["modelValue"]),o(u,{class:"m-r-md",onClick:d[2]||(d[2]=e=>t.dialogFormVisible=!0)},{default:l((()=>[c])),_:1}),o(f,{title:"收货地址",modelValue:t.dialogFormVisible,"onUpdate:modelValue":d[7]||(d[7]=e=>t.dialogFormVisible=e),width:"500px"},{footer:l((()=>[n("span",m,[o(u,{onClick:d[5]||(d[5]=e=>t.dialogFormVisible=!1),class:"m-r-md"},{default:l((()=>[h])),_:1}),o(u,{type:"primary",onClick:d[6]||(d[6]=e=>t.dialogFormVisible=!1)},{default:l((()=>[b])),_:1})])])),default:l((()=>[o(y,{model:t.form,width:["col-md-6","col-md-18"]},{default:l((()=>[o(D,{label:"活动名称","label-width":t.formLabelWidth},{default:l((()=>[o(V,{modelValue:t.form.name,"onUpdate:modelValue":d[3]||(d[3]=e=>t.form.name=e),autocomplete:"off",block:""},null,8,["modelValue"])])),_:1},8,["label-width"]),o(D,{label:"活动区域","label-width":t.formLabelWidth},{default:l((()=>[o(w,{modelValue:t.form.region,"onUpdate:modelValue":d[4]||(d[4]=e=>t.form.region=e),placeholder:"请选择活动区域",block:""},{default:l((()=>[o(k,{label:"区域一",value:"shanghai"}),o(k,{label:"区域二",value:"beijing"})])),_:1},8,["modelValue"])])),_:1},8,["label-width"])])),_:1},8,["model"])])),_:1},8,["modelValue"])],64)}},f)}(),"hl-demo2":function(){const{createTextVNode:t,resolveComponent:e,withCtx:l,createVNode:o,createElementVNode:n,Fragment:a,openBlock:i,createElementBlock:r}=u,s=t("点击打开外层 Dialog"),c={class:"dialog-footer"},m=t("取 消"),h=t("打开内层 Dialog");const{defineComponent:b,ref:p}=u,g=b({setup:()=>({outerVisible:p(!1),innerVisible:p(!1)})});return d({render:function(t,d){const u=e("hl-button"),b=e("hl-dialog");return i(),r(a,null,[o(u,{class:"m-r-md",onClick:d[0]||(d[0]=e=>t.outerVisible=!0)},{default:l((()=>[s])),_:1}),o(b,{title:"外层 Dialog",modelValue:t.outerVisible,"onUpdate:modelValue":d[4]||(d[4]=e=>t.outerVisible=e),width:"40%"},{footer:l((()=>[n("div",c,[o(u,{onClick:d[2]||(d[2]=e=>t.outerVisible=!1)},{default:l((()=>[m])),_:1}),o(u,{type:"primary",onClick:d[3]||(d[3]=e=>t.innerVisible=!0),class:"m-l-md"},{default:l((()=>[h])),_:1})])])),default:l((()=>[o(b,{width:"30%",title:"内层 Dialog",modelValue:t.innerVisible,"onUpdate:modelValue":d[1]||(d[1]=e=>t.innerVisible=e),"append-to-body":""},null,8,["modelValue"])])),_:1},8,["modelValue"])],64)}},g)}(),"hl-demo3":function(){const{createTextVNode:t,resolveComponent:e,withCtx:l,createVNode:o,createElementVNode:n,Fragment:a,openBlock:i,createElementBlock:r}=u,s=t("点击打开 Dialog"),c=n("span",null,"需要注意在 Dialog 打开前是这条内容和下面的内容都是不会被渲染的",-1),m=n("strong",null,"额外的内容",-1),h={class:"dialog-footer"},b=t("取 消"),p=t("确 定");const{defineComponent:g,ref:f}=u,V=g({setup:()=>({centerDialogVisible:f(!1)})});return d({render:function(t,d){const u=e("hl-button"),g=e("hl-dialog");return i(),r(a,null,[o(u,{class:"m-r-md",onClick:d[0]||(d[0]=e=>t.centerDialogVisible=!0)},{default:l((()=>[s])),_:1}),o(g,{title:"提示",modelValue:t.centerDialogVisible,"onUpdate:modelValue":d[3]||(d[3]=e=>t.centerDialogVisible=e),width:"30%","destroy-on-close":""},{footer:l((()=>[n("span",h,[o(u,{onClick:d[1]||(d[1]=e=>t.centerDialogVisible=!1)},{default:l((()=>[b])),_:1}),o(u,{type:"primary",onClick:d[2]||(d[2]=e=>t.centerDialogVisible=!1),class:"m-l-md"},{default:l((()=>[p])),_:1})])])),default:l((()=>[c,m])),_:1},8,["modelValue"])],64)}},V)}(),"hl-demo4":function(){const{createTextVNode:t,resolveComponent:e,withCtx:l,createVNode:o,createElementVNode:n,Fragment:a,openBlock:i,createElementBlock:r}=u,s=t("点击打Dialog"),c=n("p",null,"panel 对话框",-1);const{defineComponent:m,ref:h}=u,b=m({setup:()=>({outerVisible:h(!1)})});return d({render:function(t,n){const d=e("hl-button"),m=e("hl-dialog");return i(),r(a,null,[o(d,{class:"m-r-md",onClick:n[0]||(n[0]=e=>t.outerVisible=!0)},{default:l((()=>[s])),_:1}),o(m,{title:"测试Panel属性",modelValue:t.outerVisible,"onUpdate:modelValue":n[1]||(n[1]=e=>t.outerVisible=e),width:"40%",borderless:!0,radius:"0px","header-height":"40px",bodyPadding:"20px","header-class":"header-dialog",bodyClass:"footer-dialog"},{default:l((()=>[c])),_:1},8,["modelValue"])],64)}},b)}()}},f={class:"doc-main-content"},V={class:"doc-content"},D=s("h1",null,"Dialog 对话框",-1),k=s("p",null,"Dialog 通常用作弹窗、模态窗使用，它使用panel组件构建，同时也支持panel的属性特征",-1),w=s("div",null,[s("p",null,[h("需要设置 "),s("code",null,"model-value / v-model"),h(" 属性，它接收 "),s("code",null,"Boolean"),h("，当为 "),s("code",null,"true"),h(" 时显示 Dialog。Dialog 分为两个部分："),s("code",null,"body"),h(" 和 "),s("code",null,"footer"),h("，"),s("code",null,"footer"),h(" 需要具名为 "),s("code",null,"footer"),h(" 的 "),s("code",null,"slot"),h("。"),s("code",null,"title"),h(" 属性用于定义标题，它是可选的，默认值为空。最后，本例还展示了 "),s("code",null,"before-close"),h(" 的用法。")])],-1),y=s("pre",null,[s("code",{class:"html"},'<template>\n  <hl-button class="m-r-md" @click="btnClick(\'center\')">打开 Dialog</hl-button>\n  <br /><br />\n  <hl-button class="m-r-md" @click="btnClick(\'left\', \'drawer\')">打开 左侧抽屉</hl-button>\n  <hl-button class="m-r-md" @click="btnClick(\'right\', \'drawer\')">打开 右侧抽屉</hl-button>\n  <hl-button class="m-r-md" @click="btnClick(\'bottom\', \'drawer\')">打开 底部抽屉</hl-button>\n  <hl-button class="m-r-md" @click="btnClick(\'top\', \'drawer\')">打开 顶部抽屉</hl-button>\n  <br /><br />\n  <hl-button class="m-r-md" @click="btnClick(\'fullscreen\', \'drawer\')">打开 全屏Dialog</hl-button>\n\n  <hl-dialog\n    v-model="dialogVisible"\n    width="400px"\n    :showAs="showAs"\n    :placement="placement"\n  >\n    <template #header>\n      <h4>自定义对话框title</h4>\n    </template>\n    <span style="display:block; height:100px;">对话框body信息</span>\n    <template #footer>\n      <span class="dialog-footer">\n        <hl-button @click="dialogVisible = false">取 消</hl-button>\n        <hl-button type="primary" @click="dialogVisible = false" class="m-l-md">确 定</hl-button>\n      </span>\n    </template>\n  </hl-dialog>\n</template>\n\n<script>\nimport { defineComponent, ref } from \'vue\'\nexport default defineComponent({\n  setup() {\n    const dialogVisible = ref(false)\n    const showAs = ref(\'dialog\')\n    const placement = ref(\'center\')\n    \n    const btnClick = (placementParam, showAsParam = \'dialog\', animation) => {\n      placement.value = placementParam\n      showAs.value = showAsParam\n      dialogVisible.value = true\n    }\n\n    return {\n      dialogVisible,\n      showAs,\n      placement,\n      btnClick,\n    }\n  }\n})\n<\/script>\n')],-1),C=s("div",{class:"md-tip"},[s("p",null,[s("code",null,"before-close"),h(" 仅当用户通过点击关闭图标或遮罩关闭 Dialog 时起效。如果你在 "),s("code",null,"footer"),h(" 具名 slot 里添加了用于关闭 Dialog 的按钮，那么可以在按钮的点击回调函数里加入 "),s("code",null,"before-close"),h(" 的相关逻辑。")])],-1),v=s("h2",{id:"zi-ding-yi-nei-rong"},[s("a",{class:"header-anchor",href:"#zi-ding-yi-nei-rong"}),h(" 自定义内容")],-1),x=s("p",null,"Dialog 组件的可以嵌入任意的内容",-1),_=s("pre",null,[s("code",{class:"html"},'<template>\n  <hl-button class="m-r-md" @click="dialogTableVisible = true">打开嵌套表格的 Dialog</hl-button>\n\n  <hl-dialog title="收货地址" v-model="dialogTableVisible" width="50%">\n    <hl-table :data="gridData" list>\n      <hl-table-column property="date" label="日期" width="150"></hl-table-column>\n      <hl-table-column property="name" label="姓名" width="200"></hl-table-column>\n      <hl-table-column property="address" label="地址"></hl-table-column>\n    </hl-table>\n  </hl-dialog>\n\n  \x3c!-- Form --\x3e\n  <hl-button class="m-r-md" @click="dialogFormVisible = true">打开嵌套表单的 Dialog</hl-button>\n\n  <hl-dialog title="收货地址" v-model="dialogFormVisible" width="500px">\n    <hl-form :model="form" :width="[\'col-md-6\',\'col-md-18\']">\n      <hl-form-item label="活动名称" :label-width="formLabelWidth">\n        <hl-input v-model="form.name" autocomplete="off" block></hl-input>\n      </hl-form-item>\n      <hl-form-item label="活动区域" :label-width="formLabelWidth">\n        <hl-select v-model="form.region" placeholder="请选择活动区域" block>\n          <hl-option label="区域一" value="shanghai"></hl-option>\n          <hl-option label="区域二" value="beijing"></hl-option>\n        </hl-select>\n      </hl-form-item>\n    </hl-form>\n    <template #footer>\n      <span class="dialog-footer">\n        <hl-button @click="dialogFormVisible = false" class="m-r-md">取 消</hl-button>\n        <hl-button type="primary" @click="dialogFormVisible = false">确 定</hl-button>\n      </span>\n    </template>\n  </hl-dialog>\n</template>\n\n<script>\nimport { defineComponent, ref } from \'vue\'\nexport default defineComponent({\n  setup() {\n    const gridData = ref([\n      {\n        date: \'2016-05-02\',\n        name: \'王小虎\',\n        address: \'上海市普陀区金沙江路 1518 弄\',\n      },\n      {\n        date: \'2016-05-04\',\n        name: \'王小虎\',\n        address: \'上海市普陀区金沙江路 1518 弄\',\n      },\n      {\n        date: \'2016-05-01\',\n        name: \'王小虎\',\n        address: \'上海市普陀区金沙江路 1518 弄\',\n      },\n      {\n        date: \'2016-05-03\',\n        name: \'王小虎\',\n        address: \'上海市普陀区金沙江路 1518 弄\',\n      },\n    ])\n    const dialogTableVisible = ref(false)\n    const dialogFormVisible = ref(false)\n    const form = ref({\n      name: \'\',\n      region: \'\',\n      date1: \'\',\n      date2: \'\',\n      delivery: false,\n      type: [],\n      resource: \'\',\n      desc: \'\',\n    })\n    const formLabelWidth = ref(\'120px\')\n\n    return {\n      gridData,\n      dialogTableVisible,\n      dialogFormVisible,\n      form,\n      formLabelWidth,\n    }\n  }\n})\n<\/script>\n')],-1),F=s("h2",{id:"qian-tao-de-dialog"},[s("a",{class:"header-anchor",href:"#qian-tao-de-dialog"}),h(" 嵌套的 Dialog")],-1),P=s("p",null,[h("如果需要在一个 Dialog 内部嵌套另一个 Dialog，需要使用 "),s("code",null,"append-to-body"),h(" 属性。")],-1),A=s("pre",null,[s("code",{class:"html"},'<template>\n  <hl-button class="m-r-md" @click="outerVisible = true">点击打开外层 Dialog</hl-button>\n\n  <hl-dialog title="外层 Dialog" v-model="outerVisible" width="40%">\n      \n    <hl-dialog\n      width="30%"\n      title="内层 Dialog"\n      v-model="innerVisible"\n      append-to-body\n    >\n    </hl-dialog>\n    <template #footer>\n      <div class="dialog-footer">\n        <hl-button @click="outerVisible = false">取 消</hl-button>\n        <hl-button type="primary" @click="innerVisible = true" class="m-l-md">打开内层 Dialog</hl-button>\n      </div>\n    </template>\n  </hl-dialog>\n</template>\n\n<script>\nimport { defineComponent, ref } from \'vue\'\nexport default defineComponent({\n  setup() {\n    const outerVisible = ref(false)\n    const innerVisible = ref(false)\n    return {\n      outerVisible,\n      innerVisible,\n    }\n  }\n})\n<\/script>\n')],-1),N=s("div",{class:"md-tip"},[s("p",null,[h("Dialog 的内容是懒渲染的，即在第一次被打开之前，传入的默认 slot 不会被渲染到 DOM 上。因此，如果需要执行 DOM 操作，或通过 "),s("code",null,"ref"),h(" 获取相应组件，请在 "),s("code",null,"open"),h(" 事件回调中进行。")])],-1),E=s("h2",{id:"guan-bi-shi-xiao-hui-dom-nei-rong"},[s("a",{class:"header-anchor",href:"#guan-bi-shi-xiao-hui-dom-nei-rong"}),h(" 关闭时销毁 DOM 内容")],-1),T=s("p",null,"可在 Dialog 没有显示时，销毁 Dialog 里的内容以达到减少 DOM 节点的作用",-1),j=s("div",null,[s("p",null,[h("需要注意的是，当这个属性被启用时，Dialog 内并不会有任何的 DOM 节点存在，除了 "),s("code",null,"overlay"),h(),s("code",null,"header（如果有）"),h(),s("code",null,"footer（如果有）")])],-1),B=s("pre",null,[s("code",{class:"html"},'<template>\n  <hl-button class="m-r-md" @click="centerDialogVisible = true">点击打开 Dialog</hl-button>\n\n  <hl-dialog\n    title="提示"\n    v-model="centerDialogVisible"\n    width="30%"\n    destroy-on-close\n  >\n    <span>需要注意在 Dialog 打开前是这条内容和下面的内容都是不会被渲染的</span>\n    <strong>额外的内容</strong>\n    <template #footer>\n      <span class="dialog-footer">\n        <hl-button @click="centerDialogVisible = false">取 消</hl-button>\n        <hl-button type="primary" @click="centerDialogVisible = false" class="m-l-md">确 定</hl-button>\n      </span>\n    </template>\n  </hl-dialog>\n</template>\n\n<script>\nimport { defineComponent, ref } from \'vue\'\nexport default defineComponent({\n  setup() {\n    const centerDialogVisible = ref(false)\n    return {\n      centerDialogVisible,\n    }\n  }\n})\n<\/script>\n')],-1),O=s("h2",{id:"panelshu-xing"},[s("a",{class:"header-anchor",href:"#panelshu-xing"}),h(" Panel属性")],-1),U=s("p",null,"由于 Dialog 基于 Panel 组件构造，所以可以在 Dialog 上直接应用 Panel 组件属性。",-1),L=s("div",null,[s("p",null,"具体属性请参考Panel文档。注意boolean值属性需要写全，不能用简写")],-1),W=s("pre",null,[s("code",{class:"html"},'<template>\n  <hl-button class="m-r-md" @click="outerVisible = true">点击打Dialog</hl-button>\n  <hl-dialog\n    title="测试Panel属性"\n    v-model="outerVisible"\n    width="40%"\n    :borderless="true"\n    radius="0px"\n    header-height="40px"\n    bodyPadding="20px"\n    header-class="header-dialog"\n    bodyClass="footer-dialog"\n  >\n    <p>panel 对话框</p>\n  </hl-dialog>\n</template>\n\n<script>\nimport { defineComponent, ref } from \'vue\'\nexport default defineComponent({\n  setup() {\n    const outerVisible = ref(false)\n    return {\n      outerVisible,\n    }\n  }\n})\n<\/script>\n')],-1),M=b('<h2 id="attributes"><a class="header-anchor" href="#attributes"></a> Attributes</h2><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>model-value / v-model</td><td>是否显示 Dialog</td><td>boolean</td><td>—</td><td>—</td></tr><tr><td>width</td><td>Dialog 的宽度。showAs=drawer，position=top / bottom，设置为 100%</td><td>string</td><td>—</td><td>-</td></tr><tr><td>height</td><td>Dialog 的高度。showAs=drawer，position=left / right，设置为 100%</td><td>string</td><td>—</td><td>-</td></tr><tr><td>top</td><td>Dialog CSS 中的 top 值</td><td>string</td><td>—</td><td>-</td></tr><tr><td>modal</td><td>是否需要遮罩层</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>append-to-body</td><td>Dialog 自身是否插入至 body 元素上。嵌套的 Dialog 必须指定该属性并赋值为 true</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>lock-scroll</td><td>是否在 Dialog 出现时将 body 滚动锁定</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>custom-class</td><td>Dialog 的自定义类名</td><td>string</td><td>—</td><td>—</td></tr><tr><td>open-delay</td><td>Dialog 打开的延时时间，单位毫秒</td><td>number</td><td>—</td><td>0</td></tr><tr><td>close-delay</td><td>Dialog 关闭的延时时间，单位毫秒</td><td>number</td><td>—</td><td>0</td></tr><tr><td>close-on-click-modal</td><td>是否可以通过点击 modal 关闭 Dialog</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>close-on-press-escape</td><td>是否可以通过按下 ESC 关闭 Dialog</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>show-close</td><td>是否显示关闭按钮</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>before-close</td><td>关闭前的回调，会暂停 Dialog 的关闭</td><td>function(done)，done 用于关闭 Dialog</td><td>—</td><td>—</td></tr><tr><td>destroy-on-close</td><td>关闭时销毁 Dialog 中的元素</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>modal-class</td><td>弹窗自定义类名</td><td>string</td><td>—</td><td>-</td></tr><tr><td>showAs</td><td>弹窗类型。设置为 drawer 时，请配合 placement 使用</td><td>string</td><td>dialog / drawer</td><td>dialog</td></tr><tr><td>animation-name</td><td>Dialog 动画类型，仅对dialog类型生效。参考内置过度动画文档</td><td>string</td><td>-</td><td>-</td></tr><tr><td>placement</td><td>弹窗位置</td><td>string</td><td>center / top / bottom / left / right / fullscreen</td><td>center</td></tr><tr><td>draggable</td><td>是否可拖动标题部分移动对话框，drawer以及fullscreen模式下无效</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>title</td><td>对话框标题</td><td>string</td><td>—</td><td>-</td></tr><tr><td>z-index</td><td>对话框自定义层级</td><td>number</td><td>—</td><td>-</td></tr></tbody></table><h2 id="slots"><a class="header-anchor" href="#slots"></a> Slots</h2><table><thead><tr><th>name</th><th>说明</th></tr></thead><tbody><tr><td>—</td><td>Dialog 的内容</td></tr><tr><td>header</td><td>Dialog 头部区的内容</td></tr><tr><td>footer</td><td>Dialog 按钮操作区的内容</td></tr></tbody></table><h2 id="events"><a class="header-anchor" href="#events"></a> Events</h2><table><thead><tr><th>事件名称</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>open</td><td>Dialog 打开的回调</td><td>—</td></tr><tr><td>opened</td><td>Dialog 打开动画结束时的回调</td><td>—</td></tr><tr><td>close</td><td>Dialog 关闭的回调</td><td>—</td></tr><tr><td>closed</td><td>Dialog 关闭动画结束时的回调</td><td>—</td></tr></tbody></table>',6);var S=p(g,[["render",function(t,e,l,o,n,d){const u=a("hl-demo0"),h=a("demo-block"),b=a("hl-demo1"),p=a("hl-demo2"),g=a("hl-demo3"),S=a("hl-demo4"),z=a("right-nav");return i(),r("section",f,[s("div",V,[D,k,c(h,null,{source:m((()=>[c(u)])),highlight:m((()=>[y])),default:m((()=>[w])),_:1}),C,v,x,c(h,null,{source:m((()=>[c(b)])),highlight:m((()=>[_])),_:1}),F,P,c(h,null,{source:m((()=>[c(p)])),highlight:m((()=>[A])),_:1}),N,E,T,c(h,null,{source:m((()=>[c(g)])),highlight:m((()=>[B])),default:m((()=>[j])),_:1}),O,U,c(h,null,{source:m((()=>[c(S)])),highlight:m((()=>[W])),default:m((()=>[L])),_:1}),M]),c(z)])}]]);export{S as default};
