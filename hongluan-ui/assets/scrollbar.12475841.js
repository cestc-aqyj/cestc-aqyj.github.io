var t=Object.defineProperty,e=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,n=Object.prototype.propertyIsEnumerable,r=(e,l,n)=>l in e?t(e,l,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[l]=n,d=(t,d)=>{for(var o in d||(d={}))l.call(d,o)&&r(t,o,d[o]);if(e)for(var o of e(d))n.call(d,o)&&r(t,o,d[o]);return t};import{H as o,o as a,C as s,D as c,v as i,P as u,at as h,_ as p,as as m}from"./vue.69b6befa.js";import{_ as b}from"./index.6da685a4.js";import"./hongluan.17b69477.js";import"./highlight.5ad4a187.js";import"./hongluan-icons.f9afdbe4.js";const f={name:"component-doc",components:{"hl-demo0":function(){const{renderList:t,Fragment:e,openBlock:l,createElementBlock:n,toDisplayString:r,createElementVNode:o,resolveComponent:a,withCtx:s,createBlock:c}=h,i={class:"display-block p-md m-b-xs bg-primary text-center text-inverse radius-xs"};return d({render:function(d,u){const h=a("hl-scrollbar");return l(),c(h,{height:"400px"},{default:s((()=>[(l(),n(e,null,t(20,(t=>o("span",i,r(t),1))),64))])),_:1})}},{})}(),"hl-demo1":function(){const{renderList:t,Fragment:e,openBlock:l,createElementBlock:n,toDisplayString:r,createElementVNode:o,resolveComponent:a,withCtx:s,createBlock:c}=h,i={class:"display-flex",style:{gap:"var(--md)"}},u={class:"w-sm static p-md bg-primary text-center text-inverse radius-xs"};return d({render:function(d,h){const p=a("hl-scrollbar");return l(),c(p,null,{default:s((()=>[o("div",i,[(l(),n(e,null,t(20,(t=>o("span",u,r(t),1))),64))])])),_:1})}},{})}(),"hl-demo2":function(){const{createTextVNode:t,resolveComponent:e,withCtx:l,createVNode:n,renderList:r,Fragment:o,openBlock:a,createElementBlock:s,toDisplayString:c}=h,i=t("添加元素"),u=t("删除元素"),p={class:"display-block p-md m-b-xs bg-primary text-center text-inverse radius-xs"};const{defineComponent:m,ref:b}=h,f=m({setup(){const t=b(3);return{count:t,add:()=>{t.value++},del:()=>{t.value>0&&t.value--}}}});return d({render:function(t,d){const h=e("hl-button"),m=e("hl-scrollbar");return a(),s(o,null,[n(h,{onClick:t.add,class:"m-r-md"},{default:l((()=>[i])),_:1},8,["onClick"]),n(h,{onClick:t.del},{default:l((()=>[u])),_:1},8,["onClick"]),n(m,{"max-height":"400px"},{default:l((()=>[(a(!0),s(o,null,r(t.count,(t=>(a(),s("span",p,c(t),1)))),256))])),_:1})],64)}},f)}(),"hl-demo3":function(){const{renderList:t,Fragment:e,openBlock:l,createElementBlock:n,toDisplayString:r,createElementVNode:o,resolveComponent:a,withCtx:s,createVNode:c}=h,i={ref:"inner"},u={class:"display-block p-md m-b-xs bg-primary text-center text-inverse radius-xs"};const{defineComponent:p,ref:m,onMounted:b}=h,f=p({setup(){const t=m(0),e=m(0),l=m(null),n=m(null);return b((()=>{t.value=l.value.clientHeight-380})),{max:t,value:e,inner:l,scrollbar:n,scroll:({scrollTop:t})=>{e.value=t},inputSlider:t=>{n.value.setScrollTop(t)},formatTooltip:t=>`${t} px`}}});return d({render:function(d,h){const p=a("hl-scrollbar"),m=a("hl-slider");return l(),n(e,null,[c(p,{ref:"scrollbar",height:"400px",always:"",onScroll:d.scroll},{default:s((()=>[o("div",i,[(l(),n(e,null,t(20,(t=>o("span",u,r(t),1))),64))],512)])),_:1},8,["onScroll"]),c(m,{modelValue:d.value,"onUpdate:modelValue":h[0]||(h[0]=t=>d.value=t),onInput:d.inputSlider,max:d.max,"format-tooltip":d.formatTooltip},null,8,["modelValue","onInput","max","format-tooltip"])],64)}},f)}()}},v={class:"doc-main-content"},g={class:"doc-content"},x=c("h1",null,"Scrollbar 滚动条",-1),y=c("p",null,"用于替换浏览器原生滚动条。",-1),k=c("h2",{id:"ji-chu-yong-fa"},[c("a",{class:"header-anchor",href:"#ji-chu-yong-fa"}),p(" 基础用法")],-1),S=c("div",null,[c("p",null,[p("通过 "),c("code",null,"height"),p(" 属性设置滚动条高度，若不设置则根据父容器高度自适应。")])],-1),C=c("pre",null,[c("code",{class:"html"},'<template>\n  <hl-scrollbar height="400px">\n    <span class="display-block p-md m-b-xs bg-primary text-center text-inverse radius-xs" v-for="item in 20">{{ item }}</span>\n  </hl-scrollbar>\n</template>\n')],-1),w=c("h2",{id:"heng-xiang-gun-dong"},[c("a",{class:"header-anchor",href:"#heng-xiang-gun-dong"}),p(" 横向滚动")],-1),T=c("div",null,[c("p",null,"当元素宽度大于滚动条宽度时，会显示横向滚动条，也可以使用鼠标滚轮进行横向滚动。")],-1),_=c("pre",null,[c("code",{class:"html"},'<template>\n  <hl-scrollbar>\n    <div class="display-flex" style="gap: var(--md)">\n      <span class="w-sm static p-md bg-primary text-center text-inverse radius-xs" v-for="item in 20">{{ item }}</span>\n    </div>\n  </hl-scrollbar>\n</template>\n')],-1),j=c("h2",{id:"zui-da-gao-du"},[c("a",{class:"header-anchor",href:"#zui-da-gao-du"}),p(" 最大高度")],-1),B=c("div",null,[c("p",null,"当元素高度超过最大高度，才会显示滚动条。")],-1),E=c("pre",null,[c("code",{class:"html"},'<template>\n  <hl-button @click="add" class="m-r-md">添加元素</hl-button>\n  <hl-button @click="del">删除元素</hl-button>\n  <hl-scrollbar max-height="400px">\n    <span class="display-block p-md m-b-xs bg-primary text-center text-inverse radius-xs" v-for="item in count">{{ item }}</span>\n  </hl-scrollbar>\n</template>\n\n<script>\nimport { defineComponent, ref } from \'vue\'\nexport default defineComponent({\n  setup() {\n    const count = ref(3)\n\n    const add = () => {\n      count.value++\n    }\n    const del = () => {\n      if (count.value > 0) {\n        count.value--\n      }\n    }\n    return {\n      count,\n      add,\n      del,\n    }\n  }\n})\n<\/script>\n')],-1),V=c("h3",{id:"shou-dong-gun-dong"},[c("a",{class:"header-anchor",href:"#shou-dong-gun-dong"}),p(" 手动滚动")],-1),L=c("div",null,[c("p",null,[p("通过使用 "),c("code",null,"setScrollTop"),p(" 与 "),c("code",null,"setScrollLeft"),p(" 方法，可以手动控制滚动条滚动。")])],-1),N=c("pre",null,[c("code",{class:"html"},'\n<template>\n  <hl-scrollbar ref="scrollbar" height="400px" always @scroll="scroll">\n    <div ref="inner">\n      <span class="display-block p-md m-b-xs bg-primary text-center text-inverse radius-xs" v-for="item in 20">{{ item }}</span>\n    </div>\n  </hl-scrollbar>\n  <hl-slider v-model="value" @input="inputSlider" :max="max" :format-tooltip="formatTooltip"></hl-slider>\n</template>\n\n<script>\nimport { defineComponent, ref, onMounted } from \'vue\'\nexport default defineComponent({\n  setup() {\n    const max = ref(0)\n    const value = ref(0)\n    const inner = ref(null)\n    const scrollbar = ref(null)\n\n    const inputSlider = (value) => {\n      scrollbar.value.setScrollTop(value)\n    }\n    const formatTooltip = (value) => {\n      return `${value} px`\n    }\n\n    const scroll = ({ scrollTop }) => {\n      value.value = scrollTop\n    }\n\n    onMounted(() => {\n      max.value = inner.value.clientHeight - 380\n    })\n\n    return {\n      max,\n      value,\n      inner,\n      scrollbar,\n      scroll,\n      inputSlider,\n      formatTooltip,\n    }\n  }\n})\n<\/script>\n')],-1),O=m('<h3 id="scrollbar-attributes"><a class="header-anchor" href="#scrollbar-attributes"></a> Scrollbar Attributes</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>height</td><td>滚动条高度</td><td>string / number</td><td>—</td><td>—</td></tr><tr><td>max-height</td><td>滚动条最大高度</td><td>string / number</td><td>—</td><td>—</td></tr><tr><td>native</td><td>是否使用原生滚动条样式</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>wrap-style</td><td>包裹容器的自定义样式</td><td>string</td><td>—</td><td>—</td></tr><tr><td>wrap-class</td><td>包裹容器的自定义类名</td><td>string</td><td>—</td><td>—</td></tr><tr><td>view-style</td><td>视图的自定义样式</td><td>string</td><td>—</td><td>—</td></tr><tr><td>view-class</td><td>视图的自定义类名</td><td>string</td><td>—</td><td>—</td></tr><tr><td>noresize</td><td>不响应容器尺寸变化，如果容器尺寸不会发生变化，最好设置它可以优化性能</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>tag</td><td>视图的元素标签</td><td>string</td><td>—</td><td>div</td></tr><tr><td>always</td><td>滚动条总是显示</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>min-size</td><td>滚动条最小尺寸</td><td>number</td><td>—</td><td>20</td></tr></tbody></table><h3 id="scrollbar-events"><a class="header-anchor" href="#scrollbar-events"></a> Scrollbar Events</h3><table><thead><tr><th>事件名称</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>scroll</td><td>滚动时触发的事件</td><td>滚动距离 { scrollLeft, scrollTop }</td></tr></tbody></table><h3 id="scrollbar-methods"><a class="header-anchor" href="#scrollbar-methods"></a> Scrollbar Methods</h3><table><thead><tr><th>方法名</th><th>说明</th><th>参数</th></tr></thead><tbody><tr><td>setScrollTop</td><td>设置滚动条到顶部的距离</td><td>(scrollTop: number)</td></tr><tr><td>setScrollLeft</td><td>设置滚动条到左边的距离</td><td>(scrollLeft: number)</td></tr><tr><td>update</td><td>手动更新滚动条状态</td><td>—</td></tr></tbody></table>',6);var D=b(f,[["render",function(t,e,l,n,r,d){const h=o("hl-demo0"),p=o("demo-block"),m=o("hl-demo1"),b=o("hl-demo2"),f=o("hl-demo3"),D=o("right-nav");return a(),s("section",v,[c("div",g,[x,y,k,i(p,null,{source:u((()=>[i(h)])),highlight:u((()=>[C])),default:u((()=>[S])),_:1}),w,i(p,null,{source:u((()=>[i(m)])),highlight:u((()=>[_])),default:u((()=>[T])),_:1}),j,i(p,null,{source:u((()=>[i(b)])),highlight:u((()=>[E])),default:u((()=>[B])),_:1}),V,i(p,null,{source:u((()=>[i(f)])),highlight:u((()=>[N])),default:u((()=>[L])),_:1}),O]),i(D)])}]]);export{D as default};
