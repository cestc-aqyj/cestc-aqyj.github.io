(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["DOCS zh-CN58"],{

/***/ "./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js?!./website/md-loader/index.js!./website/docs/zh-CN/tree.md?vue&type=script&lang=ts":
/*!*********************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/vue-loader/dist??ref--2-0!./website/md-loader!./website/docs/zh-CN/tree.md?vue&type=script&lang=ts ***!
  \*********************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ \"./node_modules/vue/dist/vue.esm-browser.js\");\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'component-doc',\n  components: {\n    \"hl-demo0\": function () {\n      const {\n        resolveComponent: _resolveComponent,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_0__;\n\n      function render(_ctx, _cache) {\n        const _component_hl_tree = _resolveComponent(\"hl-tree\");\n\n        return _openBlock(), _createBlock(_component_hl_tree, {\n          data: _ctx.data,\n          props: _ctx.defaultProps,\n          onNodeClick: _ctx.handleNodeClick\n        }, null, 8\n        /* PROPS */\n        , [\"data\", \"props\", \"onNodeClick\"]);\n      }\n\n      const {\n        defineComponent,\n        ref\n      } = vue__WEBPACK_IMPORTED_MODULE_0__;\n      const democomponentExport = defineComponent({\n        setup() {\n          const data = ref([{\n            label: '一级 1',\n            children: [{\n              label: '二级 1-1',\n              children: [{\n                label: '三级 1-1-1'\n              }]\n            }]\n          }, {\n            label: '一级 2',\n            children: [{\n              label: '二级 2-1',\n              children: [{\n                label: '三级 2-1-1'\n              }]\n            }, {\n              label: '二级 2-2',\n              children: [{\n                label: '三级 2-2-1'\n              }]\n            }]\n          }, {\n            label: '一级 3',\n            children: [{\n              label: '二级 3-1',\n              children: [{\n                label: '三级 3-1-1'\n              }]\n            }, {\n              label: '二级 3-2',\n              children: [{\n                label: '三级 3-2-1'\n              }]\n            }]\n          }]);\n          const defaultProps = ref({\n            children: 'children',\n            label: 'label'\n          });\n\n          const handleNodeClick = data => {\n            console.log(data);\n          };\n\n          return {\n            data,\n            defaultProps,\n            handleNodeClick\n          };\n        }\n\n      });\n      return {\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"hl-demo1\": function () {\n      const {\n        resolveComponent: _resolveComponent,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_0__;\n\n      function render(_ctx, _cache) {\n        const _component_hl_tree = _resolveComponent(\"hl-tree\");\n\n        return _openBlock(), _createBlock(_component_hl_tree, {\n          props: _ctx.props,\n          load: _ctx.loadNode,\n          lazy: \"\",\n          \"show-checkbox\": \"\",\n          onCheckChange: _ctx.handleCheckChange\n        }, null, 8\n        /* PROPS */\n        , [\"props\", \"load\", \"onCheckChange\"]);\n      }\n\n      const {\n        defineComponent,\n        ref\n      } = vue__WEBPACK_IMPORTED_MODULE_0__;\n      const democomponentExport = defineComponent({\n        setup() {\n          const props = ref({\n            label: 'name',\n            children: 'zones'\n          });\n          const count = ref(1);\n\n          const handleCheckChange = (data, checked, indeterminate) => {\n            console.log(data, checked, indeterminate);\n          };\n\n          const handleNodeClick = data => {\n            console.log(data);\n          };\n\n          const loadNode = (node, resolve) => {\n            if (node.level === 0) {\n              return resolve([{\n                name: 'region1'\n              }, {\n                name: 'region2'\n              }]);\n            }\n\n            if (node.level > 3) return resolve([]);\n            var hasChild;\n\n            if (node.data.name === 'region1') {\n              hasChild = true;\n            } else if (node.data.name === 'region2') {\n              hasChild = false;\n            } else {\n              hasChild = Math.random() > 0.5;\n            }\n\n            setTimeout(() => {\n              var data;\n\n              if (hasChild) {\n                data = [{\n                  name: 'zone' + count.value++\n                }, {\n                  name: 'zone' + count.value++\n                }];\n              } else {\n                data = [];\n              }\n\n              resolve(data);\n            }, 500);\n          };\n\n          return {\n            props,\n            count,\n            handleCheckChange,\n            handleNodeClick,\n            loadNode\n          };\n        }\n\n      });\n      return {\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"hl-demo2\": function () {\n      const {\n        resolveComponent: _resolveComponent,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_0__;\n\n      function render(_ctx, _cache) {\n        const _component_hl_tree = _resolveComponent(\"hl-tree\");\n\n        return _openBlock(), _createBlock(_component_hl_tree, {\n          props: _ctx.props,\n          load: _ctx.loadNode,\n          lazy: \"\",\n          \"show-checkbox\": \"\"\n        }, null, 8\n        /* PROPS */\n        , [\"props\", \"load\"]);\n      }\n\n      const {\n        defineComponent,\n        ref\n      } = vue__WEBPACK_IMPORTED_MODULE_0__;\n      const democomponentExport = defineComponent({\n        setup() {\n          const props = ref({\n            label: 'name',\n            children: 'zones',\n            isLeaf: 'leaf'\n          });\n\n          const loadNode = (node, resolve) => {\n            if (node.level === 0) {\n              return resolve([{\n                name: 'region'\n              }]);\n            }\n\n            if (node.level > 1) return resolve([]);\n            setTimeout(() => {\n              const data = [{\n                name: 'leaf',\n                leaf: true\n              }, {\n                name: 'zone'\n              }];\n              resolve(data);\n            }, 2000);\n          };\n\n          return {\n            props,\n            loadNode\n          };\n        }\n\n      });\n      return {\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"hl-demo3\": function () {\n      const {\n        resolveComponent: _resolveComponent,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_0__;\n\n      function render(_ctx, _cache) {\n        const _component_hl_tree = _resolveComponent(\"hl-tree\");\n\n        return _openBlock(), _createBlock(_component_hl_tree, {\n          data: _ctx.data,\n          \"show-checkbox\": \"\",\n          \"node-key\": \"id\",\n          \"default-expanded-keys\": [2, 3],\n          \"default-checked-keys\": [5],\n          props: _ctx.defaultProps\n        }, null, 8\n        /* PROPS */\n        , [\"data\", \"props\"]);\n      }\n\n      const {\n        defineComponent,\n        ref\n      } = vue__WEBPACK_IMPORTED_MODULE_0__;\n      const democomponentExport = defineComponent({\n        setup() {\n          const data = ref([{\n            id: 1,\n            label: '一级 1',\n            children: [{\n              id: 4,\n              label: '二级 1-1',\n              children: [{\n                id: 9,\n                label: '三级 1-1-1'\n              }, {\n                id: 10,\n                label: '三级 1-1-2'\n              }]\n            }]\n          }, {\n            id: 2,\n            label: '一级 2',\n            children: [{\n              id: 5,\n              label: '二级 2-1'\n            }, {\n              id: 6,\n              label: '二级 2-2'\n            }]\n          }, {\n            id: 3,\n            label: '一级 3',\n            children: [{\n              id: 7,\n              label: '二级 3-1'\n            }, {\n              id: 8,\n              label: '二级 3-2'\n            }]\n          }]);\n          const defaultProps = ref({\n            children: 'children',\n            label: 'label'\n          });\n          return {\n            data,\n            defaultProps\n          };\n        }\n\n      });\n      return {\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"hl-demo4\": function () {\n      const {\n        resolveComponent: _resolveComponent,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_0__;\n\n      function render(_ctx, _cache) {\n        const _component_hl_tree = _resolveComponent(\"hl-tree\");\n\n        return _openBlock(), _createBlock(_component_hl_tree, {\n          data: _ctx.data,\n          \"show-checkbox\": \"\",\n          \"node-key\": \"id\",\n          \"default-expanded-keys\": [2, 3],\n          \"default-checked-keys\": [5]\n        }, null, 8\n        /* PROPS */\n        , [\"data\"]);\n      }\n\n      const {\n        defineComponent,\n        ref\n      } = vue__WEBPACK_IMPORTED_MODULE_0__;\n      const democomponentExport = defineComponent({\n        setup() {\n          const data = ref([{\n            id: 1,\n            label: '一级 2',\n            children: [{\n              id: 3,\n              label: '二级 2-1',\n              children: [{\n                id: 4,\n                label: '三级 3-1-1'\n              }, {\n                id: 5,\n                label: '三级 3-1-2',\n                disabled: true\n              }]\n            }, {\n              id: 2,\n              label: '二级 2-2',\n              disabled: true,\n              children: [{\n                id: 6,\n                label: '三级 3-2-1'\n              }, {\n                id: 7,\n                label: '三级 3-2-2',\n                disabled: true\n              }]\n            }]\n          }]);\n          const defaultProps = ref({\n            children: 'children',\n            label: 'label'\n          });\n          return {\n            data,\n            defaultProps\n          };\n        }\n\n      });\n      return {\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"hl-demo5\": function () {\n      const {\n        resolveComponent: _resolveComponent,\n        createVNode: _createVNode,\n        createTextVNode: _createTextVNode,\n        withCtx: _withCtx,\n        createElementVNode: _createElementVNode,\n        Fragment: _Fragment,\n        openBlock: _openBlock,\n        createElementBlock: _createElementBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_0__;\n      const _hoisted_1 = {\n        class: \"buttons\"\n      };\n\n      const _hoisted_2 = /*#__PURE__*/_createTextVNode(\"通过 node 获取\");\n\n      const _hoisted_3 = /*#__PURE__*/_createTextVNode(\"通过 key 获取\");\n\n      const _hoisted_4 = /*#__PURE__*/_createTextVNode(\"通过 node 设置\");\n\n      const _hoisted_5 = /*#__PURE__*/_createTextVNode(\"通过 key 设置\");\n\n      const _hoisted_6 = /*#__PURE__*/_createTextVNode(\"清空\");\n\n      function render(_ctx, _cache) {\n        const _component_hl_tree = _resolveComponent(\"hl-tree\");\n\n        const _component_hl_button = _resolveComponent(\"hl-button\");\n\n        return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_hl_tree, {\n          data: _ctx.data,\n          \"show-checkbox\": \"\",\n          \"default-expand-all\": \"\",\n          \"node-key\": \"id\",\n          ref: \"tree\",\n          \"highlight-current\": \"\",\n          props: _ctx.defaultProps\n        }, null, 8\n        /* PROPS */\n        , [\"data\", \"props\"]), _createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_hl_button, {\n          onClick: _ctx.getCheckedNodes\n        }, {\n          default: _withCtx(() => [_hoisted_2]),\n          _: 1\n          /* STABLE */\n\n        }, 8\n        /* PROPS */\n        , [\"onClick\"]), _createVNode(_component_hl_button, {\n          onClick: _ctx.getCheckedKeys\n        }, {\n          default: _withCtx(() => [_hoisted_3]),\n          _: 1\n          /* STABLE */\n\n        }, 8\n        /* PROPS */\n        , [\"onClick\"]), _createVNode(_component_hl_button, {\n          onClick: _ctx.setCheckedNodes\n        }, {\n          default: _withCtx(() => [_hoisted_4]),\n          _: 1\n          /* STABLE */\n\n        }, 8\n        /* PROPS */\n        , [\"onClick\"]), _createVNode(_component_hl_button, {\n          onClick: _ctx.setCheckedKeys\n        }, {\n          default: _withCtx(() => [_hoisted_5]),\n          _: 1\n          /* STABLE */\n\n        }, 8\n        /* PROPS */\n        , [\"onClick\"]), _createVNode(_component_hl_button, {\n          onClick: _ctx.resetChecked\n        }, {\n          default: _withCtx(() => [_hoisted_6]),\n          _: 1\n          /* STABLE */\n\n        }, 8\n        /* PROPS */\n        , [\"onClick\"])])], 64\n        /* STABLE_FRAGMENT */\n        );\n      }\n\n      const {\n        defineComponent,\n        ref\n      } = vue__WEBPACK_IMPORTED_MODULE_0__;\n      const democomponentExport = defineComponent({\n        setup() {\n          const data = ref([{\n            id: 1,\n            label: '一级 1',\n            children: [{\n              id: 4,\n              label: '二级 1-1',\n              children: [{\n                id: 9,\n                label: '三级 1-1-1'\n              }, {\n                id: 10,\n                label: '三级 1-1-2'\n              }]\n            }]\n          }, {\n            id: 2,\n            label: '一级 2',\n            children: [{\n              id: 5,\n              label: '二级 2-1'\n            }, {\n              id: 6,\n              label: '二级 2-2'\n            }]\n          }, {\n            id: 3,\n            label: '一级 3',\n            children: [{\n              id: 7,\n              label: '二级 3-1'\n            }, {\n              id: 8,\n              label: '二级 3-2'\n            }]\n          }]);\n          const defaultProps = ref({\n            children: 'children',\n            label: 'label'\n          });\n          const tree = ref(null);\n\n          const getCheckedNodes = () => {\n            console.log(tree.value.getCheckedNodes());\n          };\n\n          const getCheckedKeys = () => {\n            console.log(tree.value.getCheckedKeys());\n          };\n\n          const setCheckedNodes = () => {\n            tree.value.setCheckedNodes([{\n              id: 5,\n              label: '二级 2-1'\n            }, {\n              id: 9,\n              label: '三级 1-1-1'\n            }]);\n          };\n\n          const setCheckedKeys = () => {\n            tree.value.setCheckedKeys([3]);\n          };\n\n          const resetChecked = () => {\n            tree.value.setCheckedKeys([]);\n          };\n\n          return {\n            tree,\n            data,\n            defaultProps,\n            getCheckedNodes,\n            getCheckedKeys,\n            setCheckedNodes,\n            setCheckedKeys,\n            resetChecked\n          };\n        }\n\n      });\n      return {\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"hl-demo6\": function () {\n      const {\n        createElementVNode: _createElementVNode,\n        resolveComponent: _resolveComponent,\n        createVNode: _createVNode,\n        withCtx: _withCtx,\n        toDisplayString: _toDisplayString,\n        openBlock: _openBlock,\n        createElementBlock: _createElementBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_0__;\n      const _hoisted_1 = {\n        class: \"custom-tree-container\"\n      };\n      const _hoisted_2 = {\n        class: \"block\"\n      };\n\n      const _hoisted_3 = /*#__PURE__*/_createElementVNode(\"p\", null, \"使用 render-content\", -1\n      /* HOISTED */\n      );\n\n      const _hoisted_4 = {\n        class: \"block\"\n      };\n\n      const _hoisted_5 = /*#__PURE__*/_createElementVNode(\"p\", null, \"使用 slot\", -1\n      /* HOISTED */\n      );\n\n      const _hoisted_6 = [\"onClick\"];\n      const _hoisted_7 = [\"onClick\"];\n\n      function render(_ctx, _cache) {\n        const _component_hl_tree = _resolveComponent(\"hl-tree\");\n\n        const _component_two_folder = _resolveComponent(\"two-folder\");\n\n        const _component_hl_icon = _resolveComponent(\"hl-icon\");\n\n        const _component_hl_group = _resolveComponent(\"hl-group\");\n\n        return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createVNode(_component_hl_tree, {\n          data: _ctx.data,\n          \"show-checkbox\": \"\",\n          \"node-key\": \"id\",\n          \"default-expand-all\": \"\",\n          \"expand-on-click-node\": false,\n          \"render-content\": _ctx.renderContent\n        }, null, 8\n        /* PROPS */\n        , [\"data\", \"render-content\"])]), _createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _createVNode(_component_hl_tree, {\n          data: _ctx.data,\n          \"show-checkbox\": \"\",\n          \"node-key\": \"id\",\n          \"default-expand-all\": \"\",\n          \"expand-on-click-node\": false\n        }, {\n          default: _withCtx(({\n            node,\n            data\n          }) => [_createVNode(_component_hl_group, {\n            full: \"\",\n            gap: \"var(--xs)\",\n            align: \"between\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_hl_icon, {\n              size: \"xs\",\n              class: \"static\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_two_folder)]),\n              _: 1\n              /* STABLE */\n\n            }), _createElementVNode(\"span\", null, _toDisplayString(node.label), 1\n            /* TEXT */\n            ), _createVNode(_component_hl_group, {\n              gap: \"var(--md)\",\n              class: \"static\"\n            }, {\n              default: _withCtx(() => [_createElementVNode(\"a\", {\n                onClick: $event => _ctx.append(data)\n              }, \" Append \", 8\n              /* PROPS */\n              , _hoisted_6), _createElementVNode(\"a\", {\n                onClick: $event => _ctx.remove(node, data)\n              }, \" Delete \", 8\n              /* PROPS */\n              , _hoisted_7)]),\n              _: 2\n              /* DYNAMIC */\n\n            }, 1024\n            /* DYNAMIC_SLOTS */\n            )]),\n            _: 2\n            /* DYNAMIC */\n\n          }, 1024\n          /* DYNAMIC_SLOTS */\n          )]),\n          _: 1\n          /* STABLE */\n\n        }, 8\n        /* PROPS */\n        , [\"data\"])])]);\n      }\n\n      const {\n        defineComponent,\n        ref\n      } = vue__WEBPACK_IMPORTED_MODULE_0__;\n      const democomponentExport = defineComponent({\n        setup() {\n          let id = 1000;\n          const data = ref([{\n            id: 1,\n            label: '一级 1',\n            children: [{\n              id: 4,\n              label: '二级 1-1',\n              children: [{\n                id: 9,\n                label: '三级 1-1-1'\n              }, {\n                id: 10,\n                label: '三级 1-1-2'\n              }]\n            }]\n          }, {\n            id: 2,\n            label: '一级 2',\n            children: [{\n              id: 5,\n              label: '二级 2-1'\n            }, {\n              id: 6,\n              label: '二级 2-2'\n            }]\n          }, {\n            id: 3,\n            label: '一级 3',\n            children: [{\n              id: 7,\n              label: '二级 3-1'\n            }, {\n              id: 8,\n              label: '二级 3-2'\n            }]\n          }]);\n\n          const append = d => {\n            const newChild = {\n              id: id++,\n              label: 'testtest',\n              children: []\n            };\n\n            if (!d.children) {\n              d.children = [];\n            }\n\n            d.children.push(newChild);\n          };\n\n          const remove = (node, d) => {\n            const parent = node.parent;\n            const children = parent.data.children || parent.data;\n            const index = children.findIndex(d => d.id === d.id);\n            children.splice(index, 1);\n          };\n\n          const renderContent = (h, {\n            node,\n            data,\n            store\n          }) => {\n            return h('span', {\n              class: 'custom-tree-node'\n            }, h('span', null, node.label), h('span', null, h('a', {\n              onClick: () => append(data)\n            }, 'Append '), h('a', {\n              onClick: () => remove(node, data)\n            }, 'Delete')));\n          };\n\n          return {\n            data,\n            append,\n            remove,\n            renderContent\n          };\n        }\n\n      });\n      return {\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"hl-demo7\": function () {\n      const {\n        resolveComponent: _resolveComponent,\n        createVNode: _createVNode,\n        Fragment: _Fragment,\n        openBlock: _openBlock,\n        createElementBlock: _createElementBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_0__;\n\n      function render(_ctx, _cache) {\n        const _component_hl_input = _resolveComponent(\"hl-input\");\n\n        const _component_hl_tree = _resolveComponent(\"hl-tree\");\n\n        return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_hl_input, {\n          placeholder: \"输入关键字进行过滤\",\n          modelValue: _ctx.filterText,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.filterText = $event)\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\"]), _createVNode(_component_hl_tree, {\n          class: \"filter-tree\",\n          data: _ctx.data,\n          props: _ctx.defaultProps,\n          \"default-expand-all\": \"\",\n          \"filter-node-method\": _ctx.filterNode,\n          ref: \"tree\"\n        }, null, 8\n        /* PROPS */\n        , [\"data\", \"props\", \"filter-node-method\"])], 64\n        /* STABLE_FRAGMENT */\n        );\n      }\n\n      const {\n        defineComponent,\n        ref,\n        watch\n      } = vue__WEBPACK_IMPORTED_MODULE_0__;\n      const democomponentExport = defineComponent({\n        setup() {\n          const filterText = ref('');\n          const tree = ref(null);\n          const data = ref([{\n            id: 1,\n            label: '一级 1',\n            children: [{\n              id: 4,\n              label: '二级 1-1',\n              children: [{\n                id: 9,\n                label: '三级 1-1-1'\n              }, {\n                id: 10,\n                label: '三级 1-1-2'\n              }]\n            }]\n          }, {\n            id: 2,\n            label: '一级 2',\n            children: [{\n              id: 5,\n              label: '二级 2-1'\n            }, {\n              id: 6,\n              label: '二级 2-2'\n            }]\n          }, {\n            id: 3,\n            label: '一级 3',\n            children: [{\n              id: 7,\n              label: '二级 3-1'\n            }, {\n              id: 8,\n              label: '二级 3-2'\n            }]\n          }]);\n          const defaultProps = ref({\n            children: 'children',\n            label: 'label'\n          });\n\n          const filterNode = (value, data) => {\n            if (!value) return true;\n            return data.label.indexOf(value) !== -1;\n          };\n\n          watch(filterText, val => {\n            tree.value.filter(val);\n          });\n          return {\n            data,\n            tree,\n            defaultProps,\n            filterText,\n            filterNode\n          };\n        }\n\n      });\n      return {\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"hl-demo8\": function () {\n      const {\n        resolveComponent: _resolveComponent,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_0__;\n\n      function render(_ctx, _cache) {\n        const _component_hl_tree = _resolveComponent(\"hl-tree\");\n\n        return _openBlock(), _createBlock(_component_hl_tree, {\n          data: _ctx.data,\n          props: _ctx.defaultProps,\n          accordion: \"\",\n          onNodeClick: _ctx.handleNodeClick\n        }, null, 8\n        /* PROPS */\n        , [\"data\", \"props\", \"onNodeClick\"]);\n      }\n\n      const {\n        defineComponent,\n        ref\n      } = vue__WEBPACK_IMPORTED_MODULE_0__;\n      const democomponentExport = defineComponent({\n        setup() {\n          const data = ref([{\n            label: '一级 1',\n            children: [{\n              label: '二级 1-1',\n              children: [{\n                label: '三级 1-1-1'\n              }]\n            }]\n          }, {\n            label: '一级 2',\n            children: [{\n              label: '二级 2-1',\n              children: [{\n                label: '三级 2-1-1'\n              }]\n            }, {\n              label: '二级 2-2',\n              children: [{\n                label: '三级 2-2-1'\n              }]\n            }]\n          }, {\n            label: '一级 3',\n            children: [{\n              label: '二级 3-1',\n              children: [{\n                label: '三级 3-1-1'\n              }]\n            }, {\n              label: '二级 3-2',\n              children: [{\n                label: '三级 3-2-1'\n              }]\n            }]\n          }]);\n          const defaultProps = ref({\n            children: 'children',\n            label: 'label'\n          });\n\n          const handleNodeClick = data => {\n            console.log(data);\n          };\n\n          return {\n            data,\n            defaultProps,\n            handleNodeClick\n          };\n        }\n\n      });\n      return {\n        render,\n        ...democomponentExport\n      };\n    }(),\n    \"hl-demo9\": function () {\n      const {\n        resolveComponent: _resolveComponent,\n        openBlock: _openBlock,\n        createBlock: _createBlock\n      } = vue__WEBPACK_IMPORTED_MODULE_0__;\n\n      function render(_ctx, _cache) {\n        const _component_hl_tree = _resolveComponent(\"hl-tree\");\n\n        return _openBlock(), _createBlock(_component_hl_tree, {\n          data: _ctx.data,\n          \"node-key\": \"id\",\n          \"default-expand-all\": \"\",\n          onNodeDragStart: _ctx.handleDragStart,\n          onNodeDragEnter: _ctx.handleDragEnter,\n          onNodeDragLeave: _ctx.handleDragLeave,\n          onNodeDragOver: _ctx.handleDragOver,\n          onNodeDragEnd: _ctx.handleDragEnd,\n          onNodeDrop: _ctx.handleDrop,\n          draggable: \"\",\n          \"allow-drop\": _ctx.allowDrop,\n          \"allow-drag\": _ctx.allowDrag\n        }, null, 8\n        /* PROPS */\n        , [\"data\", \"onNodeDragStart\", \"onNodeDragEnter\", \"onNodeDragLeave\", \"onNodeDragOver\", \"onNodeDragEnd\", \"onNodeDrop\", \"allow-drop\", \"allow-drag\"]);\n      }\n\n      const {\n        defineComponent,\n        ref\n      } = vue__WEBPACK_IMPORTED_MODULE_0__;\n      const democomponentExport = defineComponent({\n        setup() {\n          const data = ref([{\n            id: 1,\n            label: '一级 1',\n            children: [{\n              id: 4,\n              label: '二级 1-1',\n              children: [{\n                id: 9,\n                label: '三级 1-1-1'\n              }, {\n                id: 10,\n                label: '三级 1-1-2'\n              }]\n            }]\n          }, {\n            id: 2,\n            label: '一级 2',\n            children: [{\n              id: 5,\n              label: '二级 2-1'\n            }, {\n              id: 6,\n              label: '二级 2-2'\n            }]\n          }, {\n            id: 3,\n            label: '一级 3',\n            children: [{\n              id: 7,\n              label: '二级 3-1'\n            }, {\n              id: 8,\n              label: '二级 3-2',\n              children: [{\n                id: 11,\n                label: '三级 3-2-1'\n              }, {\n                id: 12,\n                label: '三级 3-2-2'\n              }, {\n                id: 13,\n                label: '三级 3-2-3'\n              }]\n            }]\n          }]);\n          const defaultProps = ref({\n            children: 'children',\n            label: 'label'\n          });\n\n          const handleDragStart = (node, ev) => {\n            console.log('drag start', node);\n          };\n\n          const handleDragEnter = (draggingNode, dropNode, ev) => {\n            console.log('tree drag enter: ', dropNode.label);\n          };\n\n          const handleDragLeave = (draggingNode, dropNode, ev) => {\n            console.log('tree drag leave: ', dropNode.label);\n          };\n\n          const handleDragOver = (draggingNode, dropNode, ev) => {\n            console.log('tree drag over: ', dropNode.label);\n          };\n\n          const handleDragEnd = (draggingNode, dropNode, dropType, ev) => {\n            console.log('tree drag end: ', dropNode && dropNode.label, dropType);\n          };\n\n          const handleDrop = (draggingNode, dropNode, dropType, ev) => {\n            console.log('tree drop: ', dropNode.label, dropType);\n          };\n\n          const allowDrop = (draggingNode, dropNode, type) => {\n            if (dropNode.data.label === '二级 3-1') {\n              return type !== 'inner';\n            } else {\n              return true;\n            }\n          };\n\n          const allowDrag = draggingNode => {\n            return draggingNode.data.label.indexOf('三级 3-2-2') === -1;\n          };\n\n          return {\n            data,\n            defaultProps,\n            handleDragStart,\n            handleDragEnter,\n            handleDragLeave,\n            handleDragOver,\n            handleDragEnd,\n            handleDrop,\n            allowDrop,\n            allowDrag\n          };\n        }\n\n      });\n      return {\n        render,\n        ...democomponentExport\n      };\n    }()\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js?!./website/md-loader/index.js!./website/docs/zh-CN/tree.md?vue&type=script&lang=ts\n");

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/templateLoader.js?!./node_modules/vue-loader/dist/index.js?!./website/md-loader/index.js!./website/docs/zh-CN/tree.md?vue&type=template&id=fee90450":
/*!************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/vue-loader/dist/templateLoader.js??ref--6!./node_modules/vue-loader/dist??ref--2-0!./website/md-loader!./website/docs/zh-CN/tree.md?vue&type=template&id=fee90450 ***!
  \************************************************************************************************************************************************************************************************************************/
/*! exports provided: render */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return render; });\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ \"./node_modules/vue/dist/vue.esm-browser.js\");\n\nconst _hoisted_1 = {\n  class: \"doc-main-content\"\n};\nconst _hoisted_2 = {\n  class: \"doc-content\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"h1\", null, \"Tree 树形控件\", -1\n/* HOISTED */\n);\n\nconst _hoisted_4 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"p\", null, \"用清晰的层级结构展示信息，可展开或折叠。\", -1\n/* HOISTED */\n);\n\nconst _hoisted_5 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"pre\", null, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", {\n  class: \"html\"\n}, \"<template>\\n  <hl-tree :data=\\\"data\\\" :props=\\\"defaultProps\\\" @node-click=\\\"handleNodeClick\\\"></hl-tree>\\n</template>\\n\\n<script>\\n  import { defineComponent, ref } from 'vue'\\n  export default defineComponent({\\n    setup() {\\n      const data = ref([\\n        {\\n          label: '一级 1',\\n          children: [\\n            {\\n              label: '二级 1-1',\\n              children: [\\n                {\\n                  label: '三级 1-1-1',\\n                },\\n              ],\\n            },\\n          ],\\n        },\\n        {\\n          label: '一级 2',\\n          children: [\\n            {\\n              label: '二级 2-1',\\n              children: [\\n                {\\n                  label: '三级 2-1-1',\\n                },\\n              ],\\n            },\\n            {\\n              label: '二级 2-2',\\n              children: [\\n                {\\n                  label: '三级 2-2-1',\\n                },\\n              ],\\n            },\\n          ],\\n        },\\n        {\\n          label: '一级 3',\\n          children: [\\n            {\\n              label: '二级 3-1',\\n              children: [\\n                {\\n                  label: '三级 3-1-1',\\n                },\\n              ],\\n            },\\n            {\\n              label: '二级 3-2',\\n              children: [\\n                {\\n                  label: '三级 3-2-1',\\n                },\\n              ],\\n            },\\n          ],\\n        },\\n      ])\\n      const defaultProps = ref({\\n        children: 'children',\\n        label: 'label',\\n      })\\n      const handleNodeClick = data => {\\n        console.log(data)\\n      }\\n      return {\\n        data,\\n        defaultProps,\\n        handleNodeClick,\\n      }\\n    },\\n  })\\n</script>\\n\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_6 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"h2\", {\n  id: \"ke-xuan-ze\"\n}, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"a\", {\n  class: \"header-anchor\",\n  href: \"#ke-xuan-ze\"\n}), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" 可选择\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_7 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"p\", null, \"适用于需要选择层级时使用。本例还展示了动态加载节点数据的方法。\", -1\n/* HOISTED */\n);\n\nconst _hoisted_8 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"pre\", null, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", {\n  class: \"html\"\n}, \"<template>\\n  <hl-tree :props=\\\"props\\\" :load=\\\"loadNode\\\" lazy show-checkbox @check-change=\\\"handleCheckChange\\\"> </hl-tree>\\n</template>\\n\\n<script>\\n  import { defineComponent, ref } from 'vue'\\n  export default defineComponent({\\n    setup() {\\n      const props = ref({\\n        label: 'name',\\n        children: 'zones',\\n      })\\n      const count = ref(1)\\n\\n      const handleCheckChange = (data, checked, indeterminate) => {\\n        console.log(data, checked, indeterminate)\\n      }\\n      const handleNodeClick = data => {\\n        console.log(data)\\n      }\\n      const loadNode = (node, resolve) => {\\n        if (node.level === 0) {\\n          return resolve([{ name: 'region1' }, { name: 'region2' }])\\n        }\\n        if (node.level > 3) return resolve([])\\n\\n        var hasChild\\n        if (node.data.name === 'region1') {\\n          hasChild = true\\n        } else if (node.data.name === 'region2') {\\n          hasChild = false\\n        } else {\\n          hasChild = Math.random() > 0.5\\n        }\\n\\n        setTimeout(() => {\\n          var data\\n          if (hasChild) {\\n            data = [\\n              {\\n                name: 'zone' + count.value++,\\n              },\\n              {\\n                name: 'zone' + count.value++,\\n              },\\n            ]\\n          } else {\\n            data = []\\n          }\\n\\n          resolve(data)\\n        }, 500)\\n      }\\n      return {\\n        props,\\n        count,\\n        handleCheckChange,\\n        handleNodeClick,\\n        loadNode,\\n      }\\n    },\\n  })\\n</script>\\n\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_9 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"h2\", {\n  id: \"lan-jia-zai-zi-ding-yi-ye-zi-jie-dian\"\n}, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"a\", {\n  class: \"header-anchor\",\n  href: \"#lan-jia-zai-zi-ding-yi-ye-zi-jie-dian\"\n}), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" 懒加载自定义叶子节点\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_10 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"div\", null, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"p\", null, \"由于在点击节点时才进行该层数据的获取，默认情况下 Tree 无法预知某个节点是否为叶子节点，所以会为每个节点添加一个下拉按钮，如果节点没有下层数据，则点击后下拉按钮会消失。同时，你也可以提前告知 Tree 某个节点是否为叶子节点，从而避免在叶子节点前渲染下拉按钮。\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_11 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"pre\", null, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", {\n  class: \"html\"\n}, \"<template>\\n  <hl-tree :props=\\\"props\\\" :load=\\\"loadNode\\\" lazy show-checkbox> </hl-tree>\\n</template>\\n\\n<script>\\n  import { defineComponent, ref } from 'vue'\\n  export default defineComponent({\\n    setup() {\\n      const props = ref({\\n        label: 'name',\\n        children: 'zones',\\n        isLeaf: 'leaf',\\n      })\\n      const loadNode = (node, resolve) => {\\n        if (node.level === 0) {\\n          return resolve([{ name: 'region' }])\\n        }\\n        if (node.level > 1) return resolve([])\\n\\n        setTimeout(() => {\\n          const data = [\\n            {\\n              name: 'leaf',\\n              leaf: true,\\n            },\\n            {\\n              name: 'zone',\\n            },\\n          ]\\n\\n          resolve(data)\\n        }, 2000)\\n      }\\n      return {\\n        props,\\n        loadNode,\\n      }\\n    },\\n  })\\n</script>\\n\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_12 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"h2\", {\n  id: \"mo-ren-zhan-kai-he-mo-ren-xuan-zhong\"\n}, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"a\", {\n  class: \"header-anchor\",\n  href: \"#mo-ren-zhan-kai-he-mo-ren-xuan-zhong\"\n}), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" 默认展开和默认选中\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_13 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"p\", null, \"可将 Tree 的某些节点设置为默认展开或默认选中\", -1\n/* HOISTED */\n);\n\nconst _hoisted_14 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"div\", null, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"p\", null, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"分别通过\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", null, \"default-expanded-keys\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"和\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", null, \"default-checked-keys\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"设置默认展开和默认选中的节点。需要注意的是，此时必须设置\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", null, \"node-key\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"，其值为节点数据中的一个字段名，该字段在整棵树中是唯一的。\")])], -1\n/* HOISTED */\n);\n\nconst _hoisted_15 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"pre\", null, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", {\n  class: \"html\"\n}, \"<template>\\n  <hl-tree :data=\\\"data\\\" show-checkbox node-key=\\\"id\\\" :default-expanded-keys=\\\"[2, 3]\\\" :default-checked-keys=\\\"[5]\\\" :props=\\\"defaultProps\\\"> </hl-tree>\\n</template>\\n\\n<script>\\n  import { defineComponent, ref } from 'vue'\\n  export default defineComponent({\\n    setup() {\\n      const data = ref([\\n        {\\n          id: 1,\\n          label: '一级 1',\\n          children: [\\n            {\\n              id: 4,\\n              label: '二级 1-1',\\n              children: [\\n                {\\n                  id: 9,\\n                  label: '三级 1-1-1',\\n                },\\n                {\\n                  id: 10,\\n                  label: '三级 1-1-2',\\n                },\\n              ],\\n            },\\n          ],\\n        },\\n        {\\n          id: 2,\\n          label: '一级 2',\\n          children: [\\n            {\\n              id: 5,\\n              label: '二级 2-1',\\n            },\\n            {\\n              id: 6,\\n              label: '二级 2-2',\\n            },\\n          ],\\n        },\\n        {\\n          id: 3,\\n          label: '一级 3',\\n          children: [\\n            {\\n              id: 7,\\n              label: '二级 3-1',\\n            },\\n            {\\n              id: 8,\\n              label: '二级 3-2',\\n            },\\n          ],\\n        },\\n      ])\\n      const defaultProps = ref({\\n        children: 'children',\\n        label: 'label',\\n      })\\n      return {\\n        data,\\n        defaultProps,\\n      }\\n    },\\n  })\\n</script>\\n\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_16 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"h2\", {\n  id: \"jin-yong-zhuang-tai\"\n}, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"a\", {\n  class: \"header-anchor\",\n  href: \"#jin-yong-zhuang-tai\"\n}), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" 禁用状态\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_17 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"p\", null, \"可将 Tree 的某些节点设置为禁用状态\", -1\n/* HOISTED */\n);\n\nconst _hoisted_18 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"div\", null, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"p\", null, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"通过\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", null, \"disabled\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"设置禁用状态。\")])], -1\n/* HOISTED */\n);\n\nconst _hoisted_19 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"pre\", null, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", {\n  class: \"html\"\n}, \"<template>\\n  <hl-tree :data=\\\"data\\\" show-checkbox node-key=\\\"id\\\" :default-expanded-keys=\\\"[2, 3]\\\" :default-checked-keys=\\\"[5]\\\"> </hl-tree>\\n</template>\\n\\n<script>\\n  import { defineComponent, ref } from 'vue'\\n  export default defineComponent({\\n    setup() {\\n      const data = ref([\\n        {\\n          id: 1,\\n          label: '一级 2',\\n          children: [\\n            {\\n              id: 3,\\n              label: '二级 2-1',\\n              children: [\\n                {\\n                  id: 4,\\n                  label: '三级 3-1-1',\\n                },\\n                {\\n                  id: 5,\\n                  label: '三级 3-1-2',\\n                  disabled: true,\\n                },\\n              ],\\n            },\\n            {\\n              id: 2,\\n              label: '二级 2-2',\\n              disabled: true,\\n              children: [\\n                {\\n                  id: 6,\\n                  label: '三级 3-2-1',\\n                },\\n                {\\n                  id: 7,\\n                  label: '三级 3-2-2',\\n                  disabled: true,\\n                },\\n              ],\\n            },\\n          ],\\n        },\\n      ])\\n      const defaultProps = ref({\\n        children: 'children',\\n        label: 'label',\\n      })\\n      return {\\n        data,\\n        defaultProps,\\n      }\\n    },\\n  })\\n</script>\\n\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_20 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"h2\", {\n  id: \"shu-jie-dian-de-xuan-ze\"\n}, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"a\", {\n  class: \"header-anchor\",\n  href: \"#shu-jie-dian-de-xuan-ze\"\n}), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" 树节点的选择\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_21 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"div\", null, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"p\", null, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"本例展示如何获取和设置选中节点。获取和设置各有两种方式：通过 node 或通过 key。如果需要通过 key 来获取或设置，则必须设置\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", null, \"node-key\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"。\")])], -1\n/* HOISTED */\n);\n\nconst _hoisted_22 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"pre\", null, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", {\n  class: \"html\"\n}, \"<template>\\n  <hl-tree :data=\\\"data\\\" show-checkbox default-expand-all node-key=\\\"id\\\" ref=\\\"tree\\\" highlight-current :props=\\\"defaultProps\\\"> </hl-tree>\\n\\n  <div class=\\\"buttons\\\">\\n    <hl-button @click=\\\"getCheckedNodes\\\">通过 node 获取</hl-button>\\n    <hl-button @click=\\\"getCheckedKeys\\\">通过 key 获取</hl-button>\\n    <hl-button @click=\\\"setCheckedNodes\\\">通过 node 设置</hl-button>\\n    <hl-button @click=\\\"setCheckedKeys\\\">通过 key 设置</hl-button>\\n    <hl-button @click=\\\"resetChecked\\\">清空</hl-button>\\n  </div>\\n</template>\\n\\n<script>\\n  import { defineComponent, ref } from 'vue'\\n  export default defineComponent({\\n    setup() {\\n      const data = ref([\\n        {\\n          id: 1,\\n          label: '一级 1',\\n          children: [\\n            {\\n              id: 4,\\n              label: '二级 1-1',\\n              children: [\\n                {\\n                  id: 9,\\n                  label: '三级 1-1-1',\\n                },\\n                {\\n                  id: 10,\\n                  label: '三级 1-1-2',\\n                },\\n              ],\\n            },\\n          ],\\n        },\\n        {\\n          id: 2,\\n          label: '一级 2',\\n          children: [\\n            {\\n              id: 5,\\n              label: '二级 2-1',\\n            },\\n            {\\n              id: 6,\\n              label: '二级 2-2',\\n            },\\n          ],\\n        },\\n        {\\n          id: 3,\\n          label: '一级 3',\\n          children: [\\n            {\\n              id: 7,\\n              label: '二级 3-1',\\n            },\\n            {\\n              id: 8,\\n              label: '二级 3-2',\\n            },\\n          ],\\n        },\\n      ])\\n      const defaultProps = ref({\\n        children: 'children',\\n        label: 'label',\\n      })\\n      const tree = ref(null)\\n\\n      const getCheckedNodes = () => {\\n        console.log(tree.value.getCheckedNodes())\\n      }\\n      const getCheckedKeys = () => {\\n        console.log(tree.value.getCheckedKeys())\\n      }\\n      const setCheckedNodes = () => {\\n        tree.value.setCheckedNodes([\\n          {\\n            id: 5,\\n            label: '二级 2-1',\\n          },\\n          {\\n            id: 9,\\n            label: '三级 1-1-1',\\n          },\\n        ])\\n      }\\n      const setCheckedKeys = () => {\\n        tree.value.setCheckedKeys([3])\\n      }\\n      const resetChecked = () => {\\n        tree.value.setCheckedKeys([])\\n      }\\n      return {\\n        tree,\\n        data,\\n        defaultProps,\\n        getCheckedNodes,\\n        getCheckedKeys,\\n        setCheckedNodes,\\n        setCheckedKeys,\\n        resetChecked,\\n      }\\n    },\\n  })\\n</script>\\n\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_23 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"h2\", {\n  id: \"zi-ding-yi-jie-dian-nei-rong\"\n}, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"a\", {\n  class: \"header-anchor\",\n  href: \"#zi-ding-yi-jie-dian-nei-rong\"\n}), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" 自定义节点内容\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_24 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"p\", null, \"节点的内容支持自定义，可以在节点区添加按钮或图标等内容\", -1\n/* HOISTED */\n);\n\nconst _hoisted_25 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"div\", null, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"p\", null, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"可以通过两种方法进行树节点内容的自定义：\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", null, \"render-content\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"和 scoped slot。使用\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", null, \"render-content\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"指定渲染函数，该函数返回需要的节点区内容即可。渲染函数的用法请参考 Vue 文档。使用 scoped slot 会传入两个参数\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", null, \"node\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"和\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", null, \"data\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"，分别表示当前节点的 Node 对象和当前节点的数据。注意：由于 jsfiddle 不支持 JSX 语法，所以\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", null, \"render-content\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"示例在 jsfiddle 中无法运行。但是在实际的项目中，只要正确地配置了相关依赖，就可以正常运行。\")])], -1\n/* HOISTED */\n);\n\nconst _hoisted_26 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"pre\", null, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", {\n  class: \"html\"\n}, \"<template>\\n  <div class=\\\"custom-tree-container\\\">\\n    <div class=\\\"block\\\">\\n      <p>使用 render-content</p>\\n      <hl-tree :data=\\\"data\\\" show-checkbox node-key=\\\"id\\\" default-expand-all :expand-on-click-node=\\\"false\\\" :render-content=\\\"renderContent\\\"></hl-tree>\\n    </div>\\n    <div class=\\\"block\\\">\\n      <p>使用 slot</p>\\n      <hl-tree :data=\\\"data\\\" show-checkbox node-key=\\\"id\\\" default-expand-all :expand-on-click-node=\\\"false\\\">\\n        <template #default=\\\"{ node, data }\\\">\\n          <hl-group full gap=\\\"var(--xs)\\\" align=\\\"between\\\">\\n            <hl-icon size=\\\"xs\\\" class=\\\"static\\\">\\n              <two-folder />\\n            </hl-icon>\\n            <span>{{ node.label }}</span>\\n            <hl-group gap=\\\"var(--md)\\\" class=\\\"static\\\">\\n              <a @click=\\\"append(data)\\\">\\n                Append\\n              </a>\\n              <a @click=\\\"remove(node, data)\\\">\\n                Delete\\n              </a>\\n            </hl-group>\\n          </hl-group>\\n        </template>\\n      </hl-tree>\\n    </div>\\n  </div>\\n</template>\\n\\n<script>\\n  import { defineComponent, ref } from 'vue'\\n  export default defineComponent({\\n    setup() {\\n      let id = 1000\\n      const data = ref([\\n        {\\n          id: 1,\\n          label: '一级 1',\\n          children: [\\n            {\\n              id: 4,\\n              label: '二级 1-1',\\n              children: [\\n                {\\n                  id: 9,\\n                  label: '三级 1-1-1',\\n                },\\n                {\\n                  id: 10,\\n                  label: '三级 1-1-2',\\n                },\\n              ],\\n            },\\n          ],\\n        },\\n        {\\n          id: 2,\\n          label: '一级 2',\\n          children: [\\n            {\\n              id: 5,\\n              label: '二级 2-1',\\n            },\\n            {\\n              id: 6,\\n              label: '二级 2-2',\\n            },\\n          ],\\n        },\\n        {\\n          id: 3,\\n          label: '一级 3',\\n          children: [\\n            {\\n              id: 7,\\n              label: '二级 3-1',\\n            },\\n            {\\n              id: 8,\\n              label: '二级 3-2',\\n            },\\n          ],\\n        },\\n      ])\\n\\n      const append = d => {\\n        const newChild = { id: id++, label: 'testtest', children: [] }\\n        if (!d.children) {\\n          d.children = []\\n        }\\n        d.children.push(newChild)\\n      }\\n      const remove = (node, d) => {\\n        const parent = node.parent\\n        const children = parent.data.children || parent.data\\n        const index = children.findIndex(d => d.id === d.id)\\n        children.splice(index, 1)\\n      }\\n      const renderContent = (h, { node, data, store }) => {\\n        return h(\\n          'span',\\n          {\\n            class: 'custom-tree-node',\\n          },\\n          h('span', null, node.label),\\n          h(\\n            'span',\\n            null,\\n            h(\\n              'a',\\n              {\\n                onClick: () => append(data),\\n              },\\n              'Append ',\\n            ),\\n            h(\\n              'a',\\n              {\\n                onClick: () => remove(node, data),\\n              },\\n              'Delete',\\n            ),\\n          ),\\n        )\\n      }\\n      return {\\n        data,\\n        append,\\n        remove,\\n        renderContent,\\n      }\\n    },\\n  })\\n</script>\\n\\n<style>\\n  .custom-tree-node {\\n    flex: 1;\\n    display: flex;\\n    align-items: center;\\n    justify-content: space-between;\\n    font-size: 14px;\\n    padding-right: 8px;\\n  }\\n</style>\\n\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_27 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"h2\", {\n  id: \"jie-dian-guo-lu\"\n}, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"a\", {\n  class: \"header-anchor\",\n  href: \"#jie-dian-guo-lu\"\n}), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" 节点过滤\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_28 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"p\", null, \"通过关键字过滤树节点\", -1\n/* HOISTED */\n);\n\nconst _hoisted_29 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"div\", null, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"p\", null, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"在需要对节点进行过滤时，调用 Tree 实例的\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", null, \"filter\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"方法，参数为关键字。需要注意的是，此时需要设置\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", null, \"filter-node-method\"), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"，值为过滤函数。\")])], -1\n/* HOISTED */\n);\n\nconst _hoisted_30 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"pre\", null, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", {\n  class: \"html\"\n}, \"<template>\\n  <hl-input placeholder=\\\"输入关键字进行过滤\\\" v-model=\\\"filterText\\\"> </hl-input>\\n\\n  <hl-tree class=\\\"filter-tree\\\" :data=\\\"data\\\" :props=\\\"defaultProps\\\" default-expand-all :filter-node-method=\\\"filterNode\\\" ref=\\\"tree\\\"> </hl-tree>\\n</template>\\n\\n<script>\\n  import { defineComponent, ref, watch } from 'vue'\\n  export default defineComponent({\\n    setup() {\\n      const filterText = ref('')\\n      const tree = ref(null)\\n      const data = ref([\\n        {\\n          id: 1,\\n          label: '一级 1',\\n          children: [\\n            {\\n              id: 4,\\n              label: '二级 1-1',\\n              children: [\\n                {\\n                  id: 9,\\n                  label: '三级 1-1-1',\\n                },\\n                {\\n                  id: 10,\\n                  label: '三级 1-1-2',\\n                },\\n              ],\\n            },\\n          ],\\n        },\\n        {\\n          id: 2,\\n          label: '一级 2',\\n          children: [\\n            {\\n              id: 5,\\n              label: '二级 2-1',\\n            },\\n            {\\n              id: 6,\\n              label: '二级 2-2',\\n            },\\n          ],\\n        },\\n        {\\n          id: 3,\\n          label: '一级 3',\\n          children: [\\n            {\\n              id: 7,\\n              label: '二级 3-1',\\n            },\\n            {\\n              id: 8,\\n              label: '二级 3-2',\\n            },\\n          ],\\n        },\\n      ])\\n      const defaultProps = ref({\\n        children: 'children',\\n        label: 'label',\\n      })\\n\\n      const filterNode = (value, data) => {\\n        if (!value) return true\\n        return data.label.indexOf(value) !== -1\\n      }\\n\\n      watch(filterText, val => {\\n        tree.value.filter(val)\\n      })\\n\\n      return {\\n        data,\\n        tree,\\n        defaultProps,\\n        filterText,\\n        filterNode,\\n      }\\n    },\\n  })\\n</script>\\n\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_31 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"h2\", {\n  id: \"shou-feng-qin-mo-shi\"\n}, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"a\", {\n  class: \"header-anchor\",\n  href: \"#shou-feng-qin-mo-shi\"\n}), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" 手风琴模式\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_32 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"p\", null, \"对于同一级的节点，每次只能展开一个\", -1\n/* HOISTED */\n);\n\nconst _hoisted_33 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"pre\", null, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", {\n  class: \"html\"\n}, \"<template>\\n  <hl-tree :data=\\\"data\\\" :props=\\\"defaultProps\\\" accordion @node-click=\\\"handleNodeClick\\\"> </hl-tree>\\n</template>\\n\\n<script>\\n  import { defineComponent, ref } from 'vue'\\n  export default defineComponent({\\n    setup() {\\n      const data = ref([\\n        {\\n          label: '一级 1',\\n          children: [\\n            {\\n              label: '二级 1-1',\\n              children: [\\n                {\\n                  label: '三级 1-1-1',\\n                },\\n              ],\\n            },\\n          ],\\n        },\\n        {\\n          label: '一级 2',\\n          children: [\\n            {\\n              label: '二级 2-1',\\n              children: [\\n                {\\n                  label: '三级 2-1-1',\\n                },\\n              ],\\n            },\\n            {\\n              label: '二级 2-2',\\n              children: [\\n                {\\n                  label: '三级 2-2-1',\\n                },\\n              ],\\n            },\\n          ],\\n        },\\n        {\\n          label: '一级 3',\\n          children: [\\n            {\\n              label: '二级 3-1',\\n              children: [\\n                {\\n                  label: '三级 3-1-1',\\n                },\\n              ],\\n            },\\n            {\\n              label: '二级 3-2',\\n              children: [\\n                {\\n                  label: '三级 3-2-1',\\n                },\\n              ],\\n            },\\n          ],\\n        },\\n      ])\\n      const defaultProps = ref({\\n        children: 'children',\\n        label: 'label',\\n      })\\n\\n      const handleNodeClick = data => {\\n        console.log(data)\\n      }\\n      return {\\n        data,\\n        defaultProps,\\n        handleNodeClick,\\n      }\\n    },\\n  })\\n</script>\\n\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_34 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"h2\", {\n  id: \"ke-tuo-zhuai-jie-dian\"\n}, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"a\", {\n  class: \"header-anchor\",\n  href: \"#ke-tuo-zhuai-jie-dian\"\n}), /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" 可拖拽节点\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_35 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"p\", null, \"通过 draggable 属性可让节点变为可拖拽。\", -1\n/* HOISTED */\n);\n\nconst _hoisted_36 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"pre\", null, [/*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"code\", {\n  class: \"html\"\n}, \"<template>\\n  <hl-tree\\n    :data=\\\"data\\\"\\n    node-key=\\\"id\\\"\\n    default-expand-all\\n    @node-drag-start=\\\"handleDragStart\\\"\\n    @node-drag-enter=\\\"handleDragEnter\\\"\\n    @node-drag-leave=\\\"handleDragLeave\\\"\\n    @node-drag-over=\\\"handleDragOver\\\"\\n    @node-drag-end=\\\"handleDragEnd\\\"\\n    @node-drop=\\\"handleDrop\\\"\\n    draggable\\n    :allow-drop=\\\"allowDrop\\\"\\n    :allow-drag=\\\"allowDrag\\\"\\n  >\\n  </hl-tree>\\n</template>\\n\\n<script>\\n  import { defineComponent, ref } from 'vue'\\n  export default defineComponent({\\n    setup() {\\n      const data = ref([\\n        {\\n          id: 1,\\n          label: '一级 1',\\n          children: [\\n            {\\n              id: 4,\\n              label: '二级 1-1',\\n              children: [\\n                {\\n                  id: 9,\\n                  label: '三级 1-1-1',\\n                },\\n                {\\n                  id: 10,\\n                  label: '三级 1-1-2',\\n                },\\n              ],\\n            },\\n          ],\\n        },\\n        {\\n          id: 2,\\n          label: '一级 2',\\n          children: [\\n            {\\n              id: 5,\\n              label: '二级 2-1',\\n            },\\n            {\\n              id: 6,\\n              label: '二级 2-2',\\n            },\\n          ],\\n        },\\n        {\\n          id: 3,\\n          label: '一级 3',\\n          children: [\\n            {\\n              id: 7,\\n              label: '二级 3-1',\\n            },\\n            {\\n              id: 8,\\n              label: '二级 3-2',\\n              children: [\\n                {\\n                  id: 11,\\n                  label: '三级 3-2-1',\\n                },\\n                {\\n                  id: 12,\\n                  label: '三级 3-2-2',\\n                },\\n                {\\n                  id: 13,\\n                  label: '三级 3-2-3',\\n                },\\n              ],\\n            },\\n          ],\\n        },\\n      ])\\n      const defaultProps = ref({\\n        children: 'children',\\n        label: 'label',\\n      })\\n\\n      const handleDragStart = (node, ev) => {\\n        console.log('drag start', node)\\n      }\\n      const handleDragEnter = (draggingNode, dropNode, ev) => {\\n        console.log('tree drag enter: ', dropNode.label)\\n      }\\n      const handleDragLeave = (draggingNode, dropNode, ev) => {\\n        console.log('tree drag leave: ', dropNode.label)\\n      }\\n      const handleDragOver = (draggingNode, dropNode, ev) => {\\n        console.log('tree drag over: ', dropNode.label)\\n      }\\n      const handleDragEnd = (draggingNode, dropNode, dropType, ev) => {\\n        console.log('tree drag end: ', dropNode && dropNode.label, dropType)\\n      }\\n      const handleDrop = (draggingNode, dropNode, dropType, ev) => {\\n        console.log('tree drop: ', dropNode.label, dropType)\\n      }\\n      const allowDrop = (draggingNode, dropNode, type) => {\\n        if (dropNode.data.label === '二级 3-1') {\\n          return type !== 'inner'\\n        } else {\\n          return true\\n        }\\n      }\\n      const allowDrag = draggingNode => {\\n        return draggingNode.data.label.indexOf('三级 3-2-2') === -1\\n      }\\n      return {\\n        data,\\n        defaultProps,\\n        handleDragStart,\\n        handleDragEnter,\\n        handleDragLeave,\\n        handleDragOver,\\n        handleDragEnd,\\n        handleDrop,\\n        allowDrop,\\n        allowDrag,\\n      }\\n    },\\n  })\\n</script>\\n\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_37 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createStaticVNode\"])(\"<h2 id=\\\"attributes\\\"><a class=\\\"header-anchor\\\" href=\\\"#attributes\\\"></a> Attributes</h2><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>data</td><td>展示数据</td><td>array</td><td>—</td><td>—</td></tr><tr><td>empty-text</td><td>内容为空的时候展示的文本</td><td>String</td><td>—</td><td>—</td></tr><tr><td>node-key</td><td>每个树节点用来作为唯一标识的属性，整棵树应该是唯一的</td><td>String</td><td>—</td><td>—</td></tr><tr><td>props</td><td>配置选项，具体看下表</td><td>object</td><td>—</td><td>—</td></tr><tr><td>render-after-expand</td><td>是否在第一次展开某个树节点后才渲染其子节点</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>load</td><td>加载子树数据的方法，仅当 lazy 属性为 true 时生效</td><td>function(node, resolve)</td><td>—</td><td>—</td></tr><tr><td>render-content</td><td>树节点的内容区的渲染 Function</td><td>Function(h, { node, data, store })</td><td>—</td><td>—</td></tr><tr><td>highlight-current</td><td>是否高亮当前选中节点，默认值是 false。</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>default-expand-all</td><td>是否默认展开所有节点</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>expand-on-click-node</td><td>是否在点击节点的时候展开或者收缩节点， 默认值为 true，如果为 false，则只有点箭头图标的时候才会展开或者收缩节点。</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>check-on-click-node</td><td>是否在点击节点的时候选中节点，默认值为 false，即只有在点击复选框时才会选中节点。</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>auto-expand-parent</td><td>展开子节点的时候是否自动展开父节点</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>default-expanded-keys</td><td>默认展开的节点的 key 的数组</td><td>array</td><td>—</td><td>—</td></tr><tr><td>show-checkbox</td><td>节点是否可被选择</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>check-strictly</td><td>在显示复选框的情况下，是否严格的遵循父子不互相关联的做法，默认为 false</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>default-checked-keys</td><td>默认勾选的节点的 key 的数组</td><td>array</td><td>—</td><td>—</td></tr><tr><td>current-node-key</td><td>当前选中的节点</td><td>string, number</td><td>—</td><td>—</td></tr><tr><td>filter-node-method</td><td>对树节点进行筛选时执行的方法，返回 true 表示这个节点可以显示，返回 false 则表示这个节点会被隐藏</td><td>Function(value, data, node)</td><td>—</td><td>—</td></tr><tr><td>accordion</td><td>是否每次只打开一个同级树节点展开</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>indent</td><td>相邻级节点间的水平缩进，单位为像素</td><td>number</td><td>—</td><td>16</td></tr><tr><td>icon-class</td><td>自定义树节点的图标</td><td>string</td><td>-</td><td>-</td></tr><tr><td>lazy</td><td>是否懒加载子节点，需与 load 方法结合使用</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>draggable</td><td>是否开启拖拽节点功能</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>allow-drag</td><td>判断节点能否被拖拽</td><td>Function(node)</td><td>—</td><td>—</td></tr><tr><td>allow-drop</td><td>拖拽时判定目标节点能否被放置。<code>type</code> 参数有三种情况：&#39;prev&#39;、&#39;inner&#39; 和 &#39;next&#39;，分别表示放置在目标节点前、插入至目标节点和放置在目标节点后</td><td>Function(draggingNode, dropNode, type)</td><td>—</td><td>—</td></tr></tbody></table><h3 id=\\\"props\\\"><a class=\\\"header-anchor\\\" href=\\\"#props\\\"></a> props</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>label</td><td>指定节点标签为节点对象的某个属性值</td><td>string, function(data, node)</td><td>—</td><td>—</td></tr><tr><td>children</td><td>指定子树为节点对象的某个属性值</td><td>string</td><td>—</td><td>—</td></tr><tr><td>disabled</td><td>指定节点选择框是否禁用为节点对象的某个属性值</td><td>boolean, function(data, node)</td><td>—</td><td>—</td></tr><tr><td>isLeaf</td><td>指定节点是否为叶子节点，仅在指定了 lazy 属性的情况下生效</td><td>boolean, function(data, node)</td><td>—</td><td>—</td></tr></tbody></table><h3 id=\\\"fang-fa\\\"><a class=\\\"header-anchor\\\" href=\\\"#fang-fa\\\"></a> 方法</h3><p><code>Tree</code> 内部使用了 Node 类型的对象来包装用户传入的数据，用来保存目前节点的状态。 <code>Tree</code> 拥有如下方法：</p><table><thead><tr><th>方法名</th><th>说明</th><th>参数</th></tr></thead><tbody><tr><td>filter</td><td>对树节点进行筛选操作</td><td>接收一个任意类型的参数，该参数会在 filter-node-method 中作为第一个参数</td></tr><tr><td>updateKeyChildren</td><td>通过 keys 设置节点子元素，使用此方法必须设置 node-key 属性</td><td>(key, data) 接收两个参数，1. 节点 key 2. 节点数据的数组</td></tr><tr><td>getCheckedNodes</td><td>若节点可被选择（即 <code>show-checkbox</code> 为 <code>true</code>），则返回目前被选中的节点所组成的数组</td><td>(leafOnly, includeHalfChecked) 接收两个 boolean 类型的参数，1. 是否只是叶子节点，默认值为 <code>false</code> 2. 是否包含半选节点，默认值为 <code>false</code></td></tr><tr><td>setCheckedNodes</td><td>设置目前勾选的节点，使用此方法必须设置 node-key 属性</td><td>(nodes) 接收勾选节点数据的数组</td></tr><tr><td>getCheckedKeys</td><td>若节点可被选择（即 <code>show-checkbox</code> 为 <code>true</code>），则返回目前被选中的节点的 key 所组成的数组</td><td>(leafOnly) 接收一个 boolean 类型的参数，若为 <code>true</code> 则仅返回被选中的叶子节点的 keys，默认值为 <code>false</code></td></tr><tr><td>setCheckedKeys</td><td>通过 keys 设置目前勾选的节点，使用此方法必须设置 node-key 属性</td><td>(keys, leafOnly) 接收两个参数，1. 勾选节点的 key 的数组 2. boolean 类型的参数，若为 <code>true</code> 则仅设置叶子节点的选中状态，默认值为 <code>false</code></td></tr><tr><td>setChecked</td><td>通过 key / data 设置某个节点的勾选状态，使用此方法必须设置 node-key 属性</td><td>(key/data, checked, deep) 接收三个参数，1. 勾选节点的 key 或者 data 2. boolean 类型，节点是否选中 3. boolean 类型，是否设置子节点 ，默认为 false</td></tr><tr><td>getHalfCheckedNodes</td><td>若节点可被选择（即 <code>show-checkbox</code> 为 <code>true</code>），则返回目前半选中的节点所组成的数组</td><td>-</td></tr><tr><td>getHalfCheckedKeys</td><td>若节点可被选择（即 <code>show-checkbox</code> 为 <code>true</code>），则返回目前半选中的节点的 key 所组成的数组</td><td>-</td></tr><tr><td>getCurrentKey</td><td>获取当前被选中节点的 key，使用此方法必须设置 node-key 属性，若没有节点被选中则返回 null</td><td>—</td></tr><tr><td>getCurrentNode</td><td>获取当前被选中节点的 data，若没有节点被选中则返回 null</td><td>—</td></tr><tr><td>setCurrentKey</td><td>通过 key 设置某个节点的当前选中状态，使用此方法必须设置 node-key 属性</td><td>(key, shouldAutoExpandParent=true) 1. 待被选节点的 key，若为 null 则取消当前高亮的节点 2. 是否扩展父节点</td></tr><tr><td>setCurrentNode</td><td>通过 node 设置某个节点的当前选中状态，使用此方法必须设置 node-key 属性</td><td>(node, shouldAutoExpandParent=true) 1. 待被选节点的 node 2. 是否扩展父节点</td></tr><tr><td>getNode</td><td>根据 data 或者 key 拿到 Tree 组件中的 node</td><td>(data) 要获得 node 的 key 或者 data</td></tr><tr><td>getNodePath</td><td>根据 data 或者 key 拿到 Tree 组件中的 node 完整路径</td><td>(data) 要获得 node 的 data 数组</td></tr><tr><td>remove</td><td>删除 Tree 中的一个节点，使用此方法必须设置 node-key 属性</td><td>(data) 要删除的节点的 data 或者 node</td></tr><tr><td>append</td><td>为 Tree 中的一个节点追加一个子节点</td><td>(data, parentNode) 接收两个参数，1. 要追加的子节点的 data 2. 子节点的 parent 的 data、key 或者 node</td></tr><tr><td>insertBefore</td><td>为 Tree 的一个节点的前面增加一个节点</td><td>(data, refNode) 接收两个参数，1. 要增加的节点的 data 2. 要增加的节点的后一个节点的 data、key 或者 node</td></tr><tr><td>insertAfter</td><td>为 Tree 的一个节点的后面增加一个节点</td><td>(data, refNode) 接收两个参数，1. 要增加的节点的 data 2. 要增加的节点的前一个节点的 data、key 或者 node</td></tr></tbody></table><h3 id=\\\"events\\\"><a class=\\\"header-anchor\\\" href=\\\"#events\\\"></a> Events</h3><table><thead><tr><th>事件名称</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>node-click</td><td>节点被点击时的回调</td><td>共三个参数，依次为：传递给 <code>data</code> 属性的数组中该节点所对应的对象、节点对应的 Node、节点组件本身。</td></tr><tr><td>node-contextmenu</td><td>当某一节点被鼠标右键点击时会触发该事件</td><td>共四个参数，依次为：event、传递给 <code>data</code> 属性的数组中该节点所对应的对象、节点对应的 Node、节点组件本身。</td></tr><tr><td>check-change</td><td>节点选中状态发生变化时的回调</td><td>共三个参数，依次为：传递给 <code>data</code> 属性的数组中该节点所对应的对象、节点本身是否被选中、节点的子树中是否有被选中的节点</td></tr><tr><td>check</td><td>当复选框被点击的时候触发</td><td>共两个参数，依次为：传递给 <code>data</code> 属性的数组中该节点所对应的对象、树目前的选中状态对象，包含 checkedNodes、checkedKeys、halfCheckedNodes、halfCheckedKeys 四个属性</td></tr><tr><td>current-change</td><td>当前选中节点变化时触发的事件</td><td>共两个参数，依次为：当前节点的数据，当前节点的 Node 对象</td></tr><tr><td>node-expand</td><td>节点被展开时触发的事件</td><td>共三个参数，依次为：传递给 <code>data</code> 属性的数组中该节点所对应的对象、节点对应的 Node、节点组件本身</td></tr><tr><td>node-collapse</td><td>节点被关闭时触发的事件</td><td>共三个参数，依次为：传递给 <code>data</code> 属性的数组中该节点所对应的对象、节点对应的 Node、节点组件本身</td></tr><tr><td>node-drag-start</td><td>节点开始拖拽时触发的事件</td><td>共两个参数，依次为：被拖拽节点对应的 Node、event</td></tr><tr><td>node-drag-enter</td><td>拖拽进入其他节点时触发的事件</td><td>共三个参数，依次为：被拖拽节点对应的 Node、所进入节点对应的 Node、event</td></tr><tr><td>node-drag-leave</td><td>拖拽离开某个节点时触发的事件</td><td>共三个参数，依次为：被拖拽节点对应的 Node、所离开节点对应的 Node、event</td></tr><tr><td>node-drag-over</td><td>在拖拽节点时触发的事件（类似浏览器的 mouseover 事件）</td><td>共三个参数，依次为：被拖拽节点对应的 Node、当前进入节点对应的 Node、event</td></tr><tr><td>node-drag-end</td><td>拖拽结束时（可能未成功）触发的事件</td><td>共四个参数，依次为：被拖拽节点对应的 Node、结束拖拽时最后进入的节点（可能为空）、被拖拽节点的放置位置（before、after、inner）、event</td></tr><tr><td>node-drop</td><td>拖拽成功完成时触发的事件</td><td>共四个参数，依次为：被拖拽节点对应的 Node、结束拖拽时最后进入的节点、被拖拽节点的放置位置（before、after、inner）、event</td></tr></tbody></table><h3 id=\\\"scoped-slot\\\"><a class=\\\"header-anchor\\\" href=\\\"#scoped-slot\\\"></a> Scoped Slot</h3><table><thead><tr><th>name</th><th>说明</th></tr></thead><tbody><tr><td>—</td><td>自定义树节点的内容，参数为 { node, data }</td></tr></tbody></table>\", 11);\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_hl_demo0 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"hl-demo0\");\n\n  const _component_demo_block = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"demo-block\");\n\n  const _component_hl_demo1 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"hl-demo1\");\n\n  const _component_hl_demo2 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"hl-demo2\");\n\n  const _component_hl_demo3 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"hl-demo3\");\n\n  const _component_hl_demo4 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"hl-demo4\");\n\n  const _component_hl_demo5 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"hl-demo5\");\n\n  const _component_hl_demo6 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"hl-demo6\");\n\n  const _component_hl_demo7 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"hl-demo7\");\n\n  const _component_hl_demo8 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"hl-demo8\");\n\n  const _component_hl_demo9 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"hl-demo9\");\n\n  const _component_right_nav = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"right-nav\");\n\n  return Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"openBlock\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementBlock\"])(\"section\", _hoisted_1, [Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createElementVNode\"])(\"div\", _hoisted_2, [_hoisted_3, _hoisted_4, Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n    source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_hl_demo0)]),\n    highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [_hoisted_5]),\n    _: 1\n    /* STABLE */\n\n  }), _hoisted_6, _hoisted_7, Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n    source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_hl_demo1)]),\n    highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [_hoisted_8]),\n    _: 1\n    /* STABLE */\n\n  }), _hoisted_9, Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n    source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_hl_demo2)]),\n    highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [_hoisted_11]),\n    default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [_hoisted_10]),\n    _: 1\n    /* STABLE */\n\n  }), _hoisted_12, _hoisted_13, Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n    source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_hl_demo3)]),\n    highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [_hoisted_15]),\n    default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [_hoisted_14]),\n    _: 1\n    /* STABLE */\n\n  }), _hoisted_16, _hoisted_17, Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n    source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_hl_demo4)]),\n    highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [_hoisted_19]),\n    default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [_hoisted_18]),\n    _: 1\n    /* STABLE */\n\n  }), _hoisted_20, Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n    source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_hl_demo5)]),\n    highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [_hoisted_22]),\n    default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [_hoisted_21]),\n    _: 1\n    /* STABLE */\n\n  }), _hoisted_23, _hoisted_24, Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n    source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_hl_demo6)]),\n    highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [_hoisted_26]),\n    default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [_hoisted_25]),\n    _: 1\n    /* STABLE */\n\n  }), _hoisted_27, _hoisted_28, Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n    source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_hl_demo7)]),\n    highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [_hoisted_30]),\n    default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [_hoisted_29]),\n    _: 1\n    /* STABLE */\n\n  }), _hoisted_31, _hoisted_32, Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n    source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_hl_demo8)]),\n    highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [_hoisted_33]),\n    _: 1\n    /* STABLE */\n\n  }), _hoisted_34, _hoisted_35, Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n    source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_hl_demo9)]),\n    highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [_hoisted_36]),\n    _: 1\n    /* STABLE */\n\n  }), _hoisted_37]), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_right_nav)]);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/templateLoader.js?!./node_modules/vue-loader/dist/index.js?!./website/md-loader/index.js!./website/docs/zh-CN/tree.md?vue&type=template&id=fee90450\n");

/***/ }),

/***/ "./website/docs/zh-CN/tree.md":
/*!************************************!*\
  !*** ./website/docs/zh-CN/tree.md ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _tree_md_vue_type_template_id_fee90450__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tree.md?vue&type=template&id=fee90450 */ \"./website/docs/zh-CN/tree.md?vue&type=template&id=fee90450\");\n/* harmony import */ var _tree_md_vue_type_script_lang_ts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tree.md?vue&type=script&lang=ts */ \"./website/docs/zh-CN/tree.md?vue&type=script&lang=ts\");\n/* empty/unused harmony star reexport */\n\n\n_tree_md_vue_type_script_lang_ts__WEBPACK_IMPORTED_MODULE_1__[\"default\"].render = _tree_md_vue_type_template_id_fee90450__WEBPACK_IMPORTED_MODULE_0__[\"render\"]\n/* hot reload */\nif (false) {}\n\n_tree_md_vue_type_script_lang_ts__WEBPACK_IMPORTED_MODULE_1__[\"default\"].__file = \"website/docs/zh-CN/tree.md\"\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (_tree_md_vue_type_script_lang_ts__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi93ZWJzaXRlL2RvY3MvemgtQ04vdHJlZS5tZC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3dlYnNpdGUvZG9jcy96aC1DTi90cmVlLm1kPzY2ZDAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmVuZGVyIH0gZnJvbSBcIi4vdHJlZS5tZD92dWUmdHlwZT10ZW1wbGF0ZSZpZD1mZWU5MDQ1MFwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL3RyZWUubWQ/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9dHNcIlxuZXhwb3J0ICogZnJvbSBcIi4vdHJlZS5tZD92dWUmdHlwZT1zY3JpcHQmbGFuZz10c1wiXG5zY3JpcHQucmVuZGVyID0gcmVuZGVyXG4vKiBob3QgcmVsb2FkICovXG5pZiAobW9kdWxlLmhvdCkge1xuICBzY3JpcHQuX19obXJJZCA9IFwiZmVlOTA0NTBcIlxuICBjb25zdCBhcGkgPSBfX1ZVRV9ITVJfUlVOVElNRV9fXG4gIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgaWYgKCFhcGkuY3JlYXRlUmVjb3JkKCdmZWU5MDQ1MCcsIHNjcmlwdCkpIHtcbiAgICBhcGkucmVsb2FkKCdmZWU5MDQ1MCcsIHNjcmlwdClcbiAgfVxuICBcbiAgbW9kdWxlLmhvdC5hY2NlcHQoXCIuL3RyZWUubWQ/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9ZmVlOTA0NTBcIiwgKCkgPT4ge1xuICAgIGFwaS5yZXJlbmRlcignZmVlOTA0NTAnLCByZW5kZXIpXG4gIH0pXG5cbn1cblxuc2NyaXB0Ll9fZmlsZSA9IFwid2Vic2l0ZS9kb2NzL3poLUNOL3RyZWUubWRcIlxuXG5leHBvcnQgZGVmYXVsdCBzY3JpcHQiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQVlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./website/docs/zh-CN/tree.md\n");

/***/ }),

/***/ "./website/docs/zh-CN/tree.md?vue&type=script&lang=ts":
/*!************************************************************!*\
  !*** ./website/docs/zh-CN/tree.md?vue&type=script&lang=ts ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_dist_index_js_ref_2_0_md_loader_index_js_tree_md_vue_type_script_lang_ts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/babel-loader/lib!../../../node_modules/vue-loader/dist??ref--2-0!../../md-loader!./tree.md?vue&type=script&lang=ts */ \"./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/index.js?!./website/md-loader/index.js!./website/docs/zh-CN/tree.md?vue&type=script&lang=ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_dist_index_js_ref_2_0_md_loader_index_js_tree_md_vue_type_script_lang_ts__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; });\n\n/* empty/unused harmony star reexport */ //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi93ZWJzaXRlL2RvY3MvemgtQ04vdHJlZS5tZD92dWUmdHlwZT1zY3JpcHQmbGFuZz10cy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3dlYnNpdGUvZG9jcy96aC1DTi90cmVlLm1kPzU2ZjIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgZGVmYXVsdCB9IGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2Rpc3QvaW5kZXguanM/P3JlZi0tMi0wIS4uLy4uL21kLWxvYWRlci9pbmRleC5qcyEuL3RyZWUubWQ/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9dHNcIjsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvZGlzdC9pbmRleC5qcz8/cmVmLS0yLTAhLi4vLi4vbWQtbG9hZGVyL2luZGV4LmpzIS4vdHJlZS5tZD92dWUmdHlwZT1zY3JpcHQmbGFuZz10c1wiIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./website/docs/zh-CN/tree.md?vue&type=script&lang=ts\n");

/***/ }),

/***/ "./website/docs/zh-CN/tree.md?vue&type=template&id=fee90450":
/*!******************************************************************!*\
  !*** ./website/docs/zh-CN/tree.md?vue&type=template&id=fee90450 ***!
  \******************************************************************/
/*! exports provided: render */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_dist_templateLoader_js_ref_6_node_modules_vue_loader_dist_index_js_ref_2_0_md_loader_index_js_tree_md_vue_type_template_id_fee90450__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/babel-loader/lib!../../../node_modules/vue-loader/dist/templateLoader.js??ref--6!../../../node_modules/vue-loader/dist??ref--2-0!../../md-loader!./tree.md?vue&type=template&id=fee90450 */ \"./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/dist/templateLoader.js?!./node_modules/vue-loader/dist/index.js?!./website/md-loader/index.js!./website/docs/zh-CN/tree.md?vue&type=template&id=fee90450\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return _node_modules_babel_loader_lib_index_js_node_modules_vue_loader_dist_templateLoader_js_ref_6_node_modules_vue_loader_dist_index_js_ref_2_0_md_loader_index_js_tree_md_vue_type_template_id_fee90450__WEBPACK_IMPORTED_MODULE_0__[\"render\"]; });\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi93ZWJzaXRlL2RvY3MvemgtQ04vdHJlZS5tZD92dWUmdHlwZT10ZW1wbGF0ZSZpZD1mZWU5MDQ1MC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3dlYnNpdGUvZG9jcy96aC1DTi90cmVlLm1kPzdiY2UiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvZGlzdC90ZW1wbGF0ZUxvYWRlci5qcz8/cmVmLS02IS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2Rpc3QvaW5kZXguanM/P3JlZi0tMi0wIS4uLy4uL21kLWxvYWRlci9pbmRleC5qcyEuL3RyZWUubWQ/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9ZmVlOTA0NTBcIiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./website/docs/zh-CN/tree.md?vue&type=template&id=fee90450\n");

/***/ })

}]);